<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <siteinfo>
    <sitename>Wikipedia</sitename>
    <dbname>enwiki</dbname>
    <base>https://en.wikipedia.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.33.0-wmf.6</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikipedia</namespace>
      <namespace key="5" case="first-letter">Wikipedia talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="100" case="first-letter">Portal</namespace>
      <namespace key="101" case="first-letter">Portal talk</namespace>
      <namespace key="108" case="first-letter">Book</namespace>
      <namespace key="109" case="first-letter">Book talk</namespace>
      <namespace key="118" case="first-letter">Draft</namespace>
      <namespace key="119" case="first-letter">Draft talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="2300" case="first-letter">Gadget</namespace>
      <namespace key="2301" case="first-letter">Gadget talk</namespace>
      <namespace key="2302" case="case-sensitive">Gadget definition</namespace>
      <namespace key="2303" case="case-sensitive">Gadget definition talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Akhiezer's theorem</title>
    <ns>0</ns>
    <id>30533446</id>
    <revision>
      <id>819370589</id>
      <parentid>654148798</parentid>
      <timestamp>2018-01-09T00:29:12Z</timestamp>
      <contributor>
        <username>JCW-CleanerBot</username>
        <id>31737083</id>
      </contributor>
      <minor/>
      <comment>/* References */[[User:JCW-CleanerBot#Logic|task]], replaced: Doklady Akad. → Doklady Akademii using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1755">In the [[mathematics|mathematical]] field of [[complex analysis]], '''Akhiezer's theorem''' is a result about [[entire function]]s proved by [[Naum Akhiezer]].&lt;ref&gt;see {{harvtxt|Akhiezer|1948}}.&lt;/ref&gt;

==Statement==
Let {{math|''f''(''z'')}} be an [[entire function]] of [[exponential type]] {{math|''&amp;tau;''}}, with {{math|''f''(''x'')&amp;nbsp;&amp;ge;&amp;nbsp;0}} for real {{math|''x''}}. Then the following are equivalent:

* There exists an [[entire function]] {{math|''F''}}, of [[exponential type]] {{math|''&amp;tau;''/2}}, having all its zeros in the (closed) upper half plane, such that

:: &lt;math&gt;f(z)=F(z)\overline{F(\overline{z})}&lt;/math&gt;

* One has:

::&lt;math&gt;
\sum|\operatorname{Im}(1/z_{n})|&lt;\infty
&lt;/math&gt;
where {{math|''z''&lt;sub&gt;''n''&lt;/sub&gt;}} are the zeros of {{math|''f''}}.

==Remarks==
It is not hard to show that the [[Fejér–Riesz theorem]] is a special case.&lt;ref&gt;see {{harvtxt|Boas|1954}} and {{harvtxt|Boas|1944}} for references.&lt;/ref&gt;

== Notes ==
{{reflist}}

==References==
*{{ citation
|    last   = Boas
|    first  = Jr., Ralph Philip
|     title = Entire functions
| publisher = Academic Press Inc.
|   location = New York
|      year = 1954
|     pages = 124–132
}}
*{{ citation
|    last   = Boas
|    first  = Jr., R. P.
|     title = Functions of exponential type. I
|   journal = Duke Math. J.
|    volume = 11
|      year = 1944
|     pages = 9–15
|      issn = 0012-7094
| doi=10.1215/s0012-7094-44-01102-6
}}
*{{citation
|    last   = Akhiezer
|    first  = N. I.
|     title = On the theory of entire functions of finite degree
|   journal = Doklady Akademii Nauk SSSR (N.S.)
|    volume = 63
|      year = 1948
|     pages = 475–478
|        mr = 0027333
}}

[[Category:Theorems in complex analysis]]


{{mathanalysis-stub}}</text>
      <sha1>8p7r90nrgwnan0lsjku42mddveg3q6t</sha1>
    </revision>
  </page>
  <page>
    <title>Alberto González Domínguez</title>
    <ns>0</ns>
    <id>35261707</id>
    <revision>
      <id>863059781</id>
      <parentid>861421981</parentid>
      <timestamp>2018-10-08T13:09:15Z</timestamp>
      <contributor>
        <username>InternetArchiveBot</username>
        <id>27015025</id>
      </contributor>
      <comment>Rescuing 2 sources and tagging 0 as dead. #IABot (v2.0beta9)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2562">'''Alberto González Domínguez''' (11 April 1904 in [[Buenos Aires]] – 14 September 1982 in Buenos Aires) was an Argentine mathematician working on [[mathematical analysis|analysis]], [[probability theory]] and [[quantum field theory]].&lt;ref name=Trione&gt;{{cite web|url=http://gonzalezdominguez.com.ar/bsketcheng.htm |title=Dr. Alberto González Domínguez (1904-1982): Biographical sketch |last=Trione |first=Susana Elena |date=September 2005 |publisher=Instituto Argentino de Matemática |accessdate=14 April 2012 |deadurl=yes |archiveurl=https://web.archive.org/web/20130724175527/http://gonzalezdominguez.com.ar/bsketcheng.htm |archivedate=24 July 2013 }}&lt;/ref&gt;&lt;ref name=Balanzat&gt;{{cite web|url=http://www.iam.conicet.gov.ar/cms/?q=node/%2092|title=Un hombre bueno y un matemático sabio|last=Balanzat|first=Manuel|date=1983|publisher=Originally appeared in the magazine of the ''Unión Matemática Argentina'', reproduced on the website of the ''Instituto Argentino de Matemática''|language=Spanish|accessdate=14 April 2012|archive-url=https://web.archive.org/web/20131020065914/http://www.iam.conicet.gov.ar/cms/?q=node%2F%2092|archive-date=2013-10-20|dead-url=yes|df=}}&lt;/ref&gt;

González Domínguez received his Ph.D. from the [[University of Buenos Aires]] in 1939 under the direction of [[Julio Rey Pastor]]. That same year, González Domínguez received a [[Guggenheim Fellowship]] and worked for two years with [[Jacob Tamarkin]] at [[Brown University]].&lt;ref name=Trione/&gt;&lt;ref&gt;{{cite web|url=http://www.gf.org/fellows/5581-alberto-gonzalez-dominguez |title=Fellows Finder |publisher=[[John Simon Guggenheim Memorial Foundation]] |accessdate=14 April 2012 |deadurl=yes |archiveurl=https://web.archive.org/web/20140102192926/http://www.gf.org/fellows/5581-alberto-gonzalez-dominguez |archivedate=2 January 2014 }}&lt;/ref&gt; González Domínguez spent most of his career as a professor at the University of Buenos Aires.&lt;ref name=Trione/&gt;

==References==
{{reflist}}

==External links==
*[https://web.archive.org/web/20140102234001/http://www.gonzalezdominguez.com.ar/cveng.htm Full curriculum vitae including the list of publications]
*{{MathGenealogy|id=42450}}

{{authority control}}

{{DEFAULTSORT:Gonzalez Dominguez, Alberto}}
[[Category:Argentine mathematicians]]
[[Category:Mathematical analysts]]
[[Category:Guggenheim Fellows]]
[[Category:University of Buenos Aires faculty]]
[[Category:Argentine writers in French]]
[[Category:Argentine writers in German]]
[[Category:1904 births]]
[[Category:1982 deaths]]
[[Category:20th-century mathematicians]]</text>
      <sha1>3d66d54u1tkifdyzocwsivz3sqjmhmw</sha1>
    </revision>
  </page>
  <page>
    <title>Ambient space</title>
    <ns>0</ns>
    <id>2854628</id>
    <revision>
      <id>808069949</id>
      <parentid>796726059</parentid>
      <timestamp>2017-10-31T18:10:31Z</timestamp>
      <contributor>
        <username>Tom.Reding</username>
        <id>9784415</id>
      </contributor>
      <minor/>
      <comment>/* Further reading */WL 1 first-publisher; [[WP:GenFixes]] on; using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1875">An '''ambient space''' or '''ambient configuration space''' is the [[dimensional space|space]] surrounding an object.

==Mathematics==
[[File:Euclidian and non euclidian geometry.png|thumb|upright=1.3|Three examples of different geometries:  [[Euclidean geometry|Euclidean]], [[elliptical geometry|elliptical]], and [[hyperbolic geometry]]]]

In [[mathematics]], especially in [[geometry]] and [[topology]], an ''ambient space'' is the space surrounding a [[mathematical object]].  For example, a [[line (mathematics)|line]] may be studied in isolation, or it may be studied as an object in [[two-dimensional]] space—in which case the ambient space is the [[plane (mathematics)|plane]], or as an object in [[three-dimensional space]]—in which case the ambient space is three-dimensional.  To see why this makes a difference, consider the statement "Lines that never meet are necessarily [[parallel (geometry)|parallel]]."  This is true if the ambient space is two-dimensional, but false if the ambient space is three-dimensional, because in the latter case the lines could be [[skew lines]], rather than parallel.

==See also==
* [[Configuration space (mathematics)|Configuration space]]
* [[Manifold]] and [[ambient manifold]]
* [[Submanifold]]s and [[Hypersurface]]s
* [[Riemannian manifolds]]
* [[Ricci curvature]]
* [[Differential form]]

==Further reading==
*{{cite book |first=W. H. A. |last=Schilders |first2=E. J. W. |last2=ter Maten |first3=Philippe G. |last3=Ciarlet |title=Numerical Methods in Electromagnetics |volume=Special Volume |location= |publisher=[[Elsevier]] |year=2005 |isbn=0-444-51375-2 |pages=120ff }}
*{{cite book |authorlink=Stephen Wiggins |first=Stephen |last=Wiggins |title=Chaotic Transport in Dynamical Systems |location=Berlin |publisher=Springer |year=1992 |isbn=3-540-97522-5 |pages=209ff }}

[[Category:Geometry]]
[[Category:Topology]]</text>
      <sha1>c04gk7zosgdx616u9gm1mzqr6mrldi4</sha1>
    </revision>
  </page>
  <page>
    <title>Base (geometry)</title>
    <ns>0</ns>
    <id>9579379</id>
    <revision>
      <id>857112003</id>
      <parentid>857096510</parentid>
      <timestamp>2018-08-29T17:01:26Z</timestamp>
      <contributor>
        <username>Bryanrutherford0</username>
        <id>19250086</id>
      </contributor>
      <minor/>
      <comment>Form</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2627">{{Short description|Bottom of a geometric figure}}
{{refimprove|date=December 2017}}
[[Image:Pyramid coloured base (geometry).png|thumb|A skeletal [[pyramid]] with its '''base''' highlighted]]
In [[geometry]], a '''base''' is a [[Edge (geometry)|side]] of a [[polygon]] or a [[face (geometry)|face]] of a [[polyhedron]], particularly one oriented [[perpendicular]] to the direction in which [[Height#In mathematics|height]] is measured, or on what is considered to be the "bottom" of the figure.&lt;ref&gt;{{cite book |title=Plane Geometry|first1=C.I.|last1=Palmer|first2=D.P.|last2=Taylor|publisher=Scott, Foresman &amp; Co.|year=1918|pages=38, 315, 353|url=https://books.google.com/books?id=k9oZAAAAYAAJ}}&lt;/ref&gt; This term is commonly applied to [[triangle]]s, [[parallelogram]]s, [[trapezoid]]s, [[Cylinder (geometry)|cylinders]], [[Cone (geometry)|cones]], [[Pyramid (geometry)|pyramids]], [[parallelepiped]]s and [[frustum]]s.

==Role in area and volume calculation==
Bases are commonly used (together with heights) to calculate the [[area]]s and [[volume]]s of figures. In speaking about these processes, the measure (length or area) of a figure's base is often referred to as its "base."

By this usage, the area of a parallelogram or the volume of a [[Prism (geometry)|prism]] or cylinder can be calculated by multiplying its "base" by its height; likewise, the areas of triangles and the volumes of cones and pyramids are fractions of the products of their bases and heights. Some figures have two parallel bases (such as trapezoids and frustums), both of which are used to calculate the extent of the figures.&lt;ref&gt;{{Cite book|title=Geometry: Seeing, Doing, Understanding|first=Harold R.|last=Jacobs|edition=Third|publisher=[[W. H. Freeman and Company]]|location=[[New York City]]|year=2003|isbn=978-0-7167-4361-3|page=281}}&lt;/ref&gt;

==Extended bases in trigonometry==
[[Image:Projection formula (3).png|thumb|The [[altitude (triangle)|altitude]] from A intersects the '''extended base''' at D (a point outside the triangle).]]
The '''extended base''' of a triangle (a particular case of an [[extended side]]) is the [[line (geometry)|line]] that contains the base. The extended base is important in the context of [[obtuse triangle]]s: the [[altitude (triangle)|altitudes]] from the [[Acute angle|acute]] [[vertex (geometry)|vertices]] are external to the triangle and [[perpendicular]]ly [[intersection|intersect]] the extended opposite base (but not the base proper).

==References==
{{reflist}}

{{Elementary-geometry-stub}}

[[Category:Elementary geometry]]
[[Category:Triangle geometry]]
[[Category:Area]]
[[Category:Volume]]</text>
      <sha1>jpktp6eq6fhh8xnku8fh3yy4n97sbf8</sha1>
    </revision>
  </page>
  <page>
    <title>Bass–Quillen conjecture</title>
    <ns>0</ns>
    <id>51717116</id>
    <revision>
      <id>846496986</id>
      <parentid>781135362</parentid>
      <timestamp>2018-06-19T03:46:19Z</timestamp>
      <contributor>
        <username>Bibcode Bot</username>
        <id>14394459</id>
      </contributor>
      <minor/>
      <comment>Adding 0 [[arXiv|arxiv eprint(s)]], 2 [[bibcode|bibcode(s)]] and 0 [[digital object identifier|doi(s)]]. Did it miss something? Report bugs, errors, and suggestions at [[User talk:Bibcode Bot]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3001">In mathematics, the '''Bass&amp;ndash;Quillen conjecture''' relates [[vector bundle]]s over a [[regular ring|regular]] [[Noetherian ring]] ''A'' and over the [[polynomial ring]] &lt;math&gt;A[t_1, \dots, t_n]&lt;/math&gt;. The conjecture is named for [[Hyman Bass]] and [[Daniel Quillen]], who formulated the conjecture.&lt;ref&gt;{{citation|author=Bass, H.|year=1973|title=Some problems in ‘classical’ algebraic K-theory. Algebraic K-Theory II|publisher=Springer-Verlag|location=Berlin-Heidelberg-New York}}, Section 4.1&lt;/ref&gt;&lt;ref&gt;{{citation|author=Quillen, D.|year=1976|title=Projective modules over polynomial rings|journal=Invent. Math.|volume=36|pages=167–171|doi=10.1007/bf01390008|bibcode=1976InMat..36..167Q}}&lt;/ref&gt;

==Statement of the conjecture==
The conjecture is a statement about [[finitely generated module|finitely generated]] [[projective module]]s. Such modules are also referred to as vector bundles. For a ring ''A'', the set of [[isomorphism class]]es of vector bundles over ''A'' of rank ''r'' is denoted by &lt;math&gt;\operatorname{Vect}_r(A)&lt;/math&gt;.

The conjecture asserts that for a regular Noetherian ring ''A'' the assignment
:&lt;math&gt;M \mapsto M \otimes_A A [t_1, \dots, t_n]&lt;/math&gt;
yields a bijection
:&lt;math&gt;\operatorname{Vect}_r(A) \stackrel \sim \to \operatorname{Vect}_r(A[t_1, \dots, t_n]).&lt;/math&gt;

==Known cases==
If ''A''&amp;nbsp;=&amp;nbsp;''k'' is a field, the Bass–Quillen conjecture asserts that any projective module over &lt;math&gt;k[t_1, \dots, t_n]&lt;/math&gt; is free. This question was raised by [[Jean-Pierre Serre]] and was later proved by Quillen and Suslin, see [[Quillen–Suslin theorem]].
More generally, the conjecture was shown by Lindel in the case that ''A'' is a smooth algebra over a field ''k''.&lt;ref&gt;{{citation|author=Lindel, H.|title=On the Bass–Quillen conjecture concerning projective modules over polynomial rings|journal=Invent. Math.|volume=65|year=1981|issue=2|pages=319–323|doi=10.1007/bf01389017|bibcode=1981InMat..65..319L}}&lt;/ref&gt;
Further known cases are reviewed in {{Harv|Lam|2006}}.

==Extensions==
The set of isomorphism classes of vector bundles of rank ''r'' over ''A'' can also be identified with the [[nonabelian cohomology]] group
:&lt;math&gt;H^1_{Nis}(Spec (A), GL_r).&lt;/math&gt;
Positive results about the homotopy invariance of 
:&lt;math&gt;H^1_{Nis}(U, G)&lt;/math&gt;
of [[isotropic group|isotropic]] [[reductive group]]s ''G'' have been obtained by means of [[A1 homotopy theory|'''A'''&lt;sup&gt;1&lt;/sup&gt; homotopy theory]].&lt;ref&gt;{{cite arXiv|arxiv=1507.08020|title=Affine representability results in A^1-homotopy theory II: principal bundles and homogeneous spaces|author=Asok, Aravind|author2=Hoyois, Marc|author3=Wendt, Matthias|year=2015}}&lt;/ref&gt;

==References==
{{Reflist}}
* {{citation|author=Lam|first=T. Y.|title=Serre’s problem on projective modules| zbl=1101.13001|location=Berlin|publisher=Springer|isbn=3-540-23317-2|year=2006}}

{{DEFAULTSORT:Bass-Quillen conjecture}}
[[Category:Commutative algebra]]
[[Category:Algebraic K-theory]]
[[Category:Algebraic geometry]]</text>
      <sha1>8jdmjwee9r3c4q30j5505fbd8xhd52e</sha1>
    </revision>
  </page>
  <page>
    <title>Bhargava cube</title>
    <ns>0</ns>
    <id>45554900</id>
    <revision>
      <id>859155610</id>
      <parentid>714745727</parentid>
      <timestamp>2018-09-12T03:08:38Z</timestamp>
      <contributor>
        <username>Shyamal</username>
        <id>5798</id>
      </contributor>
      <comment>use vector image</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="10781">[[File:Bhargava_cube.svg|thumb|right|Bhargava cube with the integers ''a'', ''b'', ''c'', ''d'', ''e'', ''f'', ''g'', ''h'' at the corners]]

In [[mathematics]], in [[number theory]], '''Bhargava cube''' (also called '''Bhargava's cube''') is a configuration consisting of eight [[integers]] placed at the eight corners of a [[cube]].&lt;ref&gt;{{cite book|last1=Mak Trifkovic|title=Algebraic Theory of Quadratic Numbers|date=2013|publisher=Springer|location=New York|isbn=978-1-4614-7716-7|page=175}}&lt;/ref&gt; This configuration was extensively used by [[Manjul Bhargava]], an [[Indian-American]] [[Fields Medal]] winning [[mathematician]], to study the composition laws of binary quadratic forms and other such forms. To each pair of opposite faces of a Bhargava cube one can associate an integer [[binary quadratic form]] thus getting three binary quadratic forms corresponding to the three pairs of opposite faces of the Bhargava cube.&lt;ref name=Manjul1&gt;{{cite book|last1=Manjul Bhargava|title=''Higher composition laws and applications'', in Proceedings of the International Congress of Mathematicians, Madrid, Spain, 2006|date=2006|publisher=European Mathematical Society}}&lt;/ref&gt; These three quadratic forms all have the same [[discriminant]] and Manjul Bhargava proved that their [[binary function|composition]] in the sense of [[Carl Friedrich Gauss|Gauss]]&lt;ref name=Gauss&gt;{{cite book|last1=Carl Friedrich Gauss (translated by Arthur A Clarke)|title=[[Disquisitiones Arithmeticae]]|date=1986|publisher=Springer Verlag|pages=230–256}}&lt;/ref&gt; is the [[identity element]] in the associated [[Group (mathematics)|group]] of [[equivalence class]]es of primitive binary quadratic forms. Using this property as the starting point for a theory of composition of binary quadratic forms Manjul Bhargava went on to define fourteen different composition laws using a cube.

==Integer binary quadratic forms==
An expression of the form &lt;math&gt;Q(x,y)=ax^2+bxy+cy^2&lt;/math&gt;, where ''a'', ''b'' and ''c'' are fixed integers and ''x'' and ''y'' are variable integers, is called an integer binary quadratic form. The discriminant of the form is defined as 

:&lt;math&gt;D = b^2 -4ac.&lt;/math&gt;

The form is said to be primitive if the coefficients ''a'', ''b'', ''c'' are relatively prime. Two forms

:&lt;math&gt;Q(x,y) = ax^2+bxy+cy^2, \quad Q^\prime(x,y)=a^\prime x^2+b^\prime xy + c^\prime y^2&lt;/math&gt;

are said to be equivalent if there exists a transformation

:&lt;math&gt;x\mapsto \alpha x + \beta y,\quad  y\mapsto \gamma x + \delta y&lt;/math&gt; 

with integer coefficients satisfying &lt;math&gt;\alpha\delta - \beta\gamma =1&lt;/math&gt; which transforms &lt;math&gt;Q(x,y)&lt;/math&gt; to &lt;math&gt;Q^\prime(x,y)&lt;/math&gt;. This relation is indeed an equivalence relation in the set of integer binary quadratic forms and it preserves discriminants and primitivity.

==Gauss composition of integer binary quadratic forms==
Let &lt;math&gt;Q(x,y)&lt;/math&gt;  and &lt;math&gt;Q^\prime(x,y)&lt;/math&gt; be two primitive binary quadratic forms having the same discriminant and let the corresponding equivalence classes of forms be &lt;math&gt;[Q(x,y)]&lt;/math&gt;  and &lt;math&gt;[Q^\prime(x,y)]&lt;/math&gt;. One can find integers &lt;math&gt;p,q,r,s, p^\prime, q^\prime, r^\prime, s^\prime, a^{\prime\prime}, b^{\prime\prime}, c^{\prime\prime}&lt;/math&gt;  such that

:&lt;math&gt;X=px_1x_2+qx_1y_2+ry_1x_2+sy_1y_2&lt;/math&gt;
:&lt;math&gt;Y=p^\prime x_1x_2 + q^\prime x_1y_2 + r^\prime y_1x_2 + s^\prime y_1y_2&lt;/math&gt;
:&lt;math&gt;Q^{\prime\prime}(x,y) = a^{\prime\prime}x^2 + b^{\prime\prime}xy + c^{\prime\prime}y^2&lt;/math&gt;
: &lt;math&gt;Q^{\prime\prime}(X,Y)=Q(x_1,y_1)Q^\prime(x_2,y_2)&lt;/math&gt;

The class &lt;math&gt;[Q^{\prime\prime}(x,y)]&lt;/math&gt;  is uniquely determined by the classes [''Q''(''x'', ''y'')] and [''Q''&lt;sup&gt;&amp;prime;&lt;/sup&gt;(''x'', ''y'')] and is called the composite of the classes  &lt;math&gt;[Q(x,y)]&lt;/math&gt;  and &lt;math&gt;[Q^\prime(x,y)]&lt;/math&gt;.&lt;ref name=Gauss/&gt; This is indicated by writing

:&lt;math&gt;[Q^{\prime\prime}(x,y)]= [Q(x,y)]\ast [Q^\prime(x,y)]&lt;/math&gt;

The set of equivalence classes of primitive binary quadratic forms having a given discriminant ''D'' is a group under the composition law described above. The identity element of the group is the class determined by the following form:
:&lt;math&gt;Q_{Id}^{(D)}(x,y)
=
\begin{cases}
x^2-\frac{D}{4}y^2 &amp; D \equiv 0 \pmod 4\\
x^2 + xy + \frac{1-D}{4}y^2 &amp; D \equiv 1 \pmod 4
\end{cases}
&lt;/math&gt;
The inverse of the class &lt;math&gt;[a x^2 + h xy + b y^2]&lt;/math&gt; is the class &lt;math&gt;[ a x^2 - h xy + b y^2]&lt;/math&gt;.

==Quadratic forms associated with the Bhargava cube==
Let (''M'', ''N'') be the pair of 2 &amp;times; 2 matrices associated with a pair of opposite sides of a Bhargava cube; the matrices are formed in such a way that their rows and columns correspond to the edges of the corresponding faces. The integer binary quadratic form associated with this pair of faces is defined as 
:&lt;math&gt;Q=-\det (Mx+Ny)&lt;/math&gt;
The quadratic form is also defined as 
:&lt;math&gt;Q =-\det(Mx-Ny)&lt;/math&gt;
However, the former definition will be assumed in the sequel.

===The three forms===
Let the cube be formed by the integers ''a'', ''b'', ''c'', ''d'', ''e'', ''f'', ''g'', ''h''. The pairs of matrices associated with opposite edges are denoted by (''M''&lt;sub&gt;1&lt;/sub&gt;, ''N''&lt;sub&gt;1&lt;/sub&gt;), (''M''&lt;sub&gt;2&lt;/sub&gt;, ''N''&lt;sub&gt;2&lt;/sub&gt;), and (''M''&lt;sub&gt;3&lt;/sub&gt;, ''N''&lt;sub&gt;3&lt;/sub&gt;). The first rows of ''M''&lt;sub&gt;1&lt;/sub&gt;, ''M''&lt;sub&gt;2&lt;/sub&gt; and ''M''&lt;sub&gt;3&lt;/sub&gt; are respectively [''a'' ''b''], [''a'' ''c''] and [''a'' ''e'']. The opposite edges in the same face are the second rows. The corresponding edges in the opposite faces form the rows of the matrices ''N''&lt;sub&gt;1&lt;/sub&gt;, ''N''&lt;sub&gt;2&lt;/sub&gt;, ''N''&lt;sub&gt;3&lt;/sub&gt; (see figure).
{|
|-
| [[File:BhargavaCubeShowingM1andN1.png|thumb|right|200px|Bhargava cube showing the pair of opposite faces  ''M''&lt;sub&gt;1&lt;/sub&gt; and ''N''&lt;sub&gt;1&lt;/sub&gt;.]] || [[File:BhargavaCubeShowingM2andN2.png|thumb|right|200px|Bhargava cube showing the pair of opposite faces  ''M''&lt;sub&gt;2&lt;/sub&gt; and ''N''&lt;sub&gt;2&lt;/sub&gt;.]] || [[File:BhargavaCubeShowingM3andN3.png|thumb|right|200px|Bhargava cube showing the pair of opposite faces  ''M''&lt;sub&gt;3&lt;/sub&gt; and ''N''&lt;sub&gt;3&lt;/sub&gt;.]]
|}

The quadratic form associated with the faces defined by the matrices 
&lt;math&gt;M_1=\begin{bmatrix} a &amp; b \\ c &amp; d\end{bmatrix},N_1=\begin{bmatrix} e &amp; f \\ g &amp; h\end{bmatrix} &lt;/math&gt; (see figure) is
:&lt;math&gt;Q_1=-\det(M_1x+N_1y)= -(\det(M_1)x^2 + ( ah+ed-bg-fc)xy +\det(N_1)y^2)&lt;/math&gt;
The discriminant of a quadratic form ''Q''&lt;sub&gt;1&lt;/sub&gt; is
:&lt;math&gt;D_1=(ah-bg+cf-de)^2 - 4\det(M_1) \det(N_1).&lt;/math&gt;

The quadratic form associated with the faces defined by the matrices 
&lt;math&gt;M_2=\begin{bmatrix} a &amp; c \\ e &amp; g\end{bmatrix},N_2=\begin{bmatrix}  b &amp; d \\ f &amp; h\end{bmatrix} &lt;/math&gt; (see figure) is
:&lt;math&gt;Q_2=-\det(M_2x+N_2y)= -(\det(M_2)x^2 + ( ah+bg-fc-ed)xy +\det(N_2)y^2)&lt;/math&gt;
The discriminant of a quadratic form  ''Q''&lt;sub&gt;2&lt;/sub&gt; is
:&lt;math&gt;D_2=(ah+bg-fc-ed)^2 - 4\det(M_2) \det(N_2).&lt;/math&gt;

The quadratic form associated with the faces defined by the matrices 
&lt;math&gt;M_3=\begin{bmatrix} a &amp; e \\ b &amp; f\end{bmatrix},N_3=\begin{bmatrix} c &amp; g \\ d &amp; h\end{bmatrix} &lt;/math&gt; (see figure) is
:&lt;math&gt;Q_3=-\det(M_3x+N_3y)= -(\det(M_3)x^2 + ( ah+fc-ed-bg)xy +\det(N_3)y^2)&lt;/math&gt;
The discriminant of a quadratic form  ''Q''&lt;sub&gt;3&lt;/sub&gt; is
:&lt;math&gt;D_3=(ah+fc-ed-bg)^2 - 4\det(M_3) \det(N_3).&lt;/math&gt;

Manjul Bhargava's surprising discovery can be summarised thus:&lt;ref name=Manjul1/&gt;

:If a cube A gives rise to three primitive binary quadratic forms ''Q''&lt;sub&gt;1&lt;/sub&gt;, ''Q''&lt;sub&gt;2&lt;/sub&gt;, ''Q''&lt;sub&gt;3&lt;/sub&gt;,  then ''Q''&lt;sub&gt;1&lt;/sub&gt;, ''Q''&lt;sub&gt;2&lt;/sub&gt;, ''Q''&lt;sub&gt;3&lt;/sub&gt; have the same discriminant, and the product of these three forms is the identity in the group defined by Gauss composition. Conversely, if ''Q''&lt;sub&gt;1&lt;/sub&gt;, ''Q''&lt;sub&gt;2&lt;/sub&gt;, ''Q''&lt;sub&gt;3&lt;/sub&gt; are any three primitive binary quadratic forms of the same discriminant whose product is the identity under Gauss composition, then there exists a cube A yielding ''Q''&lt;sub&gt;1&lt;/sub&gt;, ''Q''&lt;sub&gt;2&lt;/sub&gt;, ''Q''&lt;sub&gt;3&lt;/sub&gt;.

==Example==
[[File:BhargavaCubeExample.jpg|thumb|right|150px|An example of Bhargava cube]]

The three quadratic forms associated with the numerical Bhargava cube shown in the figure are computed as follows.

: &lt;math&gt;
\begin{align}
Q_1(x,y)=-\det(M_1x+N_1y) &amp; = - \det\left( \begin{bmatrix} 1 &amp; 0 \\ 0 &amp; -2 \end{bmatrix} x + \begin{bmatrix}0 &amp; 3 \\ 4 &amp; 5\end{bmatrix}y\right) \\
&amp; = -\begin{vmatrix} x &amp; 3y \\ 4y &amp; -2x+5y\end{vmatrix} = 2x^2-5xy+12y^2 \\  \\
Q_2(x,y)=-\det(M_2x+N_2y) &amp; = - \det\left( \begin{bmatrix} 1 &amp; 0 \\ 0 &amp; 4 \end{bmatrix} x + \begin{bmatrix}0 &amp; 3 \\ -2 &amp; 5\end{bmatrix}y\right) \\
&amp; = -\begin{vmatrix} x &amp; 3y \\ -2y &amp; 4x+5y\end{vmatrix} = -4x^2-5xy-6y^2 \\  \\
Q_3(x,y)=-\det(M_3x+N_3y) &amp; = - \det\left( \begin{bmatrix} 1 &amp; 0 \\ 0 &amp; 3 \end{bmatrix} x + \begin{bmatrix}0 &amp; 4 \\ -2 &amp; 5\end{bmatrix}y\right) \\
&amp; = -\begin{vmatrix} x &amp; 4y \\ -2y &amp; 3x+5y\end{vmatrix} = -3x^2-5xy - 8y^2 \\  {}
\end{align}
&lt;/math&gt;

The composition &lt;math&gt;[Q_1(x,y)]\ast[ Q_2(x,y)]&lt;/math&gt; is the form &lt;math&gt; [Q(x,y)]&lt;/math&gt; where &lt;math&gt;Q(x,y) = -3x^2+ 5xy - 8y^2&lt;/math&gt; because of the following:

:&lt;math&gt;X = -2x_1x_2 + 4y_1x_2 + y_1y_2&lt;/math&gt;
:&lt;math&gt;Y=x_1x_2+3y_1y_2&lt;/math&gt;
:&lt;math&gt; Q(X,Y) = Q_1(x_1,y_1)Q_2(x_2,y_2)&lt;/math&gt;

Also &lt;math&gt;[Q_3(x,y)]^{-1}=Q(x,y)&lt;/math&gt;. Thus &lt;math&gt;[Q_1(x,y)]\ast [Q_2(x,y)]\ast [Q_3(x,y)]&lt;/math&gt; is the identity element in the group defined by the Gauss composition.

==Further composition laws on forms==

===Composition of cubes===
The fact that the composition of the three binary quadratic forms associated with the Bhargava cube is the identity element in the group of such forms has been used by Manjul Bhargava to define a composition law for the cubes themselves.&lt;ref name=Manjul1/&gt;

{|
|-
| [[File:BhargavaCubeOfCubiccForm.jpg|thumb|right|The Bhargava cube corresponding to the binary cubic form &lt;math&gt;px^3+3qx^2y+3rxy^2+sy^3&lt;/math&gt;.]]|| [[File:BhargavaCubeOfPairOfQuadraticForms.jpg|thumb|right|The Bhargava cube corresponding to the pair of binary quadratic forms &lt;math&gt;(ax^2+2bxy+cy^2,&lt;/math&gt; &lt;math&gt;dx^2+2exy+fy^2)&lt;/math&gt;.]]
|}

===Composition of cubic forms===

An integer  binary cubic in the form &lt;math&gt;px^3 + 3qx^2y+3rxy^2+sy^3&lt;/math&gt; can be represented by a triply symmetric Bhargava cube as in the figure. The law of composition of cubes can be used to define a law of composition for the binary cubic forms.&lt;ref name=Manjul1/&gt;

===Composition of pairs of binary quadratic forms===

The pair of binary quadratic forms &lt;math&gt;(ax^2+2bxy+cy^2, dx^2+2exy+fy^2)&lt;/math&gt; can be represented by a doubly symmetric Bhargava cube as in the figure. The law of composition of cubes is now used to define a composition law on pairs of binary quadratic forms.&lt;ref name=Manjul1/&gt;

==References==
{{reflist}}

[[Category:Quadratic forms]]
[[Category:Carl Friedrich Gauss]]
[[Category:Number theory]]</text>
      <sha1>fetir3kh849qjremowd1ot7q2dv5try</sha1>
    </revision>
  </page>
  <page>
    <title>Bicoherence</title>
    <ns>0</ns>
    <id>2496210</id>
    <revision>
      <id>861734556</id>
      <parentid>775385274</parentid>
      <timestamp>2018-09-29T16:47:26Z</timestamp>
      <contributor>
        <username>JCW-CleanerBot</username>
        <id>31737083</id>
      </contributor>
      <minor/>
      <comment>clean up, replaced: British journal of anaesthesia → British Journal of Anaesthesia</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="8327">In [[mathematics]], in the area of [[statistical analysis]], '''bicoherence''' is a squared normalised version of the [[bispectrum]]. The bicoherence takes values bounded between 0 and 1, which make it a convenient measure for quantifying the extent of phase coupling in a signal. It is also known as '''bispectral coherency'''. The prefix ''bi-'' in ''bispectrum'' and ''bicoherence'' refers not to two time series  ''x''&lt;sub&gt;''t''&lt;/sub&gt;, ''y''&lt;sub&gt;''t''&lt;/sub&gt; but rather to two frequencies of a single signal.

The ''bispectrum'' is a statistic used to search for nonlinear interactions. The [[Fourier transform]] of the second-order [[cumulant]], i.e., the [[autocorrelation]] function, is the traditional [[power spectrum]]. The Fourier transform of C&lt;sub&gt;3&lt;/sub&gt;(t&lt;sub&gt;1&lt;/sub&gt;,t&lt;sub&gt;2&lt;/sub&gt;) (third-order [[cumulant]]) is called bispectrum or '''bispectral density'''. They fall in the category of ''Higher Order Spectra'', or ''Polyspectra'' and provide supplementary information to the power spectrum. The third order polyspectrum (bispectrum) is the easiest to compute, and hence the most popular.

The difference with measuring ''coherence'' (coherence analysis is an extensively used method to study the correlations in frequency domain, between two simultaneously measured signals) is the need for both input and output measurements by estimating two auto-spectra and one cross spectrum. On the other hand, bicoherence is an auto-quantity, i.e. it can be computed from a single signal. The coherence function provides a quantification of deviations from linearity in the system which lies between the input and output measurement sensors. The bicoherence measures the proportion of the signal energy at any bifrequency that is quadratically phase coupled.  It is usually normalized in the range similar to correlation coefficient and classical (second order) coherence. It was also used for depth of anasthesia assesement and widely in plasma physics (nonlinear energy transfer) and also for detection of gravitation waves.

Bispectrum and bicoherence may be applied to the case of non-linear interactions of a continuous spectrum of propagating waves in one dimension [http://www.iop.org/EJ/abstract/0741-3335/30/5/005].

Bicoherence measurements have been carried out for [[Electroencephalography|EEG]] [[signals (biology)|signals]] monitoring in [[sleep]], [[Awake|wakefulness]] and [[seizures]].

== Definition ==
The bispectrum is defined as the triple product
:&lt;math&gt;B(f_1,f_2) = F(f_1)F(f_2)F^*(f_1+f_2)&lt;/math&gt;
where &lt;math&gt;B&lt;/math&gt; is the bispectrum evaluated at frequencies &lt;math&gt;f_1&lt;/math&gt; and &lt;math&gt;f_2&lt;/math&gt;, &lt;math&gt;F&lt;/math&gt; is the Fourier transform of the signal, and &lt;math&gt;^*&lt;/math&gt; denotes the complex conjugate. The Fourier transform is a complex quantity, and so is the bispectrum. From complex multiplication, the magnitude of the bispectrum is equal to the product of the magnitudes of each of the frequency components, and the phase of the bispectrum is the sum of the phases of each of the frequency components.

Suppose that the three Fourier components &lt;math&gt;F(f_1)&lt;/math&gt;, &lt;math&gt;F(f_2)&lt;/math&gt; and &lt;math&gt;F(f_1 + f_2)&lt;/math&gt; were perfectly phase locked. Then if the Fourier transform was calculated several times from different parts of the time series, the bispectrum will always have the same value. If we add together all of the bispectra, they will sum without cancelling. On the other hand, suppose that the phases of each of these frequencies was random. Then, the bispectrum will have the same magnitude (assuming that the magnitude of the frequency components is the same) but the phase will be randomly oriented. Adding together all of the bispectra will result in cancellation, because of the random phase orientation, and so the sum of the bispectra will have a small magnitude. Detecting phase coupling requires summation over a number of independent samples- this is the first motivation for defining the bicoherence. Secondly, the bispectrum is not normalized, because it still depends on the magnitudes of each of the frequency components. The bicoherence includes a normalization factor that removes the magnitude dependence.

There is some inconsistency with the definition of the bicoherence normalization constant. Some of the definitions that have been used are
:&lt;math&gt;b(f_1,f_2) = \frac{\left| \sum\limits_{n} F_n(f_1)F_n(f_2)F_n^*(f_1+f_2)  \right|}{ \sqrt{\sum\limits_{n} |F_n(f_1)|^2|F_n(f_2)|^2|F_n^*(f_1+f_2)|^2}} &lt;/math&gt;
which was provided in Sigl and Chamoun 1994, but does not appear to be correctly normalized. Alternatively, plasma physics typically uses
:&lt;math&gt;b^2(f_1,f_2) = \frac{|\langle F_n(f_1)F_n(f_2)F_n^*(f_1+f_2) \rangle|^2}{ \langle |F_n(f_1)F_n(f_2)|^2 \rangle\langle |F_n^*(f_1+f_2)|^2\rangle} &lt;/math&gt;
where the angle brackets denote averaging. Note that this is the same as using a sum, because &lt;math&gt;n&lt;/math&gt; is the same in the numerator and the denominator. This definition is directly from Nagashima 2006, and is also referred to in He 2009 and Maccarone 2005.

Finally, one of the most intuitive definitions comes from Hagihira 2001 and Hayashi 2007, which is

:&lt;math&gt;b(f_1,f_2) = \frac{\left| \sum\limits_{n} F_n(f_1)F_n(f_2)F_n^*(f_1+f_2)  \right|}{ \sum\limits_{n} |F_n(f_1)F_n(f_2)F_n^*(f_1+f_2)|} &lt;/math&gt;

The numerator contains the magnitude of the bispectrum summed over all of the time series segments. This quantity is large if there is phase coupling, and approaches 0 in the limit of random phases. The denominator, which normalizes the bispectrum, is given by calculating the bispectrum after setting all of the phases to 0. This corresponds to the case where there is perfect phase coupling, because all of the samples have zero phase. Therefore, the bicoherence has a value between 0 (random phases) and 1 (total phase coupling).

==References==
* Hagihira, S., Takashina, M., Mori, T., Mashimo, T., &amp; Yoshiya, I. (2001). Practical Issues in Bispectral Analysis of Electroencephalographic Signals. Anesthesia &amp; Analgesia, 93(4), 966-970. Retrieved from http://www.anesthesia-analgesia.org/content/93/4/966.abstract
* Hayashi, K., Tsuda, N., Sawa, T., &amp; Hagihira, S. (2007). Ketamine increases the frequency of electroencephalographic bicoherence peak on the alpha spindle area induced with propofol. British Journal of Anaesthesia, 99(3), 389-95. doi:10.1093/bja/aem175
* Nagashima, Y., Itoh, K., Itoh, S.-I., Hoshino, K., Fujisawa, A., Ejiri, A., Takase, Y., et al. (2006). Observation of coherent bicoherence and biphase in potential fluctuations around geodesic acoustic mode frequency on JFT-2M. Plasma Physics and Controlled Fusion, 48(5A), A377-A386. doi:10.1088/0741-3335/48/5A/S38
* He, H. (2009). The Canonical Bicoherence - Part I : Definition, Multitaper Estimation, and Statistics. Signal Processing, IEEE Transactions, 57(4), 1273-1284. Retrieved from http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4749274
* Maccarone, T. J., &amp; Schnittman, J. D. (2004). The bicoherence as a diagnostic for models of high-frequency quasi-periodic oscillations. [[Monthly Notices of the Royal Astronomical Society]], 357(1), 12-16. doi:10.1111/j.1365-2966.2004.08615.x
* Mendel JM. "Tutorial on higher-order statistics (spectra) in signal processing and system theory: theoretical results and some applications." ''Proceedings of the IEEE'', '''79''', 3, 278-305
* M J Hinich, "Testing for Gaussianity and linearity of a stationary time series", ''Journal of Time Series Analysis'' '''3'''(3), 1982 pp 169–176.
*[http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=3013&amp;objectType=file HOSA - Higher Order Spectral Analysis Toolbox]. ''(shareware for Microsoft Windows-type personal computers.)''
* Sigl, J.C. and N.G. Chamoun. 1994. An introduction to bispectral analysis for the electroencephalogram. Journal of Clinical Monitoring 10:392-404.
* T.H. Bullock, J.Z. Achimowicz ''et al.'', "Bicoherence of intracranial EEG in awake, sleep and seizures", Journal of Clinical Neurophysiology and EEG, 1997,vol.231,pp.&amp;nbsp;130–142.
* J.L. Shils, M. Litt, B.E. Skolnick, M.M. Stecker, "Bispectral analysis of visual interactions in humans", Electroencephalography and Clinical Neurophysiology, 1996;98:113-125.

[[Category:Complex analysis]]
[[Category:Integral transforms]]
[[Category:Fourier analysis]]</text>
      <sha1>fj5zgv46bm5qaac24g4e686wrjov8yj</sha1>
    </revision>
  </page>
  <page>
    <title>Calculator input methods</title>
    <ns>0</ns>
    <id>1964121</id>
    <revision>
      <id>870836495</id>
      <parentid>869827363</parentid>
      <timestamp>2018-11-27T09:10:40Z</timestamp>
      <contributor>
        <username>Cedar101</username>
        <id>374440</id>
      </contributor>
      <minor/>
      <comment>/* Examples of difficulties */ {{kbd}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="27751">{{Original research|date=May 2018}}

There are various ways in which [[calculator]]s interpret keystrokes. These can be categorized into two main types:

* On a '''single-step''' or '''immediate-execution calculator''', the user presses a key for each operation, calculating all the intermediate results, before the final value is shown.&lt;ref&gt;Microsoft’s Windows Operating System Calculator Accessory; 2001. Available on a Windows PC at: Start/All Programs/Accessories/Calculator.&lt;/ref&gt;&lt;ref&gt;MotionNET [http://www.motionnet.com/calculator Calculator page on the Internet]; 2006.&lt;/ref&gt;&lt;ref&gt;Flow Simulation Ltd [http://www.calculator.org/jcalc98.html Virtual Calc98 page on the Internet]; 2008.&lt;/ref&gt;
* On an '''expression''' or '''formula calculator''', one types in an expression and then presses a key, such as "=" or "Enter", to evaluate the expression.&lt;ref&gt;Formula Calculators Pty Ltd [Home page on the Internet]; 2009.&lt;/ref&gt;&lt;ref&gt;Moisey Oysgelt [http://www.alemoi.com/math JavaScript Formula Calculator page on the Internet]; 2000.&lt;/ref&gt;&lt;ref&gt;Haxial Software Pty Ltd [http://www.haxial.com/products/calculator Calculator Product page on the Internet]; 2001&lt;/ref&gt; There are various systems for typing in an expression, as described below.

=={{anchor|Chain|AES}}Immediate execution==
[[File:TI-108.jpg|thumb|208x208px|The [[TI-108]] is a simple four-function calculator which uses single-step execution.]]
The '''immediate execution''' mode of operation (also known as '''single-step''', '''algebraic entry system''' ('''AES''')&lt;ref name="Ball_1978"&gt;{{cite book |title=Algorithms for RPN calculators |first=John A. |last=Ball |date=1978 |edition=1 |publisher=[[Wiley-Interscience]], [[John Wiley &amp; Sons, Inc.]] |location=Cambridge, Massachusetts, USA |isbn=0-471-03070-8}}&lt;/ref&gt; or '''chain calculation''' mode) is commonly employed on most general-purpose calculators. In most simple four-function calculators, such as the [[Windows Calculator|Windows calculator]] in Standard mode and those included with most early [[Operating system|operating systems]], each [[binary operation]] is executed as soon as the next operator is pressed, and therefore the [[order of operations]] in a mathematical expression is not taken into account. [[Scientific calculators]], including the Scientific mode in the Windows calculator and most modern software calculators, have buttons for brackets and ''can'' take order of operation into account. Also, for [[unary operation]]s, like √ or ''x''&lt;sup&gt;2&lt;/sup&gt;, the number is entered first, then the operator; this is largely because the display screens on these kinds of calculators are generally composed entirely of [[Seven-segment display|seven-segment characters]] and thus capable  of displaying only numbers, not the functions associated with them. This mode of operation also make it impossible to change the expression being input without clearing the display entirely.

{| class="wikitable" border="1"
|+ Examples
! Formula
! keystrokes
! keystroke count
|-
| &lt;math&gt;1 + 2 \times 3&lt;/math&gt;
| {{Keypress|2}} {{Keypress|×}} {{Keypress|3}} {{Keypress|+}} {{Keypress|1}} {{Keypress|1==}}

{{Keypress|1}} {{Keypress|+}} {{Keypress|2}} {{Keypress|×}} {{Keypress|3}} {{Keypress|1==}}
| 6

6
|-
| &lt;math&gt;\sin 30 \times \cos 30&lt;/math&gt;
| {{Keypress|3}} {{Keypress|0}} {{Keypress|SIN}} {{Keypress|×}} {{Keypress|3}} {{Keypress|0}} {{Keypress|COS}} {{Keypress|1==}}

{{Keypress|SIN}} {{Keypress|3}} {{Keypress|0}} {{Keypress|x}} {{Keypress|COS}} {{Keypress|3}} {{Keypress|0}}{{Keypress|1==}}
| 8
|-
| &lt;math&gt;5 - 3&lt;/math&gt;
| {{Keypress|5}} {{Keypress|−}} {{Keypress|3}} {{Keypress|1==}}
| 4 
|-
| &lt;math&gt;15 + 10 + 10 + 10&lt;/math&gt;
| {{Keypress|1}} {{Keypress|5}} {{Keypress|+}}  {{Keypress|1}} {{Keypress|0}} {{Keypress|+}}  {{Keypress|1}} {{Keypress|0}} {{Keypress|+}}  {{Keypress|1}} {{Keypress|0}}  {{Keypress|1==}}
| 12
|}

The first and third example have been given twice. The first version is for simple calculators, showing how it is necessary to rearrange operands in order to get the correct result. The second version is for [[scientific calculator|scientific calculators]], where operator precedence is observed.

Immediate-execution calculators are based on a mixture of infix and postfix notation: binary operations are done as infix, but unary operations are postfix. Because operators are applied one-at-a-time, the user must work out which operator key to use at each stage, and this can lead to problems.&lt;ref&gt;{{cite web |author=Harold Thimbleby |url=http://www.uclic.ucl.ac.uk/harold/srf/allcalcs.pdf |title=A new calculator and why it is necessary |publisher=Computing Science, Middlesex University, London, UK |date=September 1998 |accessdate=2009-05-04 |deadurl=yes |archiveurl=https://web.archive.org/web/20070207044654/http://www.uclic.ucl.ac.uk/harold/srf/allcalcs.pdf |archivedate=2007-02-07 |df= }}&lt;/ref&gt;&lt;ref&gt;Neville Holmes. [http://standards.computer.org/sabminutes/2003Wint/Truth%20and%20Clarity%20in%20Arithmetic%20-%20Neville%20Holmes.pdf Truth and Clarity in Arithmetic], University of Tasmania; 2003.&lt;/ref&gt; When discussing these problems, Professor [[Harold Thimbleby]] has pointed out that button-operated calculators "require numbers and operation signs to be punched in a certain order, and mistakes are easy to make and hard to spot".&lt;ref&gt;[http://www.physorg.com/news4773.html Professor devises easier calculator]; www.physorg.com. June 2005.&lt;/ref&gt;

Problems can occur because, for anything but the simplest calculation, in order to work out the value of a written formula, the user of a button-operated calculator is required to:
* Rearrange the formula so that the value can be calculated by pressing buttons one at a time, while taking operator precedence and parentheses into account.
* Use memory buttons to ensure that operations are applied in the correct order.
* Use the special buttons {{keypress|±}} and {{keypress|1/''x''}}, that do not correspond to operations in the formula, for non-commutative operators.

Mistakes can be hard to spot because:
* For the above reasons, the sequence of button presses may bear little resemblance to the original formula.
* The operation carried out when a button is pressed is not always the same as the button, but could be a previously entered operation.

[[File:Calculator-TI-30XA-rev2015.jpg|thumb|This TI-30XA scientific calculator uses immediate execution. It has a one-line, seven-segmented display, and cannot display operands or allow the entries to be edited.]]

===Examples of difficulties===

The simplest example given by Professor Thimbleby of a possible problem when using an immediate-execution calculator is 4 × (−5).&lt;ref&gt;Reference 11, section 2.&lt;/ref&gt; As a written formula the value of this is −20 because the minus sign is intended to indicate a negative number, rather than a subtraction, and this is the way that it would be interpreted by a formula calculator.

On an immediate-execution calculator, depending on which keys are used and the order in which they are pressed, the result for this calculation may be different. Also there are differences between calculators in the way a given sequence of button presses is interpreted.&lt;ref&gt;{{clarify span|References 4, 5 and 6|date=January 2018}}.&lt;/ref&gt; The result can be:
* {{kbd|−1}}: If the subtraction button {{keypress|−}} is pressed after the multiplication {{keypress|×}}, it is interpreted as a correction of the {{keypress|×}} rather than a minus sign, so that 4&amp;nbsp;−&amp;nbsp;5 is calculated.
* {{kbd|20}}: If the change-sign button {{keypress|±}} is pressed before the 5, it isn't interpreted as −5, and 4 × 5 is calculated.
* {{kbd|−20}}: To get the right answer, {{keypress|±}} must be pressed last, even though the minus sign isn't written last in the formula.&lt;ref name="Reference 4"&gt;{{clarify span|Reference 4|date=January 2018}}.&lt;/ref&gt;

The effects of operator precedence, parentheses and non-commutative operators, on the sequence of button presses, are illustrated by:
* {{kbd|4 − 5 × 6}}: The multiplication must be done first, and the formula has to be rearranged and calculated as −5 × 6&amp;nbsp;+&amp;nbsp;4. So ± and addition have to be used rather than subtraction. When {{keypress|+}} is pressed, the multiplication is performed.
* {{kbd|4 × (5&amp;nbsp;+&amp;nbsp;6)}}: The addition must be done first, so the calculation carried out is (5&amp;nbsp;+&amp;nbsp;6) × 4. When {{keypress|×}} is pressed, the addition is performed.
* {{kbd|4 / (5&amp;nbsp;+&amp;nbsp;6)}}: One way to do this is to calculate (5&amp;nbsp;+&amp;nbsp;6) / 4 first and then use the {{keypress|1/''x''}} button, so the calculation carried out is 1/[(5&amp;nbsp;+&amp;nbsp;6)/4].
* {{kbd|4 × 5&amp;nbsp;+&amp;nbsp;6 × 7}}: The two multiplications must be done before the addition, and one of the results must be put into memory.&lt;ref name="Reference 4"/&gt;

These are only simple examples, but immediate-execution calculators can present even greater problems in more complex cases. In fact, Professor Thimbleby claims that users may have been conditioned to avoid them for all but the simplest calculations.&lt;ref&gt;{{clarify span|Reference 11|date=January 2018}}, section 3.2, second paragraph.&lt;/ref&gt;

===Declarative and imperative tools===

The potential problems with immediate-execution calculators stem from the fact that they are [[imperative programming|imperative]].&lt;ref&gt;{{clarify span|Reference 11|date=January 2018}}, sections 1 and 10.&lt;/ref&gt; This means that the user must provide details of ''how'' the calculation has to be performed.

Professor Thimbleby has identified the need for a calculator that is more automatic and therefore easier to use, and he states that such a calculator should be more [[declarative programming|declarative]].&lt;ref name="Reference 11"&gt;{{clarify span|Reference 11|date=January 2018}}.&lt;/ref&gt; This means that the user should be able to specify only ''what'' has to be done, not how, and in which order, it has to be done.

Formula calculators are more declarative because the typed-in formula specifies what is to be done, and the user does not have to provide any details of the step-by-step order in which the calculation has to be performed.

Declarative solutions are easier to understand than imperative solutions,&lt;ref name="Reference 11"/&gt;&lt;ref&gt;{{cite web |author=Roy E. Furman |title=Declarative Programming – Strategies for Solving Software Problems |url=http://www.articlesalley.com/article.detail.php/7013/178/Education/Internet/36/Declarative_Programming_-_Strategies_for_Solving_Software_Problems |date=July 2006 |accessdate=2009-05-04 |deadurl=yes |archiveurl=https://archive.is/20120723100846/http://www.articlesalley.com/article.detail.php/7013/178/Education/Internet/36/Declarative_Programming_-_Strategies_for_Solving_Software_Problems |archivedate=2012-07-23 |df= }}&lt;/ref&gt; and there has been a long-term trend from imperative to declarative methods.&lt;ref&gt;David A. Watt. Programming language concepts and paradigms, Prentice Hall; 1990. Citation 13 at http://citeseer.ist.psu.edu/context/14802/0.&lt;/ref&gt;&lt;ref&gt;Tatsuru Matsushita. Expressive Power of Declarative Programming Languages, PhD thesis, Department of Computer Science, University of York; October 1998. Citation 13 at http://citeseer.ist.psu.edu/context/14802/0.&lt;/ref&gt; Formula calculators are part of this trend.

Many software tools for the general user, such as spreadsheets, are declarative.&lt;ref&gt;{{clarify span|Reference 20|date=January 2018}}, paragraph 6.&lt;/ref&gt; Formula calculators are examples of such tools.

===Using the full power of the computer===

Software calculators that simulate hand-held, immediate execution calculators do not use the full power of the computer: "A computer is a far more powerful device than a hand-held calculator, and thus it is illogical and limiting to duplicate hand-held calculators on a computer." (Haxial Software Pty Ltd)&lt;ref&gt;Reference 3, second paragraph&lt;/ref&gt; Formula calculators use more of the computer's power because, besides calculating the value of a formula, they work out the order in which things should be done.

=={{anchor|Algebraic|AESH|AESP|AOS|EOS}}Infix notation==
[[File:Sharp Scientific Calculator.jpg|left|thumb|A Sharp scientific calculator using infix notation. Note the formula on the dot-matrix line above and the answer on the seven-segment line below, as well as the arrow keys allowing the entry to be reviewed and edited.]]
{{redirect|Aesh|the letter|Æ}}

[[File:Speedcrunch.png|thumb|right|This calculator program has accepted input in infix notation, and returned the answer &lt;math&gt;3\text{,}8\overline{6}&lt;/math&gt;. Here the comma is a decimal separator.]]

'''Infix notation''' is a method where unary operations are input into the calculator in the same order as they are written on paper. Different forms of this input scheme exist. In the '''algebraic entry system with hierarchy''' ('''AESH'''),&lt;ref name="Ball_1978"/&gt; the precedence of basic mathematical operators is taken into account,&lt;ref name="Ball_1978"/&gt; whereas calculators with '''algebraic entry system with parentheses''' ('''AESP''')&lt;ref name="Ball_1978"/&gt; support the entry of parentheses.&lt;ref name="Ball_1978"/&gt; An input scheme known as '''algebraic operating system''' ('''AOS''')&lt;ref name="Ball_1978"/&gt; combines both.&lt;ref name="Ball_1978"/&gt;

Calculators that use infix notation tend to incorporate a [[dot-matrix display]] to display the expression being entered, frequently accompanied by a seven-segment display for the result of the expression. Because the expression is not evaluated until it is fully entered, there is provision for editing the entered expression at any point prior to evaluation, as well as replaying entered expressions and their answers from memory.

Most [[graphing calculators]] by [[Casio graphic calculators|Casio]] and [[Comparison of Texas Instruments graphing calculators|Texas Instruments]] use this method. On its [[scientific calculator]]s, [[Sharp Corporation|Sharp]] calls this method '''Direct Algebraic Logic (D.A.L.)''',&lt;ref&gt;[http://sharp-world.com/contents/calculator/features/standard/dal/index.html Direct algebraic logic]&lt;/ref&gt; and [[Casio]] calls this method the '''Visually Perfect Algebraic Method (V.P.A.M.)'''.&lt;ref&gt;[http://support.casio.com/answer.php?rgn=5&amp;cid=004002002001&amp;qid=24370&amp;num=7 What does VPAM stand for]&lt;/ref&gt;

{| class="wikitable" border="1"
|+ Examples
! Formula
! keystrokes
! keystroke count
|-
| &lt;math&gt;1 + 2 \times 3&lt;/math&gt;
| {{Keypress|1}} {{Keypress|+}} {{Keypress|2}} {{Keypress|×}} {{Keypress|3}} {{Keypress|1==}}
| 6 
|-
| &lt;math&gt;\sin 30 \times \cos 30&lt;/math&gt;
| {{Keypress|SIN}} {{Keypress|3}} {{Keypress|0}}  {{Keypress|×}} {{Keypress|COS}} {{Keypress|3}} {{Keypress|0}} {{Keypress|1==}}
| 8
|-
| &lt;math&gt;(1 + 2) \times (3 + 4)&lt;/math&gt;
| {{Keypress|(}} {{Keypress|1}} {{Keypress|+}} {{Keypress|2}} {{Keypress|)}} {{Keypress|×}} {{Keypress|(}} {{Keypress|3}} {{Keypress|+}} {{Keypress|4}} {{Keypress|)}} {{Keypress|1==}}
| 12 
|-
| &lt;math&gt;15+10+10+10&lt;/math&gt;
| {{Keypress|1}} {{Keypress|5}} {{Keypress|+}}  {{Keypress|1}} {{Keypress|0}} {{Keypress|+}}  {{Keypress|1}} {{Keypress|0}} {{Keypress|+}}  {{Keypress|1}} {{Keypress|0}}  {{Keypress|1==}}
| 12
|}

=={{anchor|RPN}}Reverse Polish notation==
[[File:Screenshot from 2015-09-10 21-56-23.png|thumb|right|Screenshot of an RPN Calculator program on [[GNU+Linux]].]]
[[File:HP-10C programmable calculator.jpg|left|thumb|The [[Hewlett-Packard Voyager series]] of calculators all use RPN input. The "Enter" key is used here to push the value on the display onto the stack.]]
{{main|Reverse Polish Notation}}

In '''reverse Polish notation''',&lt;ref name="Ball_1978"/&gt; also known as '''postfix notation,''' all operations are entered after the [[operand]]s on which the operation is performed. Reverse Polish notation is parenthesis-free, which usually leads to fewer button presses needed to perform an operation. By the use of a [[Stack (data structure)|stack]], one can enter formulas without the need to rearrange operands.

[[Hewlett-Packard]]'s [[HP calculators|calculators]] are well-known examples among calculators which use RPN. Early models, such as the [[HP-35]], used RPN entirely without any alternative methods. Later models, such as the [[HP 35s]], also had infix notation and could conveniently allow users to switch between it and RPN.

{| class="wikitable" border="1"
|+ Examples
! Formula
! keystrokes
! keystroke count
|-
| &lt;math&gt;1 + 2 \times 3&lt;/math&gt;
| {{Keypress|1}} {{Keypress|ENTER}} {{Keypress|2}} {{Keypress|ENTER}} {{Keypress|3}} {{Keypress|×}}  {{Keypress|+}}&lt;br&gt;
{{Keypress|2}} {{Keypress|ENTER}} {{Keypress|3}} {{Keypress|×}} {{Keypress|1}} {{Keypress|+}}
| 7&lt;br&gt;6
|-
| &lt;math&gt;\sin 30 \times \cos 30&lt;/math&gt;
| {{Keypress|3}} {{Keypress|0}} {{Keypress|SIN}} {{Keypress|3}} {{Keypress|0}} {{Keypress|COS}} {{Keypress|×}}
| 7
|-
| &lt;math&gt;(1 + 2) \times (3 + 4)&lt;/math&gt;
| {{Keypress|1}} {{Keypress|ENTER}} {{Keypress|2}} {{Keypress|+}} {{Keypress|3}} {{Keypress|ENTER}} {{Keypress|4}} {{Keypress|+}} {{Keypress|×}}
| 9
|-
| &lt;math&gt;15+10+10+10&lt;/math&gt;
| {{Keypress|1}} {{Keypress|5}} {{Keypress|ENTER}}  {{Keypress|1}} {{Keypress|0}} {{Keypress|+}} {{Keypress|1}} {{Keypress|0}} {{Keypress|+}} {{Keypress|1}} {{Keypress|0}} {{Keypress|+}}
{{Keypress|1}} {{Keypress|5}} {{Keypress|ENTER}}  {{Keypress|1}} {{Keypress|0}} {{Keypress|ENTER}} {{Keypress|ENTER}} {{Keypress|ENTER}} {{Keypress|+}} {{Keypress|+}} {{Keypress|+}}

{{Keypress|1}} {{Keypress|5}} {{Keypress|ENTER^}}  {{Keypress|1}} {{Keypress|0}} {{Keypress|ENTER^}} {{Keypress|ENTER^}} {{Keypress|+}} {{Keypress|+}} {{Keypress|+}}
| 12&lt;br&gt;11 ([[Reverse Polish LISP|RPL]] and [[Entry RPN]])&lt;ref name="RPN"/&gt;&lt;br&gt;10 ([[Classical RPN]])&lt;ref name="RPN"&gt;http://h20331.www2.hp.com/hpsub/downloads/S07%20HP%20RPN%20Evolves%20V5b.pdf&lt;/ref&gt;
|}

Note: The first example illustrates one of the few cases where reverse Polish notation does not use the fewest button presses &amp;ndash; provided one does not rearrange operands. If one would do so then only six keystrokes would be needed.

== {{anchor|RPN}}BASIC notation ==

{{main|BASIC}}
[[File:Heart-on-ti89-parametric.jpg|thumb|The equation entry screen on a [[TI-89 series|TI-89]], showing the brackets after the ln, sin and cos parameters. If these were left out, the equation would be interpreted as &lt;math&gt;\ln(\left\vert t \right\vert+\sin(t+\cos(t)))&lt;/math&gt; instead of &lt;math&gt;\ln(\left\vert t \right\vert)+\sin(t)+\cos(t)&lt;/math&gt;]]
'''BASIC notation''' is a particular implementation of infix notation where functions require their [[function argument|parameters]] to be in brackets.

This method was used from the 1980s to the 1990s in BASIC programmable calculators and [[pocket computer]]s. Texas Instruments would later implement the method in many of its graphing calculators, including the [[TI-83 series|TI-83]] and [[TI-84 Plus series]]. Most [[computer algebra systems]] also use this as the default input method.

In BASIC notation, the formula is entered as it would be entered in BASIC, using the &lt;CODE&gt;PRINT&lt;/CODE&gt; command – the &lt;CODE&gt;PRINT&lt;/CODE&gt; command itself being optional. On pressing "ENTER" or "=", the result would be displayed. As with standard infix notation, typing mistakes in the entered formula could be corrected using the same editor function as the one used when programming the calculator.

{| class="wikitable" border="1"
|+ Examples
! Formula
! keystrokes
! keystroke count
|-
| &lt;math&gt;1 + 2 \times 3&lt;/math&gt;
| {{Keypress|1}} {{Keypress|+}} {{Keypress|2}} {{Keypress|×}} {{Keypress|3}} {{Keypress|ENTER}}
| 6 
|-
| &lt;math&gt;\sin 30 \times \cos 30&lt;/math&gt;
| {{Keypress|SIN}} {{Keypress|(}} {{Keypress|3}} {{Keypress|0}} {{Keypress|)}} {{Keypress|×}} {{Keypress|COS}} {{Keypress|(}} {{Keypress|3}} {{Keypress|0}} {{Keypress|)}} {{Keypress|ENTER}}

{{Keypress|S}} {{Keypress|I}} {{Keypress|N}} {{Keypress|(}} {{Keypress|3}} {{Keypress|0}} {{Keypress|)}} {{Keypress|×}} {{Keypress|C}} {{Keypress|O}} {{Keypress|S}} {{Keypress|(}} {{Keypress|3}} {{Keypress|0}} {{Keypress|)}} {{Keypress|ENTER}}
| 12

16 
|}

For the second example, two options are given depending on if the BASIC programmable pocket computers have dedicated trigonometric keys&lt;ref&gt;The picture of the [http://pocket.free.fr/html/casio/fx-880p_e.html Casio FX-880P] shows sin, cos and tan keys on the second row right hand side.&lt;/ref&gt; or not.&lt;ref&gt;The picture of the [http://pocket.free.fr/html/sharp/pc-1245_e.html Sharp PC-1245] shows no trigonometric keys&lt;/ref&gt;

== {{anchor|RPN}}Ten key notation ==
[[File:Sharp Calculator.JPG|thumb|This printing calculator made by Sharp uses ten-key notation. Notice the size and placement of the keys, including the extra-large "+/=" and the red "-/=" keys.]]
The '''ten-key notation''' input method first became popular with accountants' [[adding machine|paper tape adding machines]]. It generally makes the assumption that entered numbers are being summed, although other operations are supported. Each number entered is followed by its sign (+/−), and a running total is kept. An assumption is made that the last operand can be implicitly used next, so by just entering another + (for example), one will reuse the most recent operand. Ten key input mode is available in printing calculators from companies such as [[Sharp Corporation|Sharp]],&lt;ref&gt;[http://www.sharpusa.com/ForBusiness/SmallElectronics/Calculators.aspx?view=browse Assortment of physical calculators, including printing ones that use tenkey syntax]&lt;/ref&gt; and in software calculators like Judy's TenKey&lt;ref&gt;[http://www.judysapps.com/TenKey.htm Example calculator which toggles between infix, RPN, and tenkey]&lt;/ref&gt; used by accounting firms. Online tenkey training and certification tools are available as well,&lt;ref&gt;http://www.learn2type.com/typingtest/tenkeycertificate.cfm&lt;/ref&gt;&lt;ref&gt;http://www.abbyinc.com/abbyinc/KeyPro.asp&lt;/ref&gt; and some businesses use [[words per minute#Numeric entry|ten key typing speed]] as an employment criterion.

{| class="wikitable" border="1"
|+ Examples
! Formula
! keystrokes
! keystroke count
|-
| &lt;math&gt;1 + 2 \times 3&lt;/math&gt;
| {{Keypress|1}} {{Keypress|+}} {{Keypress|2}} {{Keypress|×}} {{Keypress|3}} {{Keypress|1==}} {{Keypress|+}} {{Keypress|T}} 
| 8 
|-
| &lt;math&gt;\sin 30 \times \cos 30&lt;/math&gt;
| {{Keypress|3}} {{Keypress|0}} {{Keypress|SIN}} {{Keypress|×}} {{Keypress|3}} {{Keypress|0}} {{Keypress|COS}} {{Keypress|1==}}
| 8
|-
| &lt;math&gt;5-3&lt;/math&gt;
| {{Keypress|5}} {{Keypress|+}} {{Keypress|3}} {{Keypress|-}} {{Keypress|T}}
| 5 
|-
| &lt;math&gt;15+10+10+10&lt;/math&gt;
| {{Keypress|1}} {{Keypress|5}} {{Keypress|+}}  {{Keypress|1}} {{Keypress|0}} {{Keypress|+}} {{Keypress|+}} {{Keypress|+}} {{Keypress|T}}
| 9
|}

=={{anchor|Textbook}}Mathematical display==

[[File:CalculatorFractions-5550x.jpg|thumb|200x200px|A Casio ''Natural Display'' scientific calculator displaying mixed fractions and their decimal equivalents in pretty-printing.]]{{See also|Prettyprint}}
[[File:Mathematica dinis surface.png|left|thumb|Pretty-printed commands used to plot [[Dini's surface]] in Mathematica.]]
Modern computer algebra systems, as well as many scientific and graphing calculators, allow for "'''pretty-printing'''", that is, entry of equations such that [[Fraction (mathematics)|fractions]], [[Nth root#Working with surds|surds]] and [[integral]]s, etc. are displayed in the way they would normally be written. Such calculators are generally similar in appearance to those using infix notation, but feature a full dot-matrix display and templates for entering expressions, which are navigated using arrow keys on the calculator. The templates contain spaces for values or expressions to be entered, and empty values would typically result in a syntax error, making it more cumbersome to navigate than standard infix notation; standard infix notation is often an option on such calculators as well.

Casio used to call this feature ''Natural Display'' or ''Natural textbook display'',&lt;ref&gt;[http://edu.casio.com/products/ntd/fx991es/ Natural textbook display - Scientific calculator].&lt;/ref&gt;&lt;ref&gt;[http://edu.casio.com/products/graphic/fx9860g2/ Natural textbook display - Graphic calculator]&lt;/ref&gt; but now uses ''Natural-VPAM''.&lt;ref&gt;[http://edu.casio.com/products/adves/fx991esplus/ Natural Visually Perfect Algebraic Mode (V.P.A.M) - Scientific calculator].&lt;/ref&gt; Sharp calls this ''WriteView''&lt;ref&gt;[http://sharp-world.com/contents/calculator/features/standard/writeview/index.html WriteView].&lt;/ref&gt; on its scientific calculators and simply ''Equation Editor'' on its graphing calculators.&lt;ref&gt;[http://sharp-world.com/contents/calculator/features/graphing/eq/index.html Sharp Graphing equation editor].&lt;/ref&gt; HP calls this its ''Textbook'' display setting,&lt;ref&gt;{{Cite web|url=http://h20564.www2.hp.com/hpsc/doc/public/display?docId=emr_na-c01943918|title=HP Support document - HP Support Center|last=Inc.|first=HP|website=h20564.www2.hp.com|access-date=2016-08-23}}&lt;/ref&gt; which can be used in both RPN and Algebraic mode and in both the ''Stack'' and in the ''Equation Writer'' application.&lt;ref&gt;http://h20331.www2.hp.com/Hpsub/downloads/50gUsing_the_EquationWriter_Part2.pdf.&lt;/ref&gt; [[Mathematica]] calls this ''Semantic-Faithful Typesetting''.&lt;ref&gt;[http://www.wolfram.com/technology/guide/SemanticFaithfulTypesetting/ Semantic-Faithful Typesetting].&lt;/ref&gt; [[Mathcad]] calls this ''standard math notation''.&lt;ref&gt;[http://www.ptc.com/WCMS/files/56916/en/3549_Mathcad_bro_ViewONLY.pdf Mathcad].&lt;/ref&gt; [[Maple (software)|Maple]] has a ''Math Equation Editor'',&lt;ref&gt;http://www.maplesoft.com/products/maple/features/feature_detail.aspx?fid=5907&lt;/ref&gt; but does not have a special name for this input method. Texas Instruments calls it ''MathPrint,''&lt;ref&gt;http://education.ti.com/educationportal/sites/US/productDetail/us_os_84plus.html&lt;/ref&gt; incorporating it in its high-end calculators, such as the [[TI-Nspire series]], and in 2011 added the feature to its TI-84 series with the 2.55 OS update.&lt;ref&gt;{{Cite web|url=https://www.techpoweredmath.com/new-os-ti-84-255-mp/|title=Texas Instruments releases new OS for TI-84, 2.55 MP|last=|first=|date=2011-01-14|website=Tech Powered Math|language=en-us|archive-url=|archive-date=|dead-url=|access-date=2018-05-12}}&lt;/ref&gt;
{| class="wikitable" border="1"
|+ Examples
! Formula
! keystrokes
! keystroke count
|-
| &lt;math&gt;1 + 2 \times 3&lt;/math&gt;
| {{Keypress|1}} {{Keypress|+}} {{Keypress|2}} {{Keypress|×}} {{Keypress|3}} {{Keypress|ENTER}}
| 6 
|-
| &lt;math&gt;\sin 30 \times \cos 30&lt;/math&gt;
| {{Keypress|SIN}} {{Keypress|3}} {{Keypress|0}} {{Keypress|→}} {{Keypress|×}} {{Keypress|COS}}  {{Keypress|3}} {{Keypress|0}} {{Keypress|ENTER}}

{{Keypress|SIN}} {{Keypress|(}} {{Keypress|3}} {{Keypress|0}} {{Keypress|)}} {{Keypress|×}} {{Keypress|COS}} {{Keypress|(}}  {{Keypress|3}} {{Keypress|0}} {{Keypress|)}} {{Keypress|ENTER}}
| 9
12
|-
| &lt;math&gt;5-3&lt;/math&gt;
| {{Keypress|5}} {{Keypress|−}} {{Keypress|3}} {{Keypress|ENTER}}
| 4 
|-
| &lt;math&gt;15+10+10+10&lt;/math&gt;
| {{Keypress|1}} {{Keypress|5}} {{Keypress|+}}  {{Keypress|1}} {{Keypress|0}} {{Keypress|+}}  {{Keypress|1}} {{Keypress|0}} {{Keypress|+}}  {{Keypress|1}} {{Keypress|0}}  {{Keypress|ENTER}}
| 12
|}

For the second example, two options are given, depending on whether the calculators will automatically insert needed parentheses or not. Machines equipped with an alphanumeric display will display &lt;tt&gt;SIN(30)×COS(30)&lt;/tt&gt; before {{Keypress|ENTER}} is pressed.

==See also==

* [[Calculator]]
* [[Comparison of software calculators]]
* [[Computer algebra system]]
* [[Graphing calculator]]
* [[Keystroke programming]]
* [[Mathematical notation]]
* [[Pocket computer]]
* [[Programmable calculator]]
* [[Scientific calculator]]

==References==
&lt;references /&gt;

{{DEFAULTSORT:Calculator Input Methods}}
[[Category:Calculators]]
[[Category:Mathematical notation]]</text>
      <sha1>ofhfa3jfsh72qa993p74tuh1tbpt6mb</sha1>
    </revision>
  </page>
  <page>
    <title>Carol number</title>
    <ns>0</ns>
    <id>3422372</id>
    <revision>
      <id>863855818</id>
      <parentid>857882400</parentid>
      <timestamp>2018-10-13T14:39:16Z</timestamp>
      <contributor>
        <ip>173.76.101.2</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="6155">A '''Carol number''' is an integer of the form &lt;math&gt;4^n - 2^{n + 1} - 1&lt;/math&gt;. An equivalent formula is &lt;math&gt;(2^n - 1)^2 - 2&lt;/math&gt;. The first few Carol numbers are:  [[−1 (number)|&amp;minus;1]], [[7 (number)|7]], [[47 (number)|47]], [[223 (number)|223]], 959, 3967, 16127, 65023, 261119, 1046527 {{OEIS|id=A093112}}.  

Carol numbers were first studied by Cletus Emmanuel, who named them after a friend, Carol G. Kirnon.&lt;ref&gt;[http://primes.utm.edu/bios/page.php?id=374 Cletus Emmanuel] at [[Prime Pages]]&lt;/ref&gt;&lt;ref&gt;
[https://groups.yahoo.com/neo/groups/primenumbers/conversations/messages/14584 Message to Yahoo primenumbers group] from Cletus Emmanuel&lt;/ref&gt;

==Binary representation==
For ''n'' &gt; 2, the binary representation of the ''n''-th Carol number is ''n'' &amp;minus; 2 consecutive ones, a single zero in the middle, and ''n'' + 1 more consecutive ones, or to put it algebraically,

:&lt;math&gt;\sum_{i \ne n + 2}^{2n} 2^{i - 1}.&lt;/math&gt;

So, for example, 47 is 101111 in binary, 223 is 11011111, etc. The difference between the 2''n''-th [[Mersenne prime|Mersenne number]] and the ''n''-th Carol number is &lt;math&gt;2^{n + 1}&lt;/math&gt;. This gives yet another equivalent expression for Carol numbers, &lt;math&gt;(2^{2n} - 1) - 2^{n + 1}&lt;/math&gt;. The difference between the ''n''-th [[Kynea number]] and the ''n''-th Carol number is the (''n'' + 2)th [[power of two]].

==Primes and modular restrictions==
Starting with 7, every third Carol number is a multiple of 7. Thus, for a Carol number to also be a [[prime number]], its index ''n'' cannot be of the form 3''x'' + 2 for ''x'' &gt; 0. The first few Carol numbers that are also prime are 7, 47, 223, 3967, 16127 (these are listed in Sloane's {{OEIS2C|id=A091516}}).

The 7th Carol number and 5th Carol prime, 16127, is also a prime when its digits are reversed, so it is the smallest Carol [[emirp]].&lt;ref&gt;[http://primes.utm.edu/curios/page.php/16127.html Prime Curios 16127] at [[Prime Pages]]&lt;/ref&gt; The 12th Carol number and 7th Carol prime, 16769023, is also a Carol emirp.&lt;ref&gt;[http://primes.utm.edu/curios/page.php/16769023.html Prime Curios 16769023] at [[Prime Pages]]&lt;/ref&gt;

{{As of|2018|2}}, the largest known prime Carol number has index ''n'' = 695631, which has 418812 digits.&lt;ref&gt;[http://primes.utm.edu/primes/page.php?id=121905 Entry for 695631st Carol number] at [[Prime Pages]]&lt;/ref&gt;&lt;ref&gt;[http://www.noprimeleftbehind.net/Carol-Kynea-prime-search.htm Carol and Kynea Prime Search] by Mark Rodenkirch&lt;/ref&gt; It was found by Mark Rodenkirch in July 2016 using the programs CKSieve and PrimeFormGW. It is the 44th Carol prime.

== Generalizations ==

A '''generalized Carol number base ''b''''' is defined to be a number of the form (''b''&lt;sup&gt;''n''&lt;/sup&gt;−1)&lt;sup&gt;2&lt;/sup&gt; − 2 with ''n'' ≥ 1, a generalized Carol number base ''b'' can be prime only if ''b'' is even, since if ''b'' is odd, then all generalized Carol numbers base ''b'' are even and thus not prime. A generalized Carol number to base ''b''&lt;sup&gt;''n''&lt;/sup&gt; is also a generalized Carol number to base ''b''.

Least ''n'' ≥ 1 such that ((2''b'')&lt;sup&gt;''n''&lt;/sup&gt;−1)&lt;sup&gt;2&lt;/sup&gt; − 2 is prime are
:2, 1, 1, 1, 1, 3, 1, 1, 2, 1, 1, 2, 159, 1, 1, 2, 1, 1, 1, 4, 3, 1, 12, 1, 1, 2, 9, 1, 88, 2, 1, 1, 12, 4, 1, 1, 183, 1, 1, 320, 24, 4, 3, 2, 1, 3, 1, 5, 2, 4, 2, 1, 2, 1, 705, 2, 3, 29, 1, 1, 1, 4836, 20, 1, 135, 1, 4, 1, 6, 1, 15, 3912, 1, 2, 8, 3, 24, 1, 14, 4, 1, 2, 321, 11, 1, 174, 1, 6, 1, 42, 310, 1, 2, 27, 2, 1, 29, 3, 103, 20, ...

{|class="wikitable"
|''b''
|numbers ''n'' ≥ 1 such that (''b''&lt;sup&gt;''n''&lt;/sup&gt;−1)&lt;sup&gt;2&lt;/sup&gt; − 2 is prime (these ''n'' are checked up to 30000)
|[[OEIS]] sequence
|-
|2
|2, 3, 4, 6, 7, 10, 12, 15, 18, 19, 21, 25, 27, 55, 129, 132, 159, 171, 175, 315, 324, 358, 393, 435, 786, 1459, 1707, 2923, 6462, 14289, 39012, 51637, 100224, 108127, 110953, 175749, 185580, 226749, 248949, 253987, 520363, 653490, 688042, 695631, ...
|{{OEIS link|id=A091515}}
|-
|4
|1, 2, 3, 5, 6, 9, 66, 162, 179, 393, 3231, 19506, 50112, 92790, 326745, 344021, ...
|
|-
|6
|1, 2, 6, 7, 20, 47, 255, 274, 279, 308, 1162, 2128, 3791, 9028, 9629, 10029, 13202, 38660, 46631, 48257, 117991, ...
|{{OEIS link|id=A100901}}
|-
|8
|1, 2, 4, 5, 6, 7, 9, 43, 44, 53, 57, 105, 108, 131, 145, 262, 569, 2154, 4763, 13004, 33408, 58583, 61860, 75583, 82983, 217830, 231877, ...
|
|-
|10
|1, 8, 21, 123, 4299, 6128, 11760, 18884, 40293, ...
|{{OEIS link|id=A100903}}
|-
|12
|3, 29, 51, 7824, 15456, 22614, 28312, 47014, 68835, ...
|
|-
|14
|1, 6, 13, 45, 74, 240, 553, 12348, 13659, 50603, ...
|{{OEIS link|id=A100905}}
|-
|16
|1, 3, 33, 81, 9753, 25056, 46395, ...
|
|-
|18
|2, 8, 30, 98, 110, 185, 912, 2514, 4074, 10208, 15123, 19395, ...
|
|-
|20
|1, 2, 53, 183, 1281, 1300, 8041, 29936, 72820, ...
|
|-
|22
|1, 8, 35, 88, 503, 8643, 8743, 14475, ...
|{{OEIS link|id=A100907}}
|-
|24
|2, 27, 92, 4950, 20047, ...
|
|-
|26
|159, 879, 4744, 5602, 74387, ...
|
|-
|28
|1, 22, 127, 165, 2520, 6492, 6577, 22960, 25528, ...
|
|-
|30
|1, 6, 19, 30, 166, 495, 769, 826, 1648, 3993, ...
|
|-
|32
|2, 3, 5, 11, 35, 63, 87, 37116, 130698, ...
|
|-
|34
|1, 4, 258, ...
|
|-
|36
|1, 3, 10, 137, 154, 581, 1064, 4514, 6601, 19330, ...
|
|-
|38
|1, 2, 13, 560, 28933, ...
|
|-
|40
|4, 15, 39, 138, 2153, 4084, 5639, ...
|
|-
|42
|3, 6, 14, 15, 29, 78, 195, 255, 272, 713, 2526, 4852, 10573, ...
|
|-
|44
|1, 7, 30, 90, 1288, 1947, 12909, 25786, ...
|
|-
|46
|12, 269, 1304, 5172, ...
|
|-
|48
|1, 2, 4, 6, 12, 13, 3882, 6123, 15067, 15085, ...
|
|-
|50
|1, 3, 4, 9, 31, 66, 115, 430, 1233, 2546, 2674, 6360, 53351, 69033, 69157, ...
|
|}

{{As of|2018|2}}, the largest known generalized Carol prime is (2&lt;sup&gt;695631&lt;/sup&gt;−1)&lt;sup&gt;2&lt;/sup&gt; − 2.

==References==
{{reflist}}

==External links==
* {{MathWorld|title=Near-Square Prime|urlname=Near-SquarePrime}}
* [http://primes.utm.edu/primes/page.php?id=121905 Prime Database entry for Carol(695631)]
* [http://harvey563.tripod.com/Carol_Kynea.txt Carol and Kynea Primes]
* [http://www.noprimeleftbehind.net/Carol-Kynea-prime-search.htm Carol and Kynea Prime Search]
[[Category:Integer sequences]]

{{Prime number classes|state=collapsed}}
{{Classes of natural numbers |state=collapsed}}</text>
      <sha1>9vl0z9g3f6mcvevq73r8jdem676ir5a</sha1>
    </revision>
  </page>
  <page>
    <title>Configuration space (mathematics)</title>
    <ns>0</ns>
    <id>54981574</id>
    <revision>
      <id>843192185</id>
      <parentid>839521244</parentid>
      <timestamp>2018-05-27T14:32:03Z</timestamp>
      <contributor>
        <username>CitationCleanerBot</username>
        <id>15270283</id>
      </contributor>
      <minor/>
      <comment>/* Configuration spaces of graphs */arxivify URL / redundant url</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11451">[[File:Moebius_Surface_1_Display_Small.png|thumb|The configuration space of all unordered pairs of distinct points on the circle is the [[Möbius strip]].]]
&lt;!-- Deleted image removed: [[File:Topological III by Robert R. Wilson, at Harvard University.JPG|upright|thumb|The configuration space of 3 not necessarily distinct points on the circle &lt;math&gt;T^3/S_3,&lt;/math&gt; is the above orbifold.]] --&gt;

In [[mathematics]], a '''configuration space''' (also known as '''Fadell's configuration space'''&lt;ref&gt;{{Cite web|url=https://ncatlab.org/nlab/show/Fadell's+configuration+space|title=Fadell's configuration space in nLab|website=ncatlab.org|access-date=2017-08-22}}&lt;/ref&gt;) is a construction closely related to [[state space]]s or [[phase space]]s in physics. In physics, these are used to describe the state of a whole system as a single point in a high-dimensional space. In mathematics, they are used to describe assignments of a collection of points to positions in a [[topological space]]. More specifically, configuration spaces in mathematics are particular examples of [[Configuration space (physics)|configuration spaces in physics]] in the particular case of several non-colliding particles.

== Definition ==

For a topological space &lt;math&gt;X&lt;/math&gt;, the '''''n''&lt;sup&gt;th&lt;/sup&gt; (ordered) configuration space of X''' is the set of ''n''-[[tuple]]s of pairwise distinct points in &lt;math&gt;X&lt;/math&gt;:

:&lt;math&gt;\operatorname{Conf}_n(X):=\prod^n X \setminus \{(x_1,x_2,\ldots,x_n)\in X^n \mid x_i=x_j\ \text{ for some  }i\neq j\}&lt;/math&gt;.&lt;ref&gt;https://arxiv.org/pdf/0806.4111.pdf&lt;/ref&gt;

This space is generally endowed with the subspace topology from the inclusion of &lt;math&gt;\operatorname{Conf}_n(X)&lt;/math&gt; into &lt;math&gt;X^n&lt;/math&gt;. It is also sometimes denoted &lt;math&gt;F(X, n)&lt;/math&gt;, &lt;math&gt;F^n(X)&lt;/math&gt;, or &lt;math&gt;\mathcal{C}^n(X)&lt;/math&gt;.&lt;ref name=":0" /&gt;

There is a natural [[Group action|action]] of the [[symmetric group]] &lt;math&gt;S_n&lt;/math&gt; on the points in &lt;math&gt;\operatorname{Conf}_n(X)&lt;/math&gt; given by

: &lt;math&gt;\begin{align}
  S_n\times \operatorname{Conf}_n(X)&amp;\longrightarrow \operatorname{Conf}_n(X) \\
  (\sigma,x)&amp;\longmapsto \sigma(x)=(x_{\sigma(1)},x_{\sigma(2)},\ldots,x_{\sigma(n)}).
\end{align}&lt;/math&gt;

This action gives rise to the '''{{var|n}}&lt;sup&gt;th&lt;/sup&gt; unordered configuration space of {{var|X}}''',

: &lt;math&gt;\operatorname{UConf}_n(X):=\operatorname{Conf}_n(X)/S_n&lt;/math&gt;,

which is the [[orbit space]] of that action. The intuition is that this action "forgets the names of the points". The unordered configuration space is sometimes denoted &lt;math&gt;\mathcal{UC}^n(X)&lt;/math&gt;.&lt;ref name=":0" /&gt; The collection of unordered configuration spaces over all &lt;math&gt;n&lt;/math&gt; is the [[Ran space]], and comes with a natural topology.

=== Alternative formulations ===
For a topological space &lt;math&gt;X&lt;/math&gt; and a finite set &lt;math&gt;S&lt;/math&gt;, the '''configuration space of {{var|X}} with particles labeled by {{var|S}}''' is

: &lt;math&gt;\operatorname{Conf}_S(X) := \{f\mid f:S\hookrightarrow X\text{ is injective}\}&lt;/math&gt;.

For &lt;math&gt;n\in\mathbf{N}&lt;/math&gt;, define &lt;math&gt;\mathbf{n}:=\{1,2,\ldots,n\}&lt;/math&gt;. Then the '''{{var|n}}&lt;sup&gt;th&lt;/sup&gt; configuration space of ''X''''' is &lt;math&gt;\operatorname{Conf}_{\mathbf{n}}(X)&lt;/math&gt;, and is denoted simply &lt;math&gt;\operatorname{Conf}_n(X)&lt;/math&gt;.&lt;ref&gt;{{Cite arXiv |eprint=1612.08290|last1=Chettih|first1=Safia|title=The Homology of Configuration Spaces of Graphs|last2=Lütgehetmann|first2=Daniel|class=math.AT|year=2016}}&lt;/ref&gt;

== Examples ==
{{Expand section|date=August 2017}}
* The space of ordered configuration of two points in &lt;math&gt;\mathbf{R}^2&lt;/math&gt; is [[Homeomorphism|homeomorphic]] to the product of the Euclidean 3-space with a circle, i.e. &lt;math&gt;\operatorname{Conf}_2(\mathbf{R}^2)\cong \mathbf{R}^3\times S^1&lt;/math&gt;.&lt;ref name=":0" /&gt; More generally, the configuration space of two points in &lt;math&gt;\mathbf{R}^n&lt;/math&gt; is [[Homotopy|homotopy equivalent]] to the sphere &lt;math&gt;S^{n-1}&lt;/math&gt;.

== Connection to braid groups ==
{{Main|Braid group}}

The '''{{var|n}}-strand braid group''' on a [[Connected space|connected]] topological space {{var|X}} is 
:&lt;math&gt;B_n(X):=\pi_1(\operatorname{UConf}_n(X))&lt;/math&gt;, 
the [[fundamental group]] of the {{var|n}}&lt;sup&gt;th&lt;/sup&gt; unordered configuration space of {{var|X}}. The '''{{var|n}}-strand pure braid group''' on {{var|X}} is&lt;ref name=":0"&gt;{{Cite book|url=http://www.worldscientific.com/doi/abs/10.1142/9789814291415_0004|title=Braids|last=Ghrist|first=Robert|date=2009-12-01|publisher=WORLD SCIENTIFIC|isbn=9789814291408|series=Lecture Notes Series, Institute for Mathematical Sciences, National University of Singapore|volume=Volume 19|pages=263–304|doi=10.1142/9789814291415_0004}}&lt;/ref&gt;
:&lt;math&gt;P_n(X):=\pi_1(\operatorname{Conf}_n(X))&lt;/math&gt;.

The first studied braid groups were the '''Artin braid groups''' &lt;math&gt;B_n\cong\pi_1(\operatorname{UConf}_n(\mathbf{R}^2))&lt;/math&gt;. While the above definition is not the one that [[Emil Artin]] gave, [[Adolf Hurwitz]] implicitly defined the Artin braid groups as fundamental groups of configuration spaces of the complex plane considerably before Artin's definition (in 1891).&lt;ref&gt;{{cite book |series=Lecture Notes in Mathematics |volume=372 |first=Wilhelm |last=Magnus | authorlink=Wilhelm Magnus |chapter=Braid groups: A survey |chapterurl=http://www.springerlink.com/content/2w7lp1402314k343/?p=8ca127a073654ea182c15cbecdeca393&amp;pi=3 |title=Proceedings of the Second International Conference on the Theory of Groups |publisher=Springer |year=1974 |isbn=978-3-540-06845-7 |pages=465}}&lt;/ref&gt;

It follows from this definition and the fact that &lt;math&gt;\operatorname{Conf}_n(\mathbf{R}^2)&lt;/math&gt; and &lt;math&gt;\operatorname{UConf}_n(\mathbf{R}^2)&lt;/math&gt; are [[Eilenberg–MacLane space]]s of type &lt;math&gt;K(\pi,1)&lt;/math&gt;&lt;ref name=":0" /&gt; that the unordered configuration space of the plane &lt;math&gt;\operatorname{UConf}_n(\mathbf{R}^2)&lt;/math&gt; is the [[classifying space]] of the Artin braid group, and &lt;math&gt;\operatorname{Conf}_n(\mathbf{R}^2)&lt;/math&gt; is the classifying space of the pure Artin braid group, when both are considered as [[discrete group]]s.&lt;ref&gt;{{Cite book|url=https://link.springer.com/chapter/10.1007/978-3-642-31031-7_18|title=Vladimir I. Arnold - Collected Works|last=Arnold|first=Vladimir I.|date=1969|publisher=Springer, Berlin, Heidelberg|year=|isbn=|location=|pages=183–186|language=en|doi=10.1007/978-3-642-31031-7_18|author-link=Vladimir Arnold}}&lt;/ref&gt;

== Configuration spaces of manifolds ==

If the original space is a manifold, the configuration space of ''distinct,'' unordered points is also a manifold, while the configuration space of ''not necessarily distinct'' unordered points is instead an [[orbifold]].

A configuration space is a type of [[classifying space]] or (fine) [[moduli space]].  In particular, there is a universal bundle &lt;math&gt; \pi\colon E_n\to C_n &lt;/math&gt; which is a sub-bundle of the trivial bundle &lt;math&gt; C_n\times X\to C_n&lt;/math&gt;, and which has the property that the fiber over each point &lt;math&gt; p\in C_n&lt;/math&gt; is the ''n'' element subset of &lt;math&gt; X &lt;/math&gt; classified by&amp;nbsp;''p''.

The homotopy type of configuration spaces is not [[homotopy invariant]] – for example, the spaces &lt;math&gt;\operatorname{Conf}_n(\Bbb R^m)&lt;/math&gt; are not homotopy equivalent for any two distinct values of &lt;math&gt;m&lt;/math&gt;. For instance, &lt;math&gt;\operatorname{Conf}_n(\Bbb R)&lt;/math&gt; is not connected, &lt;math&gt;\operatorname{Conf}_n(\Bbb R^2)&lt;/math&gt; is an [[Eilenberg–MacLane space]] of type &lt;math&gt;K(\pi,1)&lt;/math&gt;,&lt;ref name=":0" /&gt; and &lt;math&gt;\operatorname{Conf}_n(\Bbb R^m)&lt;/math&gt; is [[Simply connected space|simply connected]] for &lt;math&gt; m \geq 3&lt;/math&gt;.

It used to be an open question whether there were examples of ''compact'' manifolds which were homotopy equivalent but had non-homotopy equivalent configuration spaces: such an example was found only in 2005 by Riccardo Longoni and Paolo Salvatore. Their example are two three-dimensional [[lens space]]s, and the configuration spaces of at least two points in them. That these configuration spaces are not homotopy equivalent was detected by [[Massey product]]s in their respective universal covers.&lt;ref&gt;{{citation|title=Configuration spaces are not homotopy invariant|year=2005|last1=Salvatore|last2=Longoni|first1=Paolo|first2=Riccardo|journal=Topology|volume=44|issue=2|pages=375&amp;ndash;380|doi=10.1016/j.top.2004.11.002}}&lt;/ref&gt; Homotopy invariance for configuration spaces of [[Simply connected space|simply connected]] closed manifolds remains open in general, and has been proved to hold over the base field &lt;math&gt;\mathbf{R}&lt;/math&gt;.&lt;ref&gt;{{cite arxiv|last=Campos|first=Ricardo|last2=Willwacher|first2=Thomas|author-link2=Thomas Willwacher|date=2016-04-07|title=A model for configuration spaces of points|eprint=1604.02043 |volume=|pages=|via=|class=math.QA}}&lt;/ref&gt;&lt;ref&gt;{{cite arxiv|last=Idrissi|first=Najib|date=2016-08-29|title=The Lambrechts-Stanley Model of Configuration Spaces|eprint=1608.08054 |class=math.AT}}&lt;/ref&gt;

== Configuration spaces of graphs ==
Some results are particular to configuration spaces of [[Graph (topology)|graphs]]. [[Robert Ghrist]] motivates these problems as related to robotics and motion planning: one can imagine placing several robots on tracks and trying to navigate them to different positions without collision. The tracks correspond to (the edges of) a graph, the robots correspond to particles, and successful navigation corresponds to a path in the configuration space of that graph.&lt;ref name=":1"&gt;{{citation |last=Ghrist|first=Robert|authorlink=Robert Ghrist|contribution=Configuration spaces and braid groups on graphs in robotics|title= Knots, braids, and mapping class groups—papers dedicated to [[Joan Birman|Joan S. Birman]]|pages=29–40|series= AMS/IP Stud. Adv. Math.|volume=24|publisher=Amer. Math. Soc.|location= Providence, RI| year=2001| eprint=math/9905023|mr=1873106}}&lt;/ref&gt;

For any graph &lt;math&gt;\Gamma&lt;/math&gt;, &lt;math&gt;\operatorname{Conf}_n(\Gamma)&lt;/math&gt; is an Eilenberg–MacLane spaces of type &lt;math&gt;K(\pi,1)&lt;/math&gt;&lt;ref name=":1" /&gt; and [[Deformation retract|strong deformation retracts]] to a subspace of dimension &lt;math&gt;b(\Gamma)&lt;/math&gt;, where &lt;math&gt;b(\Gamma)&lt;/math&gt; is the number of vertices of [[Degree (graph theory)|degree]] at least 3.&lt;ref name=":1" /&gt;&lt;ref&gt;{{Cite journal|last=Farley|first=Daniel|last2=Sabalka|first2=Lucas|date=2005-08-31|title=Discrete Morse theory and graph braid groups|journal=Algebraic &amp; Geometric Topology|volume=5|issue=3|pages=1075–1109|doi=10.2140/agt.2005.5.1075|issn=1472-2739|arxiv=math/0410539}}&lt;/ref&gt; Moreover, &lt;math&gt;\operatorname{UConf}_n(\Gamma)&lt;/math&gt; and &lt;math&gt;\operatorname{Conf}_n(\Gamma)&lt;/math&gt; deformation retract to [[Non-positive curvature|non-positively curved]] [[cubical complex]]es of dimension at most &lt;math&gt;\min(n, b(\Gamma))&lt;/math&gt;.&lt;ref&gt;{{Cite journal|last=Świątkowski|first=Jacek|date=2001|title=Estimates for homological dimension of configuration spaces of graphs|url=http://journals.impan.pl/cgi-bin/doi?cm89-1-5|journal=Colloquium Mathematicum|language=pl|volume=89|issue=1|pages=69–79|doi=10.4064/cm89-1-5|issn=0010-1354}}&lt;/ref&gt;&lt;ref&gt;Daniel Lütgehetmann. Configuration spaces of graphs. Master’s thesis, Freie Universität Berlin, 2014.&lt;/ref&gt;

==See also==
{{Portal|Topology}}
*[[Configuration space (physics)]]
*[[State space (physics)]]

== References ==
&lt;references/&gt;

{{Topology}}

{{DEFAULTSORT:Configuration Space}}
[[Category:Manifolds]]
[[Category:Topology]]
[[Category:Algebraic topology]]</text>
      <sha1>ptlce58avapnsfx418ew5zvwi78m3p5</sha1>
    </revision>
  </page>
  <page>
    <title>Connection (composite bundle)</title>
    <ns>0</ns>
    <id>39395816</id>
    <revision>
      <id>786605647</id>
      <parentid>571600063</parentid>
      <timestamp>2017-06-20T13:29:51Z</timestamp>
      <contributor>
        <username>CBM</username>
        <id>1108292</id>
      </contributor>
      <minor/>
      <comment>Manually reviewed edit to replace magic words per [[Special:PermanentLink/772743896#Future_of_magic_links|local rfc]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7014">Composite bundles &lt;math&gt; Y\to \Sigma \to X&lt;/math&gt; play a prominent role in [[gauge theory]] with [[symmetry breaking]], e.g., [[gauge gravitation theory]], [[non-autonomous mechanics]] where &lt;math&gt;X=\mathbb R&lt;/math&gt; is the time axis, e.g., mechanics with time-dependent parameters, and so on. There are the important relations between [[connection (fibred manifold)|connections]] on [[fiber bundle]]s &lt;math&gt;Y\to X&lt;/math&gt;, &lt;math&gt;Y\to \Sigma&lt;/math&gt; and &lt;math&gt;\Sigma\to X&lt;/math&gt;.

==Composite bundle==

In [[differential geometry]] by a '''composite bundle''' is meant the composition

: &lt;math&gt;\pi: Y\to \Sigma\to X  \qquad\qquad (1)&lt;/math&gt;

of fiber bundles

: &lt;math&gt;\pi_{Y\Sigma}: Y\to\Sigma, \qquad  \pi_{\Sigma X}: \Sigma\to X. &lt;/math&gt;

It is provided with bundle coordinates &lt;math&gt;(x^\lambda,\sigma^m,y^i) &lt;/math&gt;, where &lt;math&gt; (x^\lambda,\sigma^m) &lt;/math&gt; are bundle coordinates on a fiber bundle &lt;math&gt;\Sigma\to X&lt;/math&gt;, i.e., transition functions of coordinates &lt;math&gt;\sigma^m&lt;/math&gt; are independent of coordinates &lt;math&gt;y^i&lt;/math&gt;.

The following fact provides the above mentioned physical applications of composite bundles. Given the composite bundle (1), let &lt;math&gt;h&lt;/math&gt; be a global section
of a fiber bundle &lt;math&gt;\Sigma\to X&lt;/math&gt;, if any. Then the [[pullback bundle]] 
&lt;math&gt;Y^h=h^*Y&lt;/math&gt; over &lt;math&gt;X&lt;/math&gt; is a subbundle of a fiber bundle &lt;math&gt;Y\to X&lt;/math&gt;.

==Composite principal bundle ==

For instance, let &lt;math&gt;P\to X&lt;/math&gt; be a [[principal bundle]] with a structure Lie group &lt;math&gt;G&lt;/math&gt; which is [[reduction of the structure group|reducible]] to its closed subgroup &lt;math&gt;H&lt;/math&gt;. There is a composite bundle &lt;math&gt;P\to P/H\to X&lt;/math&gt; where &lt;math&gt;P\to P/H&lt;/math&gt; is a principal bundle with a structure group &lt;math&gt;H&lt;/math&gt; and &lt;math&gt;P/H\to X&lt;/math&gt; is a fiber bundle associated with &lt;math&gt;P\to X&lt;/math&gt;. Given a global section &lt;math&gt;h&lt;/math&gt; of &lt;math&gt;P/H\to X&lt;/math&gt;, the pullback bundle &lt;math&gt;h^*P&lt;/math&gt; is a reduced principal subbundle of &lt;math&gt;P&lt;/math&gt; with a structure group &lt;math&gt;H&lt;/math&gt;. In [[gauge theory]], sections of &lt;math&gt;P/H\to X&lt;/math&gt; are treated as [[Higgs field (classical)|classical Higgs fields]].

== Jet manifolds of a composite bundle==

Given the composite bundle &lt;math&gt;Y\to \Sigma\to X&lt;/math&gt; (1), let us consider the [[jet bundle|jet manifolds]] &lt;math&gt;J^1\Sigma&lt;/math&gt;, &lt;math&gt;J^1_\Sigma Y&lt;/math&gt;, and &lt;math&gt;J^1Y&lt;/math&gt; of the fiber bundles &lt;math&gt;\Sigma\to X&lt;/math&gt;, &lt;math&gt;Y\to \Sigma&lt;/math&gt;, and &lt;math&gt;Y\to X&lt;/math&gt;, respectively. They are provided with the adapted coordinates &lt;math&gt; ( x^\lambda,\sigma^m, \sigma^m_\lambda) &lt;/math&gt;, &lt;math&gt; (x^\lambda, \sigma^m, y^i, \widehat  y^i_\lambda, y^i_m), &lt;/math&gt;, and &lt;math&gt;(x^\lambda, \sigma^m, y^i, \sigma^m_\lambda ,y^i_\lambda). &lt;/math&gt;

There is the canonical map

: &lt;math&gt; J^1\Sigma\times_\Sigma J^1_\Sigma Y\to_Y J^1Y, \qquad
y^i_\lambda=y^i_m \sigma^m_\lambda +\widehat y^i_\lambda&lt;/math&gt;.

==Composite connection==

This canonical map  defines the relations between connections on fiber bundles &lt;math&gt;Y\to X&lt;/math&gt;, &lt;math&gt;Y\to\Sigma&lt;/math&gt; and &lt;math&gt;\Sigma\to X&lt;/math&gt;. These connections are given by the corresponding [[connection (fibred manifold)|tangent-valued connection forms]]

: &lt;math&gt;\gamma=dx^\lambda\otimes (\partial_\lambda +\gamma_\lambda^m\partial_m + \gamma_\lambda^i\partial_i), &lt;/math&gt;

: &lt;math&gt;  A_\Sigma=dx^\lambda\otimes (\partial_\lambda + A_\lambda^i\partial_i) +d\sigma^m\otimes (\partial_m + A_m^i\partial_i), &lt;/math&gt;

: &lt;math&gt; \Gamma=dx^\lambda\otimes (\partial_\lambda + \Gamma_\lambda^m\partial_m). &lt;/math&gt;

A connection &lt;math&gt;A_\Sigma&lt;/math&gt; on a fiber bundle &lt;math&gt;Y\to\Sigma&lt;/math&gt;
and a connection &lt;math&gt;\Gamma&lt;/math&gt;  on a fiber bundle &lt;math&gt;\Sigma\to
X&lt;/math&gt; define a connection

: &lt;math&gt; \gamma=dx^\lambda\otimes (\partial_\lambda +\Gamma_\lambda^m\partial_m + (A_\lambda^i +
A_m^i\Gamma_\lambda^m)\partial_i) &lt;/math&gt;

on a composite bundle &lt;math&gt;Y\to X&lt;/math&gt;. It is called the '''composite connection'''. This is a unique connection such that the [[connection (fibred manifold)|horizontal lift]] &lt;math&gt;\gamma\tau &lt;/math&gt; onto &lt;math&gt;Y&lt;/math&gt; of a vector field &lt;math&gt;\tau&lt;/math&gt; on &lt;math&gt;X&lt;/math&gt; by means of the composite connection &lt;math&gt;\gamma&lt;/math&gt; coincides with the composition &lt;math&gt;A_\Sigma(\Gamma\tau) &lt;/math&gt; of horizontal lifts of &lt;math&gt;\tau&lt;/math&gt; onto &lt;math&gt;\Sigma&lt;/math&gt; by means of a connection &lt;math&gt;\Gamma&lt;/math&gt; and then onto &lt;math&gt;Y&lt;/math&gt; by means of a connection &lt;math&gt;A_\Sigma&lt;/math&gt;.

==Vertical covariant differential==

Given the composite bundle &lt;math&gt;Y&lt;/math&gt; (1), there is the following [[exact sequence]] of vector bundles over &lt;math&gt;Y&lt;/math&gt;:

: &lt;math&gt; 0\to V_\Sigma Y\to VY\to Y\times_\Sigma V\Sigma\to 0, \qquad\qquad (2)&lt;/math&gt;

where &lt;math&gt;V_\Sigma Y&lt;/math&gt;  and &lt;math&gt;V_\Sigma^*Y&lt;/math&gt; are the [[vertical bundle|vertical tangent bundle]]  and the [[connection (fibred manifold)|vertical cotangent bundle]] of &lt;math&gt;Y\to\Sigma&lt;/math&gt;. Every connection &lt;math&gt;A_\Sigma&lt;/math&gt; on a fiber bundle &lt;math&gt;Y\to\Sigma&lt;/math&gt; yields the splitting

: &lt;math&gt;A_\Sigma: TY\supset VY \ni \dot y^i\partial_i + \dot\sigma^m\partial_m \to (\dot
y^i -A^i_m\dot\sigma^m)\partial_i &lt;/math&gt;

of the exact sequence (2). Using this splitting, one can construct a first order [[differential operator]]

: &lt;math&gt; \widetilde D: J^1Y\to T^*X\otimes_Y V_\Sigma Y, \qquad \widetilde D= dx^\lambda\otimes(y^i_\lambda- A^i_\lambda -A^i_m\sigma^m_\lambda)\partial_i, &lt;/math&gt;

on a composite bundle &lt;math&gt;Y\to X&lt;/math&gt;. It is called the '''vertical covariant differential'''.
It possesses the following important property.

Let &lt;math&gt;h&lt;/math&gt; be a section of a fiber bundle &lt;math&gt;\Sigma\to X&lt;/math&gt;, and let &lt;math&gt;h^*Y\subset Y&lt;/math&gt; be the pullback bundle over &lt;math&gt;X&lt;/math&gt;. Every connection &lt;math&gt;A_\Sigma&lt;/math&gt; induces the [[connection (fibred manifold)|pullback connection]]

: &lt;math&gt;A_h=dx^\lambda\otimes[\partial_\lambda+((A^i_m\circ h)\partial_\lambda h^m
+(A\circ h)^i_\lambda)\partial_i] &lt;/math&gt;

on &lt;math&gt;h^*Y&lt;/math&gt;. Then the restriction of a vertical covariant differential &lt;math&gt;\widetilde D&lt;/math&gt;  to &lt;math&gt;J^1h^*Y\subset J^1Y&lt;/math&gt; coincides with the familiar [[connection (fibred manifold)|covariant differential]] &lt;math&gt;D^{A_h}&lt;/math&gt;
on &lt;math&gt;h^*Y&lt;/math&gt; relative to the pullback connection &lt;math&gt;A_h&lt;/math&gt;.

==References==
* Saunders, D., ''The geometry of jet bundles.'' Cambridge University Press, 1989. {{isbn|0-521-36948-7}}.
* Mangiarotti, L., [[Gennadi Sardanashvily|Sardanashvily, G.]], ''Connections in Classical and Quantum Field Theory.'' World Scientific, 2000. {{isbn|981-02-2013-8}}.

==External links==
*[[Gennadi Sardanashvily|Sardanashvily, G.]], ''Advanced Differential Geometry for Theoreticians. Fiber bundles, jet manifolds and Lagrangian theory'', Lambert Academic Publishing, 2013. {{isbn|978-3-659-37815-7}}; [http://xxx.lanl.gov/abs/0908.1886 arXiv: 0908.1886]

==See also==
*[[Connection (mathematics)]]
*[[Connection (fibred manifold)]]

[[Category:Differential geometry]]
[[Category:Connection (mathematics)]]</text>
      <sha1>mjvvs6pu4vmh05y61d7ocsgpgtp9i7b</sha1>
    </revision>
  </page>
  <page>
    <title>Contraction mapping</title>
    <ns>0</ns>
    <id>6239</id>
    <revision>
      <id>859371238</id>
      <parentid>859371136</parentid>
      <timestamp>2018-09-13T16:30:14Z</timestamp>
      <contributor>
        <username>Bender235</username>
        <id>88026</id>
      </contributor>
      <minor/>
      <comment>/* Locally convex spaces */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="6293">In [[mathematics]], a '''contraction mapping''', or '''contraction''' or '''contractor''', on a [[metric space]] ''(M,d)'' is a [[function (mathematics)|function]] ''f'' from ''M'' to itself, with the property that there is some nonnegative [[real number]] &lt;math&gt;0\leq k &lt; 1&lt;/math&gt; such that for all ''x'' and ''y'' in ''M'',
:&lt;math&gt;d(f(x),f(y))\leq k\,d(x,y).&lt;/math&gt;
The smallest such value of ''k'' is called the '''Lipschitz constant''' of ''f''.  Contractive maps are sometimes called '''Lipschitzian maps'''.  If the above condition is instead satisfied for
''k''&amp;nbsp;≤&amp;nbsp;1, then the mapping is said to be a [[non-expansive map]].

More generally, the idea of a contractive mapping can be defined for maps between metric spaces. Thus, if (''M'',''d'') and (''N'',''d''') are two metric spaces, then &lt;math&gt;f:M \rightarrow N&lt;/math&gt; is a contractive mapping if there is a constant &lt;math&gt;k &lt; 1&lt;/math&gt; such that
:&lt;math&gt;d'(f(x),f(y))\leq k\,d(x,y)&lt;/math&gt;
for all ''x'' and ''y'' in ''M''.

Every contraction mapping is [[Lipschitz continuous]] and hence [[uniformly continuous]] (for a Lipschitz continuous function, the constant ''k'' is no longer necessarily less than 1).

A contraction mapping has at most one [[fixed point (mathematics)|fixed point]]. Moreover, the [[Banach fixed-point theorem]] states that every contraction mapping on a nonempty [[complete metric space]] has a unique fixed point, and that for any ''x'' in ''M'' the [[iterated function]] sequence ''x'', ''f'' (''x''), ''f'' (''f'' (''x'')), ''f'' (''f'' (''f'' (''x''))), ... converges to the fixed point. This concept is very useful for [[iterated function systems]] where contraction mappings are often used. Banach's fixed-point theorem is also applied in proving the existence of solutions of ordinary differential equations, and is used in one proof of the [[inverse function theorem]].&lt;ref name="shifrin"&gt;{{cite book |first=Theodore |last=Shifrin |title=Multivariable Mathematics |location= |publisher=Wiley |year=2005 |isbn=0-471-52638-X |pages=244–260 }}&lt;/ref&gt;

Contraction mapping plays an important role in [[dynamic programming]] problems.&lt;ref&gt;{{cite journal |first=Eric V. |last=Denardo |title=Contraction Mappings in the Theory Underlying Dynamic Programming |journal=SIAM Review |volume=9 |issue=2 |pages=165–177 |year=1967 |doi=10.1137/1009030 }}&lt;/ref&gt;&lt;ref&gt;{{cite book |first=Nancy L. |last=Stokey |first2=Robert E. |last2=Lucas |year=1989 |authorlink2=Robert Lucas Jr. |title=Recursive Methods in Economic Dynamics |location=Cambridge |publisher=Harvard University Press |pages=49–55 |isbn=0-674-75096-9 |url=https://books.google.com/books?id=BgQ3AwAAQBAJ&amp;pg=PA49 }}&lt;/ref&gt;

==Firmly non-expansive mapping==
A non-expansive mapping with &lt;math&gt;k=1&lt;/math&gt; can be strengthened to a '''firmly non-expansive mapping''' in a [[Hilbert space]] ''H'' if the following holds for all ''x'' and ''y'' in ''H'':
:&lt;math&gt;\|f(x)-f(y) \|^2 \leq \, \langle x-y, f(x) - f(y) \rangle.&lt;/math&gt;
where
:&lt;math&gt;d(x,y) = \|x-y\|&lt;/math&gt;

This is a special case of &lt;math&gt;\alpha&lt;/math&gt; averaged nonexpansive operators with &lt;math&gt;\alpha = 1/2&lt;/math&gt;.&lt;ref&gt;{{cite journal |title=Solving monotone inclusions via compositions of nonexpansive averaged operators |first=Patrick L. |last=Combettes |year=2004 |journal=[[Optimization (journal)|Optimization]] |volume=53 |issue=5–6 |pages=475–504 |doi=10.1080/02331930412331327157 }}&lt;/ref&gt; A firmly non-expansive mapping is always non-expansive, via the [[Cauchy–Schwarz inequality]].

==Subcontraction map==
A '''subcontraction map''' or '''subcontractor''' is a map ''f'' on a metric space (''M'',''d'') such that

:&lt;math&gt; d(f(x), f(y)) \le d(x,y) \ ; &lt;/math&gt;
:&lt;math&gt; d(f(f(x)),f(x)) &lt; d(f(x),x) \quad \text{unless} \quad x = f(x) \ . &lt;/math&gt;

If the [[Image (mathematics)|image]] of a subcontractor ''f'' is [[Compact space|compact]], then ''f'' has a fixed point.&lt;ref name=Gold17&gt;{{cite book | last=Goldstein | first=A.A. | title=Constructive real analysis | zbl=0189.49703 | series=Harper’s Series in Modern Mathematics | location=New York-Evanston-London | publisher=Harper and Row | year=1967 |page=17 }}&lt;/ref&gt;

==Locally convex spaces==
In a [[locally convex space]] (''E,P'') with topology given by a set ''P'' of [[seminorm]]s, one can define for any ''p'' &amp;isin; ''P'' a ''p''-contraction as a map ''f'' such that there is some ''k&lt;sub&gt;p&lt;/sub&gt;'' &lt; 1 such that ''p''(''f''(''x'') - ''f''(''y'')) &amp;le; ''k&lt;sub&gt;p&lt;/sub&gt; p''(''x - y''). If ''f'' is a ''p''-contraction for all ''p'' &amp;isin; ''P'' and (''E,P'') is sequentially complete, then ''f'' has a fixed point, given as limit of any sequence ''x&lt;sub&gt;n+1&lt;/sub&gt; = f''(''x&lt;sub&gt;n&lt;/sub&gt;''), and if (''E,P'') is [[Hausdorff space|Hausdorff]], then the fixed point is unique.&lt;ref&gt;{{cite journal |first=G. L., Jr. |last=Cain |first2=M. Z. |last2=Nashed |authorlink2=Zuhair Nashed |title=Fixed Points and Stability for a Sum of Two Operators in Locally Convex Spaces |journal=Pacific Journal of Mathematics |volume=39 |issue=3 |year=1971 |pages=581–592 |doi=10.2140/pjm.1971.39.581 }}&lt;/ref&gt;

==See also==
* [[Short map]]
* [[Contraction (operator theory)]]
* [[Transformation (function)|Transformation]]

==References==
{{reflist}}

==Further reading==
* {{cite book |first=Vasile I. |last=Istratescu |title=Fixed Point Theory : An Introduction |publisher=D.Reidel |location=Holland |year=1981 |isbn=90-277-1224-7 }} provides an undergraduate level introduction.
* {{cite book |first=Andrzej |last=Granas |first2=James |last2=Dugundji |authorlink2=James Dugundji |title=Fixed Point Theory |year=2003 |publisher=Springer-Verlag |location=New York |isbn=0-387-00173-5 }}
* {{cite book |first=William A. |last=Kirk |first2=Brailey |last2=Sims |title=Handbook of Metric Fixed Point Theory |year=2001 |publisher=Kluwer Academic |location=London |isbn=0-7923-7073-2 }}
* {{cite book |first=Arch W. |last=Naylor |first2=George R. |last2=Sell |title=Linear Operator Theory in Engineering and Science |series=Applied Mathematical Sciences |volume=40 |location=New York |publisher=Springer |year=1982 |edition=Second |isbn=0-387-90748-3 |pages=125&amp;ndash;134 |url=https://books.google.com/books?id=t3SXs4-KrE0C&amp;pg=PA125 }}

{{DEFAULTSORT:Contraction Mapping}}
[[Category:Metric geometry]]
[[Category:Fixed points (mathematics)]]</text>
      <sha1>hbyonruqlzvheuzznkizsq6dkbw0c6c</sha1>
    </revision>
  </page>
  <page>
    <title>Convergent matrix</title>
    <ns>0</ns>
    <id>37709899</id>
    <revision>
      <id>868851380</id>
      <parentid>811882674</parentid>
      <timestamp>2018-11-14T21:24:00Z</timestamp>
      <contributor>
        <username>Texvc2LaTeXBot</username>
        <id>33995001</id>
      </contributor>
      <minor/>
      <comment>Replacing deprecated latex syntax [[mw:Extension:Math/Roadmap]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7864">In [[numerical linear algebra]], a '''convergent matrix''' is a matrix that converges to the [[zero matrix]] under [[matrix exponentiation]].

==Background==
When successive powers of a [[matrix (mathematics)|matrix]] '''T''' become small (that is, when all of the entries of '''T''' approach zero, upon raising '''T''' to successive powers), the matrix '''T''' converges to the zero matrix.  A [[matrix splitting|regular splitting]] of a [[invertible matrix|non-singular]] matrix '''A''' results in a convergent matrix '''T'''.  A semi-convergent splitting of a matrix '''A''' results in a semi-convergent matrix '''T'''.  A general [[iterative method]] converges for every initial vector if '''T''' is convergent, and under certain conditions if '''T''' is semi-convergent.

==Definition==
We call an ''n'' &amp;times; ''n'' matrix '''T''' a '''convergent matrix''' if

:{{NumBlk|:|&lt;math&gt; \lim_{k \to \infty}( \mathbf T^k)_{ij} = 0,&lt;/math&gt;|{{EquationRef|1}}}}

for each ''i'' = 1, 2, ..., ''n'' and ''j'' = 1, 2, ..., ''n''.&lt;ref&gt;{{harvtxt|Burden|Faires|1993|p=404}}&lt;/ref&gt;&lt;ref&gt;{{harvtxt|Isaacson|Keller|1994|p=14}}&lt;/ref&gt;&lt;ref&gt;{{harvtxt|Varga|1962|p=13}}&lt;/ref&gt;

==Example==
Let
:&lt;math&gt;\begin{align}
&amp; \mathbf{T} = \begin{pmatrix}
\frac{1}{4} &amp; \frac{1}{2} \\[4pt]
0 &amp; \frac{1}{4}
\end{pmatrix}.
\end{align}&lt;/math&gt;
Computing successive powers of '''T''', we obtain
:&lt;math&gt;\begin{align}
&amp; \mathbf{T}^2 = \begin{pmatrix}
\frac{1}{16} &amp; \frac{1}{4} \\[4pt]
0 &amp; \frac{1}{16}
\end{pmatrix}, \quad \mathbf{T}^3 = \begin{pmatrix}
\frac{1}{64} &amp; \frac{3}{32} \\[4pt]
0 &amp; \frac{1}{64}
\end{pmatrix}, \quad \mathbf{T}^4 = \begin{pmatrix}
\frac{1}{256} &amp; \frac{1}{32} \\[4pt]
0 &amp; \frac{1}{256}
\end{pmatrix}, \quad \mathbf{T}^5 = \begin{pmatrix}
\frac{1}{1024} &amp; \frac{5}{512} \\[4pt]
0 &amp; \frac{1}{1024}
\end{pmatrix},
\end{align}&lt;/math&gt;
:&lt;math&gt;\begin{align}
\mathbf{T}^6 = \begin{pmatrix}
\frac{1}{4096} &amp; \frac{3}{1024} \\[4pt]
0 &amp; \frac{1}{4096}
\end{pmatrix},
\end{align}&lt;/math&gt;
and, in general,
:&lt;math&gt;\begin{align}
\mathbf{T}^k = \begin{pmatrix}
(\frac{1}{4})^k &amp; \frac{k}{2^{2k - 1}} \\[4pt]
0 &amp; (\frac{1}{4})^k
\end{pmatrix}.
\end{align}&lt;/math&gt;
Since
:&lt;math&gt; \lim_{k \to \infty} \left( \frac{1}{4} \right)^k = 0 &lt;/math&gt;
and
:&lt;math&gt; \lim_{k \to \infty} \frac{k}{2^{2k - 1}} = 0, &lt;/math&gt;
'''T''' is a convergent matrix.  Note that ''&amp;rho;''('''T''') = {{math|{{sfrac|1|4}}}}, where ''&amp;rho;''('''T''') represents the [[spectral radius]] of '''T''', since {{math|{{sfrac|1|4}}}} is the only [[eigenvalue]] of '''T'''.

==Characterizations==
Let '''T''' be an ''n'' &amp;times; ''n'' matrix.  The following properties are equivalent to '''T''' being a convergent matrix:
#&lt;math&gt; \lim_{k \to \infty} \| \mathbf T^k \| = 0, &lt;/math&gt; for some natural norm;
#&lt;math&gt; \lim_{k \to \infty} \| \mathbf T^k \| = 0, &lt;/math&gt; for all natural norms;
#&lt;math&gt; \rho( \mathbf T ) &lt; 1 &lt;/math&gt;;
#&lt;math&gt; \lim_{k \to \infty} \mathbf T^k \mathbf x = \mathbf 0, &lt;/math&gt; for every '''x'''.&lt;ref&gt;{{harvtxt|Burden|Faires|1993|p=404}}&lt;/ref&gt;&lt;ref&gt;{{harvtxt|Isaacson|Keller|1994|pp=14,63}}&lt;/ref&gt;&lt;ref&gt;{{harvtxt|Varga|1960|p=122}}&lt;/ref&gt;&lt;ref&gt;{{harvtxt|Varga|1962|p=13}}&lt;/ref&gt;

==Iterative methods==
{{main|Iterative method}}
A general '''iterative method''' involves a process that converts the [[system of linear equations]]

:{{NumBlk|:|&lt;math&gt; \mathbf{Ax} = \mathbf{b} &lt;/math&gt;|{{EquationRef|2}}}}

into an equivalent system of the form

:{{NumBlk|:|&lt;math&gt; \mathbf{x} = \mathbf{Tx} + \mathbf{c} &lt;/math&gt;|{{EquationRef|3}}}}

for some matrix '''T''' and vector '''c'''.  After the initial vector '''x'''&lt;sup&gt;(0)&lt;/sup&gt; is selected, the sequence of approximate solution vectors is generated by computing

:{{NumBlk|:|&lt;math&gt; \mathbf{x}^{(k + 1)} = \mathbf{Tx}^{(k)} + \mathbf{c} &lt;/math&gt;|{{EquationRef|4}}}}

for each ''k'' &amp;ge; 0.&lt;ref&gt;{{harvtxt|Burden|Faires|1993|p=406}}&lt;/ref&gt;&lt;ref&gt;{{harvtxt|Varga|1962|p=61}}&lt;/ref&gt;   For any initial vector '''x'''&lt;sup&gt;(0)&lt;/sup&gt; &amp;isin; &lt;math&gt; \mathbb{R}^n &lt;/math&gt;, the sequence &lt;math&gt; \lbrace \mathbf{x}^{ \left( k \right) } \rbrace _{k = 0}^{\infty} &lt;/math&gt; defined by ({{EquationNote|4}}), for each ''k'' &amp;ge; 0 and '''c''' &amp;ne; 0, converges to the unique solution of ({{EquationNote|3}}) if and only if ''&amp;rho;''('''T''') &lt; 1, that is, '''T''' is a convergent matrix.&lt;ref&gt;{{harvtxt|Burden|Faires|1993|p=412}}&lt;/ref&gt;&lt;ref&gt;{{harvtxt|Isaacson|Keller|1994|pp=62–63}}&lt;/ref&gt;

===Regular splitting===
{{main|Matrix splitting}}
A  '''matrix splitting''' is an expression which represents a given matrix as a sum or difference of matrices.  In the system of linear equations ({{EquationNote|2}}) above, with '''A''' non-singular, the matrix '''A''' can be split, that is, written as a difference

:{{NumBlk|:|&lt;math&gt; \mathbf{A} = \mathbf{B} - \mathbf{C} &lt;/math&gt;|{{EquationRef|5}}}}

so that ({{EquationNote|2}}) can be re-written as ({{EquationNote|4}}) above.  The expression ({{EquationNote|5}}) is a '''regular splitting of A''' if and only if '''B'''&lt;sup&gt;&amp;minus;1&lt;/sup&gt; &amp;ge; '''0''' and '''C''' &amp;ge; '''0''', that is, {{nowrap|'''B'''&lt;sup&gt;&amp;minus;1&lt;/sup&gt;}} and '''C''' have only nonnegative entries.  If the splitting ({{EquationNote|5}}) is a regular splitting of the matrix '''A''' and '''A'''&lt;sup&gt;&amp;minus;1&lt;/sup&gt; &amp;ge; '''0''', then ''&amp;rho;''('''T''') &lt; 1 and '''T''' is a convergent matrix.  Hence the method ({{EquationNote|4}}) converges.&lt;ref&gt;{{harvtxt|Varga|1960|pp=122–123}}&lt;/ref&gt;&lt;ref&gt;{{harvtxt|Varga|1962|p=89}}&lt;/ref&gt;

==Semi-convergent matrix==
We call an ''n'' &amp;times; ''n'' matrix '''T''' a '''semi-convergent matrix''' if the limit

:{{NumBlk|:|&lt;math&gt; \lim_{k \to \infty} \mathbf T^k &lt;/math&gt;|{{EquationRef|6}}}}

exists.&lt;ref&gt;{{harvtxt|Meyer &amp; Plemmons|1977|p=699}}&lt;/ref&gt;  If '''A''' is possibly singular but ({{EquationNote|2}}) is consistent, that is, '''b''' is in the range of '''A''', then the sequence defined by ({{EquationNote|4}}) converges to a solution to ({{EquationNote|2}}) for every '''x'''&lt;sup&gt;(0)&lt;/sup&gt; &amp;isin; &lt;math&gt; \mathbb{R}^n &lt;/math&gt; if and only if '''T''' is semi-convergent.  In this case, the splitting ({{EquationNote|5}}) is called a '''semi-convergent splitting''' of '''A'''.&lt;ref&gt;{{harvtxt|Meyer &amp; Plemmons|1977|p=700}}&lt;/ref&gt;

==See also==
*[[Gauss–Seidel method]]
*[[Jacobi method]]
*[[List of matrices]]
*[[Nilpotent matrix]]
*[[Successive over-relaxation]]

==Notes==
{{reflist}}

==References==
* {{ citation | first1 = Richard L. | last1 = Burden | first2 = J. Douglas | last2 = Faires | year = 1993 | isbn = 0-534-93219-3 | title = Numerical Analysis | edition = 5th | publisher = [[Prindle, Weber and Schmidt]] | location = Boston }}.
* {{ citation | first1 = Eugene | last1 = Isaacson | first2 = Herbert Bishop | last2 = Keller| year = 1994 | isbn = 0-486-68029-0 | title = Analysis of Numerical Methods | publisher = [[Dover]] | location = New York }}.
* {{ cite journal | title = Convergent Powers of a Matrix with Applications to Iterative Methods for Singular Linear Systems |date=Sep 1977 | author1 = Carl D. Meyer, Jr. | author2 = R. J. Plemmons | journal = [[SIAM Journal on Numerical Analysis]] | volume = 14 | issue = 4 | pages = 699–705 | doi=10.1137/0714047 | ref = {{harvid|Meyer &amp; Plemmons|1977}} }}
* {{ Cite book | first1 = Richard S. | last1 = Varga | chapter = Factorization and Normalized Iterative Methods | title = Boundary Problems in Differential Equations | editor1-last = Langer | editor1-first = Rudolph E. | publisher = [[University of Wisconsin Press]] | location = Madison | pages = 121&amp;ndash;142 | year = 1960 | lccn = 60-60003 | ref = {{harvid|Varga|1960}} }}
* {{ citation | first1 = Richard S. | last1 = Varga | title = Matrix Iterative Analysis | publisher = [[Prentice–Hall]] | location = New Jersey | year = 1962 | lccn = 62-21277 }}.

{{Numerical linear algebra}}

[[Category:Limits (mathematics)]]
[[Category:Matrices]]
[[Category:Numerical linear algebra]]
[[Category:Relaxation (iterative methods)]]</text>
      <sha1>f9p1d5jv9gjfs7rgbna7b84q3g1n9pm</sha1>
    </revision>
  </page>
  <page>
    <title>Correspondence problem</title>
    <ns>0</ns>
    <id>6498435</id>
    <revision>
      <id>864813765</id>
      <parentid>817613878</parentid>
      <timestamp>2018-10-19T16:55:54Z</timestamp>
      <contributor>
        <username>Jarble</username>
        <id>7226930</id>
      </contributor>
      <minor/>
      <comment>linking</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="4664">{{refimprove|date=May 2015}}
{{for|the problem in theory of computation|Post correspondence problem}}
The '''correspondence problem''' refers to the problem of ascertaining which parts of one image correspond to which parts of another image, where differences are due to movement of the camera, the elapse of time, and/or movement of objects in the photos.

==Overview==
Given two or more images of the same 3D scene, taken from different points of view, the correspondence problem refers to the task of finding a set of points in one image which can be identified as the same points in another image. To do this, points or features in one image are matched with the corresponding points or features in another image. The images can be taken from a different point of view, at different times, or with objects in the scene in general motion relative to the camera(s).

The correspondence problem can occur in a stereo situation when two images of the same scene are used, or can be generalised to the N-view correspondence problem. In the latter case, the images may come from either N different cameras photographing at the same time or from one camera which is moving relative to the scene. The problem is made more difficult when the objects in the scene are in motion relative to the camera(s).

A typical application of the correspondence problem occurs in [[panorama]] creation or [[image stitching]] — when two or more images which only have a small overlap are to be stitched into a larger composite image. In this case it is necessary to be able to identify a set of corresponding points in a pair of images in order to calculate the transformation of one image to stitch it onto the other image.

==Basic methods==
There are two basic ways to find the correspondences between two images.

Correlation-based – checking if one location in one image looks/seems like another in another image.

Feature-based – finding features in the image and seeing if the layout of a subset of features is similar in the two images. To avoid the [[aperture problem]] a good feature should have local variation in two directions.

==Use==
In computer vision the correspondence problem is studied for the case when a computer should solve it automatically with only images as input. Once the correspondence problem has been solved, resulting in a set of image points which are in correspondence, other methods can be applied to this set to [[3D reconstruction|reconstruct]] the position, motion and/or rotation of the corresponding 3D points in the scene.

The correspondence problem is also the basis of the [[particle image velocimetry]] measurement technique, which is nowadays widely used in the [[Fluid Mechanics|fluid mechanics]] field to quantitatively measure fluid motion.

==Simple example==
To find the correspondence between set A [1,2,3,4,5] and set B [3,4,5,6,7] find where they overlap and how far off one set is from the other. Here we see that the last three numbers in set A correspond with the first three numbers in set B. This shows that B is offset 2 to the left of A.

==Simple correlation-based example==
A simple method is to compare small patches between [[Image rectification|rectified]] images. This works best with images taken with roughly the same point of view and either at the same time or with little to no movement of the scene between image captures, such as stereo images.

A small window is passed over a number of positions in one image. Each position is checked to see how well it compares with the same location in the other image. Several nearby locations are compared for objects in one image which may not be at exactly the same image-location in the other image. It is possible that there is no fit that is good enough. This may mean that the feature is not present in both images, it has moved farther than your search accounted for, it has changed too much, or is being hidden by other parts of the image.

==See also==
*[[Stereoscopy]]
*[[Parallax]]
*[[Photogrammetry]]
*[[Depth perception]]
*[[Stereopsis]]
*[[Computer vision]]
*[[fundamental matrix (computer vision)|Fundamental matrix]]
*[[Joint Compatibility Branch and Bound|The Joint Compatibility Branch and Bound algorithm]]
*[[Epipolar geometry]]
*[[Image registration]]

==References==
*[http://vision.middlebury.edu/stereo/taxonomy-IJCV.pdf D. Scharstein and R. Szeliski. A Taxonomy and Evaluation of Dense Two-Frame Stereo Correspondence Algorithms.] (PDF)
{{Stereoscopy}}

==External links==
*[http://vision.middlebury.edu/stereo/ Middlebury Stereo Vision page]

[[Category:Geometry in computer vision]]
[[Category:Stereoscopy]]

[[zh:图像对应问题]]</text>
      <sha1>c8a52eck40yy3hoo6uqeqy1updrkwmz</sha1>
    </revision>
  </page>
  <page>
    <title>Cryptomorphism</title>
    <ns>0</ns>
    <id>6166234</id>
    <revision>
      <id>544482006</id>
      <parentid>544230406</parentid>
      <timestamp>2013-03-15T22:24:54Z</timestamp>
      <contributor>
        <username>Addbot</username>
        <id>6569922</id>
      </contributor>
      <minor/>
      <comment>[[User:Addbot|Bot:]] Migrating 2 interwiki links, now provided by [[Wikipedia:Wikidata|Wikidata]] on [[d:q389427]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2906">In [[mathematics]], two objects, especially systems of axioms or semantics for them, are called '''cryptomorphic''' if they are equivalent but not obviously equivalent.  This word is a play on the many [[morphism]]s in mathematics, but "cryptomorphism" is only very distantly related to "[[isomorphism]]", "[[homomorphism]]", or "morphisms". The equivalence may possibly be in some informal sense, or may be formalized in terms of a [[bijection]] or [[equivalence of categories]] between the mathematical objects defined by the two cryptomorphic axiom systems.

==Etymology==

The word was coined by [[Garrett Birkhoff]] before 1967, for use in the third edition of his book ''Lattice Theory''.  Birkhoff did not give it a formal definition, though others working in the field have made some attempts since.

==Use in matroid theory==

Its informal sense was popularized (and greatly expanded in scope) by [[Gian-Carlo Rota]] in the context of [[matroid]] theory: there are dozens of equivalent axiomatic approaches to matroids, but two different systems of axioms often look very different.  

In his 1997 book ''Indiscrete Thoughts'', Rota describes the situation as follows:

{{cquote|Like many another great idea, matroid theory was invented by one of the great American pioneers, [[Hassler Whitney]].  His paper, which is still today the best entry to the subject, flagrantly reveals the unique peculiarity of this field, namely, the exceptional variety of cryptomorphic definitions for a matroid, embarrassingly unrelated to each other and exhibiting wholly different mathematical pedigrees.  It is as if one were to condense all trends of present day mathematics onto a single finite structure, a feat that anyone would ''a priori'' deem impossible, were it not for the fact that matroids do exist.}}

Though there are many cryptomorphic concepts in mathematics outside of matroid theory and [[universal algebra]], the word has not caught on among mathematicians generally.  It is, however, in fairly wide use among researchers in matroid theory.

==See also==
*[[Combinatorial class]], an equivalence among [[combinatorial enumeration]] problems hinting at the existence of a cryptomorphism

==References==

* Birkhoff, G.:  ''Lattice Theory'',  3rd edition. American Mathematical Society Colloquium Publications, Vol. XXV. 1967.
* Crapo, H. and Rota, G-C.: ''On the foundations of combinatorial theory: Combinatorial geometries.''  M.I.T. Press, Cambridge, Mass. 1970.
* Elkins, James: Chapter ''Cryptomorphs'' in ''Why Are Our Pictures Puzzles?: On the Modern Origins of Pictorial Complexity'', 1999
* Rota, G-C.:  ''Indiscrete Thoughts'', Birkhäuser Boston, Inc., Boston, MA. 1997.
* White, N., editor:  ''Theory of Matroids'', Encyclopedia of Mathematics and its Applications, 26.  Cambridge University Press, Cambridge. 1986.

[[Category:Mathematical terminology]]
[[Category:Matroid theory]]</text>
      <sha1>pdg4fow830hzk31qcs2l8lto75i9kzr</sha1>
    </revision>
  </page>
  <page>
    <title>Cubane-type cluster</title>
    <ns>0</ns>
    <id>50740226</id>
    <revision>
      <id>852279213</id>
      <parentid>852278944</parentid>
      <timestamp>2018-07-27T20:16:59Z</timestamp>
      <contributor>
        <username>DMacks</username>
        <id>712163</id>
      </contributor>
      <comment>/* Examples */ focus on focus on article at hand</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="4469">[[File:Cubane-3D-balls.png|thumb|right|The structure of [[cubane]], the [[parent compound]] of this class]]

A '''cubane-type cluster''' is an arrangement of atoms in a molecular structure that forms a [[cube]]. In the idealized case, the eight vertices are symmetry equivalent and the species has O&lt;sub&gt;h&lt;/sub&gt; [[symmetry group|symmetry]].  Such a structure is illustrated by the [[hydrocarbon]] [[cubane]].  With [[chemical formula]] C&lt;sub&gt;8&lt;/sub&gt;H&lt;sub&gt;8&lt;/sub&gt;, cubane has carbon atoms at the corners of a cube and [[covalent bond]]s forming the edges.  Most cubanes have more complicated structures, usually with nonequivalent vertices. They may be simple covalent compounds or macromolecular or supramolecular [[cluster compound]]s. 

==Examples==
[[Image:FdRedox.png|right|400px|4Fe-4S-cubanes are found in all forms of life.]]

Other compounds having different elements in the corners, various atoms or groups bonded to the corners are all part of this class of structures. 

Cubane clusters are common throughout bioinorganic chemistry.  [[Ferredoxin]]s containing [Fe&lt;sub&gt;4&lt;/sub&gt;S&lt;sub&gt;4&lt;/sub&gt;] [[iron–sulfur cluster]]s are pervasive in nature.&lt;ref&gt;{{cite journal|last1=Perrin, Jr. |first1=B.S.|last2=Ichive|first2=T.|title=Identifying sequence determinants of reduction potentials of metalloproteins|journal=Biological Inorganic Chemistry|date=2013|volume=18|issue=6|pages=599–608|doi=10.1007/s00775-013-1004-6|pmc=3723707}}&lt;/ref&gt; The four iron atoms and four sulfur atoms form an alternating arrangement at the corners. The whole cluster is typically anchored by coordination of the iron atoms, usually with [[cysteine]] residues. In this way, each Fe center achieves [[tetrahedral coordination geometry]].  Some [Fe&lt;sub&gt;4&lt;/sub&gt;S&lt;sub&gt;4&lt;/sub&gt;] clusters arise via dimerization of square-shaped [Fe&lt;sub&gt;2&lt;/sub&gt;S&lt;sub&gt;2&lt;/sub&gt;] precursors.  Many synthetic analogues are known including heterometallic derivatives.&lt;ref&gt;Lee, S. C.; Lo, W.; Holm, R. H., "Developments in the Biomimetic Chemistry of Cubane-Type and Higher Nuclearity Iron-Sulfur Clusters", Chem. Rev. 2014, {{DOI|10.1021/cr4004067}}&lt;/ref&gt;

[[File:Oxygen Evolving Complex Crystal structure to 1.9 Angstrom Resolution.png|thumb|A CaMn&lt;sub&gt;3&lt;/sub&gt;O&lt;sub&gt;4&lt;/sub&gt; cubane-type cluster is part of the core of the oxygen evolving complex of Photosystem II.&lt;ref&gt;{{Cite journal|last = Umena|first = Yasufumi|last2 = Kawakami|first2 = Keisuke|last3 = Shen|first3 = Jian-Ren|last4 = Kamiya|first4 = Nobuo|title = Crystal structure of oxygen-evolving photosystem II at a resolution of 1.9 Å|url = http://www.nature.com/doifinder/10.1038/nature09913|journal = Nature|volume = 473|issue = 7345|pages = 55–60|doi = 10.1038/nature09913|bibcode = 2011Natur.473...55U}}&lt;/ref&gt; ]]
[[File:Tellurium-tetrachloride-tetramer-from-xtal-2000-3D-balls.png|144px|thumb|Structure of [[tellurium tetrachloride]], a cubane-type cluster with twelve terminal ligands.]]
Several [[alkyllithium]] compounds exist as clusters in solution, typically [[tetramer]]s, with the formula [RLi]&lt;sub&gt;4&lt;/sub&gt;.  The individual RLi molecules are not observed. The four lithium atoms and the carbon from each alkyl group bonded to them occupy alternating vertices of the cube, with the additional atoms of the alkyl groups projecting off their respective corners.&lt;ref name =leadstructure&gt;
{{cite book
 | last1 = Stey | first1 = Thomas 
 | last2 = Stalke | first2 = Dietmar 
 | chapter = Lead structures in lithium organic chemistry
 | title = PATAI'S Chemistry of Functional Groups
 | publisher = John Wiley &amp; Sons, Ltd 
 | year = 2009
 | isbn = 9780470682531 
 | doi = 10.1002/9780470682531.pat0298 }}&lt;/ref&gt;

[[Octaazacubane]] is a hypothetical [[allotrope]] of [[nitrogen]] with formula N&lt;sub&gt;8&lt;/sub&gt;; the nitrogen atoms are the corners of the cube. Like the carbon-based cubane compounds, octaazacubane is predicted to be highly unstable due to [[angle strain]] at the corners, and it also does not enjoy the [[kinetic stability]] seen for its organic analogues.&lt;ref name=agrawal&gt;{{cite book|last=Agrawal|first=Jai Prakash|title=High Energy Materials: Propellants, Explosives and Pyrotechnics|year=2010|publisher=Wiley-VCH|isbn=978-3-527-62880-3|pages=498|url=https://books.google.com/books?id=rqZROysoS7QC&amp;pg=PA147&amp;lpg=PA147&amp;dq=octaazacubane&amp;source=bl&amp;ots=Ou5l7PbMJm&amp;sig=cHhuquQ5LbBh-KCJfK-k43YRYCA&amp;hl=en&amp;ei=DQiZTtPeCabg0QG50ozFBA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=3&amp;ve}}&lt;/ref&gt;

== References ==
{{reflist}}

[[Category:Molecular geometry]]</text>
      <sha1>gxatirsnd2soa3bj8yuvd53zkgjw8p0</sha1>
    </revision>
  </page>
  <page>
    <title>Descriptional Complexity of Formal Systems</title>
    <ns>0</ns>
    <id>15718146</id>
    <revision>
      <id>815128908</id>
      <parentid>772273236</parentid>
      <timestamp>2017-12-12T22:48:43Z</timestamp>
      <contributor>
        <username>KolbertBot</username>
        <id>31691822</id>
      </contributor>
      <minor/>
      <comment>Bot: [[User:KolbertBot|HTTP→HTTPS]] (v478)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="9300">{{Infobox Academic Conference
 | history = 1999–
 | discipline = [[Automata theory]] and [[formal language]]s
 | abbreviation = DCFS
 | publisher = [[Lecture Notes in Computer Science]]
 | country= International
 | frequency = annual
}}
'''DCFS''', the '''International Workshop on Descriptional Complexity of Formal Systems''' is an annual [[academic conference]] in the 
field of [[computer science]].

Beginning with the 2011 edition, the proceedings of the workshop appear in the series [[Lecture Notes in Computer Science]]. Already since the very beginning, extended versions of selected papers are published as special issues of the [[International Journal of Foundations of Computer Science]], the [[Journal of Automata, Languages and Combinatorics]], of [[Theoretical Computer Science (journal)|Theoretical Computer Science]], and of [[Information and Computation]] In 2002 DCFS was the result of the merger of the workshops DCAGRS (Descriptional Complexity of Automata, Grammars and Related Structures) and FDSR (Formal Descriptions and Software Reliability). The workshop is often collocated with international conferences in related fields, such as [[International Colloquium on Automata, Languages and Programming|ICALP]], [[International Conference on Developments in Language Theory|DLT]] and [[Conference on Implementation and Application of Automata|CIAA]].

== Topics of the workshop ==
Typical topics include:
* various measures of [[descriptional complexity]] of automata, grammars, languages and of related systems
* trade-offs between descriptional complexity and mode of operation
* [[circuit complexity]] of Boolean functions and related measures
* succinctness of description of (finite) objects
* [[state complexity|state complexity of finite automata]]
* descriptional complexity in resource-bounded or structure-bounded environments
* [[structural complexity]]
* descriptional complexity of formal systems for applications (e.g. software reliability, software and hardware testing, modelling of natural languages)
* descriptional complexity aspects of nature-motivated (bio-inspired) architectures and unconventional models of computing
* [[Kolmogorov–Chaitin complexity]] and descriptional complexity
As such, the topics of the conference overlap with those of the [[International Federation for Information Processing]] Working Group 1.2 on [[descriptional complexity]].

== Significance ==
In a survey on descriptional complexity, {{harvtxt|Holzer|Kutrib|2010}} state that "since more than a decade the Workshop on 'Descriptional Complexity of Formal Systems' (DCFS), [...] has contributed substantially to the development of [its] field of research." In a talk on the occasion of the 10th anniversary of the workshop, {{harvtxt|Dassow|2009}} gave an overview about trends and directions in research papers presented at DCFS.

== History of the workshop ==

Since 2006, the Chair of the Steering Committee of the DCFS workshop series is [[Giovanni Pighizzini]].

Basic information on each DCFS event, as well as on its precursors, DCAGRS and FSDR, is included in the following table.

{| class="wikitable"
|-
! Event
! Location
! PC chairs
! Proceedings
! Special issue
|-
| [http://fuzzy.cs.uni-magdeburg.de/dcagrs/ 1st DCAGRS 1999]
| Magdeburg, Germany
| Jürgen Dassow &lt;br&gt; Detlef Wotschke
|
| Journal of Automata, Languages and Combinatorics 5(3), 2000
|-
| 2nd DCAGRS 2000
| London, Ontario, Canada
| Helmut Jürgensen
|
| Journal of Automata, Languages and Combinatorics 6(4), 2001
|-
| 3rd DCAGRS 2001
| Vienna, Austria
| Jürgen Dassow &lt;br&gt; Detlef Wotschke
|
| Journal of Automata, Languages and Combinatorics 7(4), 2002
|-
| 1st FSDR 1998
| Paderborn, Germany
|
|
|
|-
| 2nd FSDR 1999
| Boca Raton, Florida, USA
|
|
|
|-
| 3rd FSDR 2000
| San Jose, California, USA
|
|
|
|-
| [http://theo.cs.uni-magdeburg.de/dcfs02/ 4th DCFS 2002]
| London, Ontario, Canada
| Jürgen Dassow &lt;br&gt; Helmut Jürgensen &lt;br&gt; Detlef Wotschke
|
| Journal of Automata, Languages and Combinatorics 9(2/3), 2004
|-
| [http://www.sztaki.hu/tcs/dcfsarchiv/ 5th DCFS 2003]
| Budapest, Hungary
| Erzsébet Csuhaj-Varjú &lt;br&gt; [[Chandra Kintala]] &lt;br&gt; Detlef Wotschke
|
| Theoretical Computer Science 330(2), 2005
|-
| [http://www.csd.uwo.ca/dcfs04/ 6th DCFS 2004]
| London, Ontario, Canada
| Lucian Ilie &lt;br&gt; Detlef Wotschke
|
| International Journal of Foundations of Computer Science 16(5), 2005
|-
| [http://dcfs05.dico.unimi.it/ 7th DCFS 2005]
| Como, Italy
| [[Giovanni Pighizzini]] &lt;br&gt; Detlef Wotschke
|
| Journal of Automata, Languages and Combinatorics 12(1/2), 2007
|-
| [http://www.cs.nmsu.edu/dcfs06/ 8th DCFS 2006]
| Las Cruces, New Mexico, USA
| Hing Leung &lt;br&gt; [[Giovanni Pighizzini]]
|
| Theoretical Computer Science 387(2), 2007
|-
| [http://dcfs07.ics.upjs.sk/ 9th DCFS 2007]
| High Tatras, Slovakia
| Viliam Geffert &lt;br&gt; [[Giovanni Pighizzini]]
|
| International Journal of Foundations of Computer Science 19(4), 2008
|-
| [http://www.csit.upei.ca/dcfs2008/ 10th DCFS 2008]
| Charlottetown, Canada
| Cezar Câmpeanu &lt;br&gt; [[Giovanni Pighizzini]]
|
| Theoretical Computer Science 410(35), 2009.
|-
| [http://theo.cs.uni-magdeburg.de/dcfs2009/ 11th DCFS 2009]
| Magdeburg, Germany
| Jürgen Dassow &lt;br&gt; [[Giovanni Pighizzini]]
| [https://dx.doi.org/10.4204/EPTCS EPTCS 3]
| Journal of Automata, Languages and Combinatorics, 15(1-2), 2010
|-
| [http://www.cs.usask.ca/dcfs2010/ 12th DCFS 2010]
| Saskatoon, Saskatchewan, Canada
| Ian McQuillan &lt;br&gt; [[Giovanni Pighizzini]]
| [https://dx.doi.org/10.4204/EPTCS.31 EPTCS 31]
| International Journal of Foundations of Computer Science, 23(1), 2012
|-
| [http://www.informatik.uni-giessen.de/dcfs2011/ 13th DCFS 2011]
| Giessen, Germany
| Markus Holzer &lt;br&gt; Martin Kutrib &lt;br&gt; [[Giovanni Pighizzini]]
| LNCS 6808
| Theoretical Computer Science, 449, 2012
|-
| [http://www.dcc.fc.up.pt/DCFS12/ 14th DCFS 2012]
| Braga, Portugal
| Martin Kutrib &lt;br&gt; Nelma Moreira &lt;br&gt; Rogério Reis
| LNCS 7386
| Journal of Automata, Languages and Combinatorics, 17(2-4), 2012
|-
| [http://www.csd.uwo.ca/dcfs2013/ 15th DCFS 2013]
| London, Ontario, Canada
| Helmut Jürgensen &lt;br&gt; Rogério Reis
| LNCS 8031
| International Journal of Foundations of Computer Science, 25(7), 2014
|-
| [http://www.math.utu.fi/projects/dcfs2014/ 16th DCFS 2014]
| Turku, Finland
| Helmut Jürgensen &lt;br&gt; [[Juhani Karhumäki]] &lt;br&gt; [[Alexander Okhotin]]
| LNCS 8614
| Theoretical Computer Science, 610, 2016
|-
| [https://cs.uwaterloo.ca/~shallit/DC2015/ 17th DCFS 2015]
| Waterloo, Ontario, Canada.
| [[Alexander Okhotin]] &lt;br&gt; [[Jeffrey Shallit|Jeffrey O. Shallit]]
| LNCS 9118
| Information and Computation, to appear
|-
| [http://www.csit.upei.ca/dcfs2016/ 18th DCFS 2016]
| Bucharest, Romania
| Cezar Câmpeanu &lt;br&gt; [[Jeffrey Shallit|Jeffrey O. Shallit]]
| LNCS 9777
| Journal of Automata, Languages and Combinatorics, to appear
|-
| [http://dcfs2017.di.unimi.it/ 19th DCFS 2017]
| Milan, Italy
| Cezar Câmpeanu &lt;br&gt; [[Giovanni Pighizzini]]
|
|
|}

== See also ==
* The [[list of computer science conferences]] contains other academic conferences in computer science.

== References ==
* Bianca Truthe: "Report on DCFS 2008." ''[[EATCS|Bulletin of the EATCS]]'' '''96''':160-161, October 2008. [http://www.eatcs.org/images/bulletin/beatcs96Web.pdf Online edition] accessed Feb 9, 2009.
* Jürgen Dassow: [http://theo.cs.uni-magdeburg.de/dcfs2009/text/TenYearsDCFS.pdf "10 Years DCFS."] Talk held at the 11th DCFS in Magdeburg, Germany, July 6–9, 2009.
* Ian McQuillan: "Report on DCFS 2009." ''[[EATCS|Bulletin of the EATCS]]'' '''99''':185-187, October 2009. [http://www.eatcs.org/images/bulletin/beatcs99.pdf Online edition] accessed Nov 24, 2009.
* Electronic Proceedings in Theoretical Computer Science, [http://www.eptcs.org official website].
* {{Citation
 | last = Holzer
 | first = Markus
 | last2 = Kutrib
 | first2 = Martin
 | year = 2010
 | contribution = Descriptional Complexity — An Introductory Survey
 | contribution-url = http://www.worldscibooks.com/etextbook/p707/p707_chap01.pdf
 | editor-last = Martín-Vide
 | editor-first = Carlos
 | title = Scientific Applications of Language Methods
 | series = Mathematics, Computing, Language, and Life: Frontiers in Mathematical Linguistics and Language Theory
 | publisher = Imperial College Press
 | volume = 2
 | pages = 1–58
 | isbn = 978-1-84816-544-1
 | url = http://www.worldscibooks.com/compsci/p707.html
 | accessdate = March 16, 2011
}}

* {{Citation
  | first1 = Ian
  | last1 = McQuillan 
  | first2 = Giovanni
  | last2 = Pighizzini
  | editor-last = McQuillan
  | editor-first = Ian
  | editor2-last = Pighizzini
  | editor2-first = Giovanni
  | title = Preface
  | series = Electronic Proceedings in Theoretical Computer Science
  | year = 2010
  | arxiv = 1008.1270
  | doi = 10.4204/EPTCS.31
  | journal = Electronic Proceedings in Theoretical Computer Science
  | volume = 31
}}
* Andreas Malcher: "Report on DCFS 2012." ''[[EATCS|Bulletin of the EATCS]]'' '''108''':168-169, October 2012. [http://www.eatcs.org/images/bulletin/beatcs108.pdf Online edition].

== External links ==
* [http://www.informatik.uni-giessen.de/dcfs/ Descriptional Complexity of Formal Systems: official website]

[[Category:Theoretical computer science conferences]]
[[Category:Formal languages]]</text>
      <sha1>134b5u9z4mue45d43j9kak5hfzmi4i8</sha1>
    </revision>
  </page>
  <page>
    <title>Enigma machine</title>
    <ns>0</ns>
    <id>9256</id>
    <revision>
      <id>870893966</id>
      <parentid>870341100</parentid>
      <timestamp>2018-11-27T17:18:38Z</timestamp>
      <contributor>
        <username>Aldaron</username>
        <id>662485</id>
      </contributor>
      <comment>/* Operation */ Add example encoding process</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="84171">{{Use dmy dates|date=July 2012}}
[[File:Enigma (crittografia) - Museo scienza e tecnologia Milano.jpg|thumb|Military Enigma machine, model "Enigma I", used during the late 1930s and during the war; displayed at [[Museo della Scienza e della Tecnologia "Leonardo da Vinci"|Museo scienza e tecnologia Milano]], Italy]]
[[File:EnigmaMachineLabeled.jpg|thumb|Military Enigma machine (in wooden box)]]
{{EnigmaSeries}}

The '''Enigma machines''' are a series of [[Electromechanics|electro-mechanical]] [[rotor machine|rotor cipher machines]] mainly developed and used in the early- to mid-20th century to protect commercial, diplomatic and military communication. Enigma was invented by the [[Germans|German]] engineer [[Arthur Scherbius]] at the end of [[World War I]].&lt;ref name="Singh2011"&gt;{{cite book|first=Simon |last=Singh|title=The Code Book: The Science of Secrecy from Ancient Egypt to Quantum Cryptography|url={{google books |plainurl=y |id=fbp9V9dkaNkC}}|date=26 January 2011|publisher=Knopf Doubleday Publishing Group|isbn=978-0-307-78784-2}}&lt;/ref&gt; Early models were used commercially from the early 1920s, and adopted by military and government services of several countries, most notably [[Nazi Germany]] before and during [[World War II]].&lt;ref&gt;{{cite web|last=Lord|first= Bob|title=1937 Enigma Manual by: Jasper Rosal – English Translation|year=1998–2010|url=http://www.ilord.com/enigma-manual1937-english.html|accessdate=31 May 2011|ref=harv}}&lt;/ref&gt; Several different Enigma models were produced, but the [[Wehrmacht|German military]] models, having a plugboard, were the most complex. Japanese and Italian models were also in use.

Around December 1932, [[Marian Rejewski]], a Polish mathematician and [[cryptanalysis|cryptanalyst]], while working at the [[Polish Cipher Bureau]], used the theory of permutations and flaws in the German military message encipherment procedures to break the message keys of the plugboard Enigma machine. Rejewski achieved this result without knowledge of the wiring of the machine, so the result did not allow the Poles to decrypt actual messages. The French spy [[Hans-Thilo Schmidt]] obtained access to German cipher materials that included the daily keys used in September and October 1932. Those keys included the plugboard settings. The French passed the material to the Poles, and Rejewski used some of that material and the message traffic in September and October to solve for the unknown rotor wiring. Consequently, the Polish mathematicians were able to build their own Enigma machines, which were called [[Polish Enigma doubles|Enigma doubles]]. Rejewski was aided by [[cryptanalyst]]s [[Jerzy Różycki]] and [[Henryk Zygalski]], both of whom had been recruited with Rejewski from [[Adam Mickiewicz University in Poznań|Poznań University]]. The Polish Cipher Bureau developed techniques to defeat the plugboard and find all components of the daily key, which enabled the Cipher Bureau to read the German Enigma messages. Over time, the German cryptographic procedures improved, and the Cipher Bureau developed techniques and designed mechanical devices to continue reading the Enigma traffic. As part of that effort, the Poles exploited quirks of the rotors, compiled catalogues, built a [[cyclometer]] to help make a catalogue with 100,000 entries, made [[Zygalski sheets]] and built the electro-mechanical [[Bomba (cryptography)|cryptologic bomb]] to search for rotor settings. In 1938, the Germans added complexity to the Enigma machines that finally became too expensive for the Poles to counter. The Poles had six ''[[Bomba (cryptography)|bomby]]'', but when the Germans added two more rotors, ten times as many ''bomby'' were needed, and the Poles did not have the resources.{{sfn|Kozaczuk|1984|p=63}}

On 26 and 27 July 1939,&lt;ref&gt;Ralph Erskine: ''The Poles Reveal their Secrets&amp;nbsp;– Alastair Dennistons's Account of the July 1939 Meeting at Pyry''. Cryptologia. Rose-Hulman Institute of Technology. Taylor &amp; Francis, Philadelphia PA 30.2006,4, p.&amp;nbsp;294.&lt;/ref&gt; in [[Pyry (neighborhood)|Pyry]] near [[Warsaw]], the Poles initiated French and British [[military intelligence]] representatives into their [[Cryptanalysis of the Enigma|Enigma-decryption techniques]] and equipment, including Zygalski sheets and the cryptologic bomb, and promised each delegation a Polish-reconstructed Enigma. The demonstration represented a vital basis for the later British continuation and effort.&lt;ref&gt;[[Gordon Welchman]], who became head of [[Hut 6]] at Bletchley Park, has written: "Hut 6 [[Ultra]] would never have gotten off the ground if we had not learned from the Poles, in the nick of time, the details both of the German military version of the commercial Enigma machine, and of the operating procedures that were in use." [[Gordon Welchman]], ''The Hut Six Story'', 1982, p. 289.&lt;/ref&gt; During the war, British cryptologists decrypted a vast number of messages enciphered on Enigma. The intelligence gleaned from this source, codenamed "[[Ultra]]" by the British, was a substantial aid to the [[Allies of World War II|Allied]] war effort.&lt;ref&gt;Much of the German cipher traffic was encrypted on the Enigma machine, and the term "Ultra" has often been used almost synonymously with "[[Cryptanalysis of the Enigma|Enigma decrypts]]". Ultra also encompassed decrypts of the German [[Lorenz cipher|Lorenz SZ 40 and 42 machines]] that were used by the German High Command, and decrypts of [[C-36 (cipher machine)|Hagelin ciphers]] and other Italian ciphers and codes, as well as of Japanese ciphers and codes such as [[Purple (cipher machine)|Purple]] and [[JN-25]].&lt;/ref&gt;

Though Enigma had some cryptographic weaknesses, in practice it was German procedural flaws, operator mistakes, failure to systematically introduce changes in encipherment procedures, and Allied capture of key tables and hardware that, during the war, enabled Allied cryptologists to succeed and "turned the tide" in the Allies' favour.{{sfn|Kahn|1991}}{{sfn|Stripp|1993}}
{{toclimit|3}}

==Name==
The German firm Scherbius &amp; Ritter, co-founded by Arthur Scherbius, patented ideas for a cipher machine in 1918 and began marketing the finished product under the brand name ''Enigma'' in 1923, initially targeted at commercial markets.&lt;ref&gt;{{cite web | url=http://www.cryptomuseum.com/crypto/enigma/hist.htm | title=History of the Enigma | publisher=Crypto Museum | accessdate=1 Dec 2017}}&lt;/ref&gt; With its adoption (in slightly modified form) by the German Navy in 1926 and the German Army and Air Force soon after, the name ''Enigma'' became widely known in military circles.

The word ''[[:wikt:enigma|enigma]]'' is a Latin word, derived from the Ancient Greek word enigma (αίνιγμα) used in English, but not native German.

== Design ==
[[File:Bundesarchiv Bild 183-2007-0705-502, Chiffriermaschine "Enigma".jpg|thumb|upright|Enigma in use, 1943]]

Like other rotor machines, the Enigma machine is a combination of mechanical and electrical subsystems. The mechanical subsystem consists of a [[alphanumeric keyboard|keyboard]]; a set of rotating disks called ''rotors'' arranged adjacently along a [[axle|spindle]]; one of various stepping components to turn at least one rotor with each key press, and a series of lamps, one for each letter.

=== Electrical pathway ===
[[File:Enigma wiring kleur.svg|thumb|left|upright=1.3|Enigma wiring diagram with arrows and the numbers 1 to 9 showing how current flows from key depression to a lamp being lit. The ''A'' key is encoded to the ''D'' lamp. D yields A, but A never yields A; this property was due to a patented feature unique to the Enigmas, and could be exploited by cryptanalysts in some situations.]]

The mechanical parts act in such a way as to form a varying [[electrical network|electrical circuit]]. When a key is pressed, one or more rotors rotate on the spindle. On the sides of the rotors are a series of electrical contacts that, after rotation, line up with contacts on the other rotors or fixed wiring on either end of the spindle. When the rotors are properly aligned, each key on the keyboard is connected to a unique electrical pathway through the series of contacts and internal wiring. Current, typically from a battery, flows through the pressed key, into the newly configured set of circuits and back out again, ultimately lighting one display [[lamp (electrical component)|lamp]], which shows the output letter. For example, when encrypting a message starting ''ANX...'', the operator would first press the ''A'' key, and the ''Z'' lamp might light, so ''Z'' would be the first letter of the [[ciphertext]]. The operator would next press ''N'', and then ''X'' in the same fashion, and so on.

[[File:Enigma-action.svg|thumb|upright|The scrambling action of Enigma's rotors is shown for two consecutive letters with the right-hand rotor moving one position between them.]]

Current flowed from the battery (1) through a depressed bi-directional keyboard switch (2) to the plugboard (3). Next, it passed through the (unused in this instance, so shown closed) plug "A" (3) via the entry wheel (4), through the wiring of the three (Wehrmacht Enigma) or four (''[[Kriegsmarine]]'' M4 and ''Abwehr'' variants) installed rotors (5), and entered the reflector (6). The reflector returned the current, via an entirely different path, back through the rotors (5) and entry wheel (4), proceeding through plug "S" (7) connected with a cable (8) to plug "D", and another bi-directional switch (9) to light the appropriate lamp.&lt;ref name="Rijmenants"&gt;Rijmenants, Dirk; [http://users.telenet.be/d.rijmenants/en/enigmatech.htm Technical details of the Enigma machine] Cipher Machines &amp; Cryptology&lt;/ref&gt;

The repeated changes of electrical path through an Enigma scrambler implemented a [[polyalphabetic cipher|polyalphabetic substitution cipher]] that provided Enigma's security. The diagram on the right shows how the electrical pathway changed with each key depression, which caused rotation of at least the right-hand rotor. Current passed into the set of rotors, into and back out of the reflector, and out through the rotors again. The greyed-out lines are other possible paths within each rotor; these are hard-wired from one side of each rotor to the other. The letter ''A'' encrypts differently with consecutive key presses, first to ''G'', and then to ''C''. This is because the right-hand rotor has stepped, sending the signal on a completely different route. Eventually other rotors step with a key press.

=== Rotors ===
[[File:Enigma rotors with alphabet rings.jpg|thumb|Enigma rotor assembly. In the Wehrmacht Enigma, the three installed movable rotors are sandwiched between two fixed wheels: the entry wheel, on the right, and the reflector on the left.]]
{{Main|Enigma rotor details}}

The rotors (alternatively ''wheels'' or ''drums'', ''Walzen'' in German) formed the heart of an Enigma machine. Each rotor was a disc approximately {{convert|10|cm|in|abbr=on}} in diameter made from hard [[rubber]] or [[bakelite]] with 26 [[brass]], spring-loaded, [[electrical contact]] pins arranged in a circle on one face; the other side housing the corresponding number of circular plate [[electrical contacts]]. The pins and contacts represent the [[alphabet]]—typically the 26 letters A–Z (this will be assumed for the rest of this description). When the rotors were mounted side-by-side on the spindle, the pins of one rotor rested against the plate contacts of the neighbouring rotor, forming an electrical connection. Inside the body of the rotor, 26 wires connected each pin on one side to a contact on the other in a complex pattern. Most of the rotors were identified by Roman numerals, and each issued copy of rotor I was wired identically to all others. The same was true for the special thin beta and gamma rotors used in the M4 naval variant.

[[File:enigma-rotors.jpg|thumb|left|Three Enigma rotors and the shaft, on which they are placed when in use.]]

By itself, a rotor performs only a very simple type of [[encryption]]—a simple [[substitution cipher]]. For example, the pin corresponding to the letter ''E'' might be wired to the contact for letter ''T'' on the opposite face, and so on. Enigma's security came from using several rotors in series (usually three or four) and the regular stepping movement of the rotors, thus implementing a polyalphabetic substitution cipher.

When placed in an Enigma, each rotor can be set to one of 26 possible positions. When inserted, it can be turned by hand using the grooved finger-wheel, which protrudes from the internal Enigma cover when closed. So that the operator can know the rotor's position, each had an ''alphabet tyre'' (or letter ring) attached to the outside of the rotor disc, with 26 characters (typically letters); one of these could be seen through the window, thus indicating the rotational position of the rotor. In early models, the alphabet ring was fixed to the rotor disc. A later improvement was the ability to adjust the alphabet ring relative to the rotor disc. The position of the ring was known as the ''Ringstellung'' ("ring setting"), and was a part of the initial setting prior to an operating session. In modern terms it was a part of the [[initialization vector]].

[[File:Enigma rotors and spindle showing contacts rachet and notch.jpg|thumb|left|Two Enigma rotors showing electrical contacts, stepping ratchet (on the left) and notch (on the right-hand rotor opposite '''D''').]]
Each rotor contained a notch (or more than one) that controlled rotor stepping. In the military variants, the notches are located on the alphabet ring.

The Army and Air Force Enigmas were used with several rotors, initially three. On 15 December 1938, this changed to five, from which three were chosen for a given session. Rotors were marked with [[Roman numerals]] to distinguish them: I, II, III, IV and V, all with single notches located at different points on the alphabet ring. This variation was probably intended as a security measure, but ultimately allowed the Polish [[Clock (cryptography)|Clock Method]] and British [[Banburismus]] attacks.

The Naval version of the ''[[Wehrmacht]]'' Enigma had always been issued with more rotors than the other services: at first six, then seven, and finally eight. The additional rotors were marked VI, VII and VIII, all with different wiring, and had two notches, resulting in more frequent turnover. The four-rotor Naval Enigma (M4) machine accommodated an extra rotor in the same space as the three-rotor version. This was accomplished by replacing the original reflector with a thinner one and by adding a thin fourth rotor. That fourth rotor was one of two types, ''Beta'' or ''Gamma'', and never stepped, but could be manually set to any of 26 positions. One of the 26 made the machine perform identically to the three-rotor machine.

=== Stepping ===
To avoid merely implementing a simple (and easily solvable) substitution cipher, every key press caused one or more rotors to step by one twenty-sixth of a full rotation, before the electrical connections were made. This changed the substitution alphabet used for encryption, ensuring that the cryptographic substitution was different at each new rotor position, producing a more formidable polyalphabetic substitution cipher. The stepping mechanism varied slightly from model to model. The right-hand rotor stepped once with each keystroke, and other rotors stepped less frequently.

=== Turnover ===
[[File:Enigma ratchet.png|thumb|The Enigma stepping motion seen from the side away from the operator. All three ratchet pawls (green) push in unison as a key is depressed. For the first rotor (1), which to the operator is the right-hand rotor, the ratchet (red) is always engaged, and steps with each keypress. Here, the middle rotor (2) is engaged because the notch in the first rotor is aligned with the pawl; it will step (''turn over'') with the first rotor. The third rotor (3) is not engaged, because the notch in the second rotor is not aligned to the pawl, so it will not engage with the rachet.]]

The advancement of a rotor other than the left-hand one was called a ''turnover'' by the British. This was achieved by a [[ratchet and pawl]] mechanism. Each rotor had a ratchet with 26 teeth and every time a key was pressed, the set of spring-loaded pawls moved forward in unison, trying to engage with a ratchet. The alphabet ring of the rotor to the right normally prevented this. As this ring rotated with its rotor, a notch machined into it would eventually align itself with the pawl, allowing it to engage with the ratchet, and advance the rotor on its left. The right-hand pawl, having no rotor and ring to its right, stepped its rotor with every key depression.&lt;ref name="doublestepping" /&gt; For a single-notch rotor in the right-hand position, the middle rotor stepped once for every 26 steps of the right-hand rotor. Similarly for rotors two and three. For a two-notch rotor, the rotor to its left would turn over twice for each rotation.

The first five rotors to be introduced (I–V) contained one notch each, while the additional naval rotors VI, VII and VIII each had two notches. The position of the notch on each rotor was determined by the letter ring which could be adjusted in relation to the core containing the interconnections. The points on the rings at which they caused the next wheel to move were as follows.&lt;ref&gt;{{cite web| last=Sale|first=Tony|authorlink=Anthony Sale|title=Technical specifications of the Enigma rotors| work=Technical Specification of the Enigma|url=http://www.codesandciphers.org.uk/enigma/rotorspec.htm|accessdate=15 November 2009}}&lt;/ref&gt;

{|class="wikitable" style="margin: 1em auto 1em auto"
|+Position of turnover notches
|-
! style="width:130pt;"| Rotor
! style="width:130pt;"| Turnover position(s)
! style="width:130pt;"| BP mnemonic
|- style="text-align:center;"
||I|| style="text-align:center;"|R|| style="text-align:center;"|Royal
|- style="text-align:center;"
||II|| style="text-align:center;"|F|| style="text-align:center;"|Flags
|- style="text-align:center;"
||III|| style="text-align:center;"|W|| style="text-align:center;"|Wave
|- style="text-align:center;"
||IV|| style="text-align:center;"|K|| style="text-align:center;"|Kings
|- style="text-align:center;"
||V|| style="text-align:center;"|A|| style="text-align:center;"|Above
|-
| style="text-align:center;"|VI, VII and VIII|| style="text-align:center;"|A and N|||
|}

The design also included a feature known as ''double-stepping''. This occurred when each pawl aligned with both the ratchet of its rotor and the rotating notched ring of the neighbouring rotor. If a pawl engaged with a ratchet through alignment with a notch, as it moved forward it pushed against both the ratchet and the notch, advancing both rotors. In a three-rotor machine, double-stepping affected rotor two only. If in moving forward the ratchet of rotor three was engaged, rotor two would move again on the subsequent keystroke, resulting in two consecutive steps. Rotor two also pushes rotor one forward after 26 steps, but since rotor one moves forward with every keystroke anyway, there is no double-stepping.&lt;ref name="doublestepping"&gt;{{cite journal |first=David |last=Hamer |title=Enigma: Actions Involved in the 'Double-Stepping' of the Middle Rotor |journal=Cryptologia |volume=21 |issue=1 |date=January 1997 |pages=47–50 |url=http://www.eclipse.net/~dhamer/downloads/rotorpdf.zip |archivedate=19 July 2011 |archiveurl=https://web.archive.org/web/20110719081659/http://www.eclipse.net/~dhamer/downloads/rotorpdf.zip |format=zip |doi=10.1080/0161-119791885779}}&lt;/ref&gt; This double-stepping caused the rotors to deviate from [[odometer]]-style regular motion.

&lt;!--{|
|-
|ADM
|-
|ADN
|-
|ADO
|-
|ADP
|-
|ADQ
|-
|AER
|-
|AFS
|-
|AFT
|-
|AFU
|}--&gt;
With three wheels and only single notches in the first and second wheels, the machine had a period of 26 × 25 × 26 = 16,900 (not 26 × 26 × 26, because of double-stepping).&lt;ref name="doublestepping" /&gt; Historically, messages were limited to a few hundred letters, and so there was no chance of repeating any combined rotor position during a single session, denying cryptanalysts valuable clues.

To make room for the Naval fourth rotors, the reflector was made much thinner. The fourth rotor fitted into the space made available. No other changes were made, which eased the changeover. Since there were only three pawls, the fourth rotor never stepped, but could be manually set into one of 26 possible positions.

A device that was designed, but not implemented before the war's end, was the ''Lückenfüllerwalze'' (gap-fill wheel) that implemented irregular stepping. It allowed field configuration of notches in all 26 positions. If the number of notches was a [[Coprime integers|relative prime]] of 26 and the number of notches were different for each wheel, the stepping would be more unpredictable. Like the Umkehrwalze-D it also allowed the internal wiring to be reconfigured.&lt;ref&gt;{{cite web|url=http://www.cryptomuseum.com/crypto/enigma/lf/index.htm |title=Lückenfüllerwalze |publisher=Cryptomuseum.com |date= |accessdate=17 July 2012}}&lt;/ref&gt;{{Clear}}

=== Entry wheel ===
The current entry wheel (''Eintrittswalze'' in German), or entry [[stator]], connects the [[plugboard]] to the rotor assembly. If the plugboard is not present, the entry wheel instead connects the keyboard and lampboard to the rotor assembly. While the exact wiring used is of comparatively little importance to security, it proved an obstacle to Rejewski's progress during his study of the rotor wirings. The commercial Enigma connects the keys in the order of their sequence on a [[QWERTZ]] keyboard: ''Q''&amp;rarr;''A'', ''W''&amp;rarr;''B'', ''E''&amp;rarr;''C'' and so on. The military Enigma connects them in straight alphabetical order: ''A''&amp;rarr;''A'', ''B''&amp;rarr;''B'', ''C''&amp;rarr;''C'', and so on. It took inspired guesswork for Rejewski to penetrate the modification.

=== Reflector ===
[[File:Enigma insides.agr.jpg|thumb|left|Internal mechanism of an Enigma machine showing the type B reflector and rotor stack.]]
With the exception of models ''A'' and ''B'', the last rotor came before a 'reflector' (German: ''Umkehrwalze'', meaning 'reversal rotor'), a patented feature unique to Enigma among the period's various rotor machines. The reflector connected outputs of the last rotor in pairs, redirecting current back through the rotors by a different route. The reflector ensured that Enigma is [[Involution (mathematics)|self-reciprocal]]: conveniently, encryption was the same as decryption. The reflector also gave Enigma the property that no letter ever encrypted to itself. This was a severe conceptual flaw and a cryptological mistake subsequently exploited by codebreakers.

In Model 'C', the reflector could be inserted in one of two different positions. In Model 'D', the reflector could be set in 26 possible positions, although it did not move during encryption. In the ''Abwehr'' Enigma, the reflector stepped during encryption in a manner similar to the other wheels.

In the German Army and Air Force Enigma, the reflector was fixed and did not rotate; there were four versions. The original version was marked 'A', and was replaced by ''Umkehrwalze B'' on 1 November 1937. A third version, ''Umkehrwalze C'' was used briefly in 1940, possibly by mistake, and was solved by [[Hut 6]].&lt;ref name="ukwd-1"&gt;Philip Marks, "Umkehrwalze D: Enigma's Rewirable Reflector — Part I", Cryptologia 25(2), April 2001, pp. 101–141&lt;/ref&gt; The fourth version, first observed on 2 January 1944, had a rewireable reflector, called ''Umkehrwalze D'', nick-named Uncle Dick by the British, allowing the Enigma operator to alter the connections as part of the key settings.{{Clear}}

=== Plugboard ===
[[File:Enigma-plugboard.jpg|right|thumb|The plugboard (''Steckerbrett'') was positioned at the front of the machine, below the keys. When in use during World War II, there were ten connections. In this photograph, just two pairs of letters have been swapped (A↔J and S↔O).]]

The plugboard (''Steckerbrett'' in German) permitted variable wiring that could be reconfigured by the operator (visible on the front panel of Figure 1; some of the patch cords can be seen in the lid). It was introduced on German Army versions in 1930, and was soon adopted by the ''[[Reichsmarine]]'' ([[German Navy]]). The plugboard contributed more cryptographic strength than an extra rotor. Enigma without a plugboard (known as ''unsteckered Enigma'') can be solved relatively straightforwardly using hand methods; these techniques are generally defeated by the plugboard, driving Allied cryptanalysts to develop special machines to solve it.

A cable placed onto the plugboard connected letters in pairs; for example, ''E'' and ''Q'' might be a steckered pair. The effect was to swap those letters before and after the main rotor scrambling unit. For example, when an operator presses ''E'', the signal was diverted to ''Q'' before entering the rotors. Up to 13 steckered pairs might be used at one time, although only 10 were normally used.

Current flowed from the keyboard through the plugboard, and proceeded to the entry-rotor or ''Eintrittswalze''. Each letter on the plugboard had two jacks. Inserting a plug disconnected the upper jack (from the keyboard) and the lower jack (to the entry-rotor) of that letter. The plug at the other end of the crosswired cable was inserted into another letter's jacks, thus switching the connections of the two letters.

=== Accessories ===
[[File:Enigma-printer-2.jpg|thumb|The ''Schreibmax'' was a printing unit which could be attached to the Enigma, removing the need for laboriously writing down the letters indicated on the light panel.]]

Other features made various Enigma machines more secure or more convenient.&lt;ref&gt;{{cite web |last=Reuvers |first=Paul |title=Enigma accessories |year=2008 |url=http://www.jproc.ca/crypto/enigma_acc.html |accessdate=22 July 2010}}&lt;/ref&gt;

==== ''Schreibmax'' ====
Some M4 Enigmas used the ''Schreibmax'', a small [[Computer printer|printer]] that could print the 26 letters on a narrow paper ribbon. This eliminated the need for a second operator to read the lamps and transcribe the letters. The ''Schreibmax'' was placed on top of the Enigma machine and was connected to the lamp panel. To install the printer, the lamp cover and light bulbs had to be removed. It improved both convenience and operational security; the printer could be installed remotely such that the signal officer operating the machine no longer had to see the decrypted [[plaintext]].

==== ''Fernlesegerät'' ====
Another accessory was the remote lamp panel ''Fernlesegerät''. For machines equipped with the extra panel, the wooden case of the Enigma was wider and could store the extra panel. A lamp panel version could be connected afterwards, but that required, as with the ''Schreibmax'', that the lamp panel and lightbulbs be removed.&lt;ref name="Rijmenants" /&gt; The remote panel made it possible for a person to read the decrypted plaintext without the operator seeing it.

==== ''Uhr'' ====
[[File:Enigma-uhr-box.jpg|right|thumb|upright|The Enigma Uhr attachment]]
In 1944, the ''Luftwaffe'' introduced a plugboard switch, called the ''Uhr'' (clock), a small box containing a switch with 40 positions. It replaced the standard plugs. After connecting the plugs, as determined in the daily key sheet, the operator turned the switch into one of the 40 positions, each producing a different combination of plug wiring. Most of these plug connections were, unlike the default plugs, not pair-wise.&lt;ref name="Rijmenants" /&gt; In one switch position, the ''Uhr'' did not swap letters, but simply emulated the 13 stecker wires with plugs.

=== Mathematical analysis ===
The Enigma transformation for each letter can be specified mathematically as a product of [[permutation]]s.{{sfn|Rejewski|1980}} Assuming a three-rotor German Army/Air Force Enigma, let &lt;math&gt;P&lt;/math&gt; denote the plugboard transformation, &lt;math&gt;U&lt;/math&gt; denote that of the reflector, and &lt;math&gt;L, M, R&lt;/math&gt; denote those of the left, middle and right rotors respectively. Then the encryption &lt;math&gt;E&lt;/math&gt; can be expressed as

:&lt;math&gt;E = PRMLUL^{-1}M^{-1}R^{-1}P^{-1}.&lt;/math&gt;

After each key press, the rotors turn, changing the transformation. For example, if the right-hand rotor &lt;math&gt;R&lt;/math&gt; is rotated &lt;math&gt;i&lt;/math&gt; positions, the transformation becomes &lt;math&gt;\rho^iR\rho^{-i}&lt;/math&gt;, where &lt;math&gt;\rho&lt;/math&gt; is the [[cyclic permutation]] mapping ''A'' to ''B'', ''B'' to ''C'', and so forth. Similarly, the middle and left-hand rotors can be represented as &lt;math&gt;j&lt;/math&gt; and &lt;math&gt;k&lt;/math&gt; rotations of &lt;math&gt;M&lt;/math&gt; and &lt;math&gt;L&lt;/math&gt;. The encryption transformation can then be described as

:&lt;math&gt;E = P(\rho^i R\rho^{-i})(\rho^j M\rho^{-j})(\rho^{k}L\rho^{-k})U(\rho^kL^{-1}\rho^{-k})(\rho^j M^{-1}\rho^{-j})(\rho^i R^{-1}\rho^{-i})P^{-1}.&lt;/math&gt;

Combining three rotors from a set of five, the rotor settings with 26 positions, and the plugboard with ten pairs of letters connected, the military Enigma has 158,962,555,217,826,360,000 (nearly 159 [[quintillion]]) different settings.&lt;ref&gt;{{youtube|id=G2_Q9FoD-oQ|title=158,962,555,217,826,360,000 – Numberphile}}&lt;/ref&gt;

== Operation ==

=== Basic operation ===
[[File:Encrypting and decrypting using an enigma machine.webm|thumb|Enciphering and deciphering using an Enigma machine]]
A German Enigma operator would be given a plaintext message to encrypt. For each letter typed in, a lamp indicated a different letter according to a [[Pseudorandomness|pseudo-random]] substitution, based upon the wiring of the machine. The letter indicated by the lamp would be recorded as the enciphered substitution. The action of pressing a key also moved the rotor so that the next key press used a different electrical pathway, and thus a different substitution would occur. For each key press there was rotation of at least the right hand rotor, giving a different [[Pseudorandomness|substitution alphabet]]. This continued for each letter in the message until the message was completed and a series of substitutions, each different from the others, had occurred to create a cyphertext from the plaintext. The cyphertext would then be transmitted as normal to an operator of another Enigma machine. This operator would key in the cyphertext and—as long as all the settings of the deciphering machine were identical to those of the enciphering machine—for every key press the reverse substitution would occur and the plaintext message would emerge.

=== Details ===
[[File:Kenngruppenheft.jpg|thumb|German Kenngruppenheft (a U-boat [[codebook]] with grouped key codes)]]
[[File:Enigma keylist 3 rotor.jpg|thumb|Monthly key list Number 649 for the German Air Force Enigma, including settings for the reconfigurable reflector.]]
In use, the Enigma required a list of daily key settings and auxiliary documents. In German military practice, communications were divided into separate networks, each using different settings. These communication nets were termed ''keys'' at [[Bletchley Park]], and were assigned [[code name]]s, such as ''Red'', ''Chaffinch'', and ''Shark''. Each unit operating in a network was given the same settings list for its Enigma, valid for a period of time. The procedures for German Naval Enigma were more elaborate and more secure than those in other services and employed auxiliary [[codebook]]s. Navy codebooks were printed in red, water-soluble ink on pink paper so that they could easily be destroyed if they were endangered or if the vessel was sunk.

An Enigma machine's setting (its [[Key (cryptography)|cryptographic key]] in modern terms; ''Schlüssel'' in German) specified each operator-adjustable aspect of the machine:
* Wheel order (''Walzenlage'') – the choice of rotors and the order in which they are fitted.
* Ring settings (''Ringstellung'') – the position of each alphabet ring relative to its rotor wiring.
* Plug connections (''Steckerverbindungen'') – the pairs of letters in the plugboard that are connected together.
* In very late versions, the wiring of the reconfigurable reflector.
* Starting position of the rotors (''Grundstellung'') – chosen by the operator, should be different for each message.

For a message to be correctly encrypted and decrypted, both sender and receiver had to configure their Enigma in the same way; rotor selection and order, ring positions, plugboard connections and starting rotor positions must be identical. Except for the starting positions, these settings were established beforehand, distributed in key lists and changed daily. For example, the settings for the 18th day of the month in the German Luftwaffe Enigma key list number 649 (see image) were as follows:
* Wheel order: IV, II, V
* Ring settings: 15, 23, 26
* Plugboard connections: EJ OY IV AQ KW FX MT PS LU BD
* Reconfigurable reflector wiring: IU AS DV GL FT OX EZ CH MR KN BQ PW
* Indicator groups: lsa zbw vcj rxn

Enigma was designed to be secure even if the rotor wiring was known to an opponent, although in practice considerable effort protected the wiring configuration. If the wiring is secret, the total number of possible configurations has been calculated to be around 3 x 10&lt;sup&gt;114&lt;/sup&gt; (approximately 380 bits); with known wiring and other operational constraints, this is reduced to around 10&lt;sup&gt;23&lt;/sup&gt; (76 bits).&lt;ref name="engima_cryptographic_mathematics"&gt;{{cite journal|url=http://www.nsa.gov/about/_files/cryptologic_heritage/publications/wwii/engima_cryptographic_mathematics.pdf|title=The Cryptographic Mathematics of Enigma|last=Miller|first=A. Ray|publisher=National Security Agency|year=2001|ref=harv}}&lt;/ref&gt; Users of Enigma were confident of its security because of the large number of possibilities; it was not then feasible for an adversary to even begin to try a [[brute force attack]].

=== Indicator ===
{{See also|Cryptanalysis#Indicator}}
Most of the key was kept constant for a set time period, typically a day. A different initial rotor position was used for each message, a concept similar to an [[Initialization vector|initialisation vector]] in modern cryptography. The reason is that encrypting many messages with identical or near-identical settings (termed in cryptanalysis as being ''in [[Cryptanalysis#Depth|depth]]''), would enable an attack using a statistical procedure such as [[William F. Friedman|Friedman's]] [[Index of coincidence]].&lt;ref&gt;{{cite book|last=Friedman| first=W.F.|authorlink=William F. Friedman|title=The index of coincidence and its applications in cryptology|series=Department of Ciphers. Publ 22|publisher=Riverbank Laboratories|location=Geneva, Illinois, USA|oclc=55786052|year=1922}}&lt;/ref&gt; The starting position for the rotors was transmitted just before the ciphertext, usually after having been enciphered. The exact method used was termed the ''indicator procedure''. Design weakness and operator sloppiness in these indicator procedures were two of the main weaknesses that made cracking Enigma possible.

[[File:Enigma-rotor-windows.jpg|left|thumb|Figure 2. With the inner lid down, the Enigma was ready for use. The finger wheels of the rotors protruded through the lid, allowing the operator to set the rotors, and their current position, here ''RDKP'', was visible to the operator through a set of windows.]]

One of the earliest ''indicator procedures'' for the Enigma was cryptographically flawed and allowed Polish cryptanalysts to make the initial breaks into the plugboard Enigma. The procedure had the operator set his machine in accordance with the secret settings that all operators on the net shared. The settings included an initial position for the rotors (the ''Grundstellung''), say, ''AOH''. The operator turned his rotors until ''AOH'' was visible through the rotor windows. At that point, the operator chose his own arbitrary starting position for the message he would send. An operator might select ''EIN'', and that became the ''message setting'' for that encryption session. The operator then typed ''EIN'' into the machine twice. The results were the encrypted indicator. The ''EIN'' typed twice might encrypt into ''XHTLOA'', which would be transmitted along with the encrypted message. Finally, the operator then spun the rotors to his message settings, ''EIN'' in this example, and typed the plaintext of the message.

At the receiving end, the operator set the machine to the initial settings and typed in the first six letters of the message (''XHTLOA''). In this example, ''EINEIN'' emerged on the lamps, so the operator would learn the ''message setting'' that the sender used to encrypt this message. The receiving operator would set his rotors to ''EIN'', type in the rest of the ciphertext, and get the deciphered message.

This indicator scheme had two weaknesses. First, the use of a global initial position (''Grundstellung'') meant all message keys used the same polyalphabetic substitution. In later indicator procedures, the operator selected his initial position for encrypting the indicator and sent that initial position in the clear. The second problem was the repetition of the indicator, which was a serious security flaw. The message setting was encoded twice, resulting in a relation between first and fourth, second and fifth, and third and sixth character. These security flaws enabled the [[Polish Cipher Bureau]] to break into the pre-war Enigma system as early as 1932. The early indicator procedure was subsequently described by German cryptanalysts as the "faulty indicator technique".{{sfn|Huttenhain|Fricke|1945|pp=4,5}}

During World War II, codebooks were only used each day to set up the rotors, their ring settings and the plugboard. For each message, the operator selected a random start position, let's say ''WZA'', and a random message key, perhaps ''SXT''. He moved the rotors to the ''WZA'' start position and encoded the message key ''SXT''. Assume the result was ''UHL''. He then set up the message key, ''SXT'', as the start position and encrypted the message. Next, he transmitted the start position, ''WZA'', the encoded message key, ''UHL'', and then the ciphertext. The receiver set up the start position according to the first trigram, ''WZA'', and decoded the second trigram, ''UHL'', to obtain the ''SXT'' message setting. Next, he used this ''SXT'' message setting as the start position to decrypt the message. This way, each ground setting was different and the new procedure avoided the security flaw of double encoded message settings.&lt;ref&gt;Rijmenants, Dirk; [http://users.telenet.be/d.rijmenants/en/enigmaproc.htm Enigma message procedures] Cipher Machines &amp; Cryptology&lt;/ref&gt;

This procedure was used by ''Wehrmacht'' and ''Luftwaffe'' only. The ''Kriegsmarine'' procedures on sending messages with the Enigma were far more complex and elaborate. Prior to encryption the message was encoded using the ''[[Kurzsignale|Kurzsignalheft]]'' code book. The ''Kurzsignalheft'' contained tables to convert sentences into four-letter groups. A great many choices were included, for example, logistic matters such as refuelling and rendezvous with supply ships, positions and grid lists, harbour names, countries, weapons, weather conditions, enemy positions and ships, date and time tables. Another codebook contained the ''[[Discriminant Book|Kenngruppen]]'' and ''Spruchschlüssel'': the key identification and message key.&lt;ref&gt;Rijmenants, Dirk; [http://users.telenet.be/d.rijmenants/en/kurzsignale.htm Kurzsignalen on German U-boats] Cipher Machines &amp; Cryptology&lt;/ref&gt;

=== Additional details ===
The Army Enigma machine used only the 26 alphabet characters. Punctuation was replaced with rare character combinations. A space was omitted or replaced with an X. The X was generally used as full-stop.

Some punctuation marks were different in other parts of the armed forces. The ''Wehrmacht'' replaced a comma with ZZ and the question mark with FRAGE or FRAQ.

The ''Kriegsmarine'' replaced the comma with Y and the question mark with UD. The combination CH, as in "''Acht''" (eight) or "''Richtung''" (direction), was replaced with Q (AQT, RIQTUNG). Two, three and four zeros were replaced with CENTA, MILLE and MYRIA.

The ''Wehrmacht'' and the ''Luftwaffe'' transmitted messages in groups of five characters.

The ''Kriegsmarine'', using the four rotor Enigma, had four-character groups. Frequently used names or words were varied as much as possible. Words like ''Minensuchboot'' (minesweeper) could be written as MINENSUCHBOOT, MINBOOT, MMMBOOT or MMM354. To make cryptanalysis harder, messages were limited to 250 characters. Longer messages were divided into several parts, each using a different message key.&lt;ref&gt;{{cite web|url=http://www.codesandciphers.org.uk/documents/egenproc/eniggnix.htm|title=The translated 1940 ''Enigma General Procedure''|publisher=codesandciphers.org.uk|accessdate=16 October 2006}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://www.codesandciphers.org.uk/documents/officer/officerx.htm|title=The translated 1940 ''Enigma Officer and Staff Procedure''|publisher=codesandciphers.org.uk|accessdate=16 October 2006}}&lt;/ref&gt;{{Clear}}

=== Example encoding process ===
The character substitutions by the Enigma machine as a whole can be expressed as a string of letters with each position occupied by the character that will replace the character at the corresponding position in the alphabet. For example a given machine configuration that encoded A to L, B to U, C to S, ..., and Z to J could be represented compactly as

 LUSHQOXDMZNAIKFREPCYBWVGTJ

and the encoding of a particular character by that configuration could be represented by highlighting the encoded character as in

 D &gt; LUS(H)QOXDMZNAIKFREPCYBWVGTJ

Since the operation of an Enigma machine encoding a message is a series of such configurations, each associated with a single character being encoded, a sequence of such representations can be used to represent the operation of the machine as it encodes a message. For example, the process of encoding the first sentence of the main body of the famous "Dönitz message"&lt;ref&gt;{{cite web|url=https://www.cryptomuseum.com/crypto/enigma/msg/p1030681.htm|title=Message from Dönitz - 1 May 1945|accessdate=27 November 2018}}&lt;/ref&gt; to

 RBBF PMHP HGCZ XTDY GAHG UFXG EWKB LKGJ

can be represented as  

 0001  F &gt; KGWNT(R)BLQPAHYDVJIFXEZOCSMU  CDTK  25 15 16 26
 0002  O &gt; UORYTQSLWXZHNM(B)VFCGEAPIJDK  CDTL  25 15 16 01
 0003  L &gt; HLNRSKJAMGF(B)ICUQPDEYOZXWTV  CDTM  25 15 16 02
 0004  G &gt; KPTXIG(F)MESAUHYQBOVJCLRZDNW  CDUN  25 15 17 03
 0005  E &gt; XDYB(P)WOSMUZRIQGENLHVJTFACK  CDUO  25 15 17 04
 0006  N &gt; DLIAJUOVCEXBN(M)GQPWZYFHRKTS  CDUP  25 15 17 05
 0007  D &gt; LUS(H)QOXDMZNAIKFREPCYBWVGTJ  CDUQ  25 15 17 06
 0008  E &gt; JKGO(P)TCIHABRNMDEYLZFXWVUQS  CDUR  25 15 17 07
 0009  S &gt; GCBUZRASYXVMLPQNOF(H)WDKTJIE  CDUS  25 15 17 08
 0010  I &gt; XPJUOWIY(G)CVRTQEBNLZMDKFAHS  CDUT  25 15 17 09
 0011  S &gt; DISAUYOMBPNTHKGJRQ(C)LEZXWFV  CDUU  25 15 17 10
 0012  T &gt; FJLVQAKXNBGCPIRMEOY(Z)WDUHST  CDUV  25 15 17 11
 0013  S &gt; KTJUQONPZCAMLGFHEW(X)BDYRSVI  CDUW  25 15 17 12
 0014  O &gt; ZQXUVGFNWRLKPH(T)MBJYODEICSA  CDUX  25 15 17 13
 0015  F &gt; XJWFR(D)ZSQBLKTVPOIEHMYNCAUG  CDUY  25 15 17 14
 0016  O &gt; FSKTJARXPECNUL(Y)IZGBDMWVHOQ  CDUZ  25 15 17 15
 0017  R &gt; CEAKBMRYUVDNFLTXW(G)ZOIJQPHS  CDVA  25 15 18 16
 0018  T &gt; TLJRVQHGUCXBZYSWFDO(A)IEPKNM  CDVB  25 15 18 17
 0019  B &gt; Y(H)LPGTEBKWICSVUDRQMFONJZAX  CDVC  25 15 18 18
 0020  E &gt; KRUL(G)JEWNFADVIPOYBXZCMHSQT  CDVD  25 15 18 19
 0021  K &gt; RCBPQMVZXY(U)OFSLDEANWKGTIJH  CDVE  25 15 18 20
 0022  A &gt; (F)CBJQAWTVDYNXLUSEZPHOIGMKR  CDVF  25 15 18 21
 0023  N &gt; VFTQSBPORUZWY(X)HGDIECJALNMK  CDVG  25 15 18 22
 0024  N &gt; JSRHFENDUAZYQ(G)XTMCBPIWVOLK  CDVH  25 15 18 23
 0025  T &gt; RCBUTXVZJINQPKWMLAY(E)DGOFSH  CDVI  25 15 18 24
 0026  Z &gt; URFXNCMYLVPIGESKTBOQAJZDH(W)  CDVJ  25 15 18 25
 0027  U &gt; JIOZFEWMBAUSHPCNRQLV(K)TGYXD  CDVK  25 15 18 26
 0028  G &gt; ZGVRKO(B)XLNEIWJFUSDQYPCMHTA  CDVL  25 15 18 01 
 0029  E &gt; RMJV(L)YQZKCIEBONUGAWXPDSTFH  CDVM  25 15 18 02 
 0030  B &gt; G(K)QRFEANZPBMLHVJCDUXSOYTWI  CDWN  25 15 19 03 
 0031  E &gt; YMZT(G)VEKQOHPBSJLIUNDRFXWAC  CDWO  25 15 19 04 
 0032  N &gt; PDSBTIUQFNOVW(J)KAHZCEGLMYXR  CDWP  25 15 19 05 

Where the letters following each mapping are the letters that appear at the windows at that stage (the only state changes visible to the operator) and the numbers show the underlying physical position of each rotor.

== History ==
The Enigma family included multiple designs. The earliest were commercial models dating from the early 1920s. Starting in the mid-1920s, the German military began to use Enigma, making a number of security-related changes. Various nations either adopted or adapted the design for their own cipher machines.

{|style="margin: 1em auto 0 auto;"
|-
|[[File:Enigmas.jpg|upright=2.0|thumb|A selection of seven Enigma machines and paraphernalia exhibited at the U.S. [[National Cryptologic Museum]]. From left to right, the models are: 1) Commercial Enigma; 2) Enigma T; 3) Enigma G; 4) Unidentified; 5) ''Luftwaffe'' (Air Force) Enigma; 6) ''Heer'' (Army) Enigma; 7) ''Kriegsmarine'' (Naval) Enigma—M4.]]
|}

An estimated 100,000 Enigma machines were constructed. After the end of World War II, the Allies sold captured Enigma machines, still widely considered secure, to developing countries.{{sfn|Bauer|2000|p=112}}

=== Commercial Enigma ===
[[File:Scherbius-1928-patent.png|thumb|right|upright=1.45|Scherbius's Enigma patent—{{US patent|1657411}}, granted in 1928.]]

On 23 February 1918,{{fails verification|reason=US Patent 1657411 says German application filed 11 Feb 1922. Cannot find 1918 application by either Ritter or Scherbius.|date=December 2017}} [[Arthur Scherbius]] applied for a [[patent]] for a ciphering machine that used [[rotor machine|rotors]].&lt;ref&gt;{{cite patent |inventor-last=Scherbius |inventor-first=Arthur |title=Ciphering Machine |country-code=US |patent-number=1657411 |gdate=January 24, 1928 |pridate=February 11, 1922 |fdate=February 6, 1923 |assign1=Chiffriermaschinen AG}}&lt;/ref&gt; Scherbius and [[E. Richard Ritter]] founded the firm of [[Arthur Scherbius|Scherbius]] &amp; Ritter. They approached the [[Kaiserliche Marine|German Navy]] and Foreign Office with their design, but neither agency was interested. Scherbius &amp; Ritter then assigned the patent rights to Gewerkschaft Securitas, who founded the ''Chiffriermaschinen Aktien-Gesellschaft'' (Cipher Machines Stock Corporation) on 9 July 1923; Scherbius and Ritter were on the board of directors.

==== Enigma A (1923) ====
Chiffriermaschinen AG began advertising a rotor machine—''Enigma model A''—which was exhibited at the Congress of the [[Universal Postal Union|International Postal Union]] in 1924. The machine was heavy and bulky, incorporating a [[typewriter]]. It measured 65×45×38&amp;nbsp;cm and weighed about {{convert|50|kg|lb}}.

==== Enigma B (1924) ====

In 1924 Enigma ''model B'' was introduced, and was of a similar construction.&lt;ref&gt;{{cite web|url=http://www.armyradio.com/publish/Articles/The_Enigma_Code_Breach/Pictures/enigma_type_b.jpg|title=image of Enigma Type B|deadurl=yes|archiveurl=https://web.archive.org/web/20051021083422/http://www.armyradio.com/publish/Articles/The_Enigma_Code_Breach/Pictures/enigma_type_b.jpg|archivedate=21 October 2005|df=dmy-all}}&lt;/ref&gt; While bearing the Enigma name, both models ''A'' and ''B'' were quite unlike later versions: they differed in physical size and shape, but also cryptographically, in that they lacked the reflector.

==== Enigma C (1926) ====

The reflector—suggested by Scherbius's colleague [[Willi Korn]]—was introduced in ''Enigma C'' (1926).

''Model C'' was smaller and more portable than its predecessors. It lacked a typewriter, relying on the operator; hence the informal name of "glowlamp Enigma" to distinguish it from models ''A'' and ''B''.

==== Enigma D (1927) ====

The ''Enigma C'' quickly gave way to ''Enigma D'' (1927). This version was widely used, with shipments to Sweden, the Netherlands, United Kingdom, Japan, Italy, Spain, United States and Poland. In 1927 [[Hugh Foss]] at the British [[Government Communications Headquarters|Government Code and Cypher School]] was able to show that commercial Enigma machines could be broken provided that suitable cribs were available.&lt;ref&gt;Bletchley Park Trust Museum display&lt;/ref&gt;

===== "Navy Cipher D" – Italian Navy =====
Other countries used Enigma machines. The [[Italian Navy]] adopted the commercial Enigma as "Navy Cipher D". The Spanish also used commercial Enigma during their [[Spanish Civil War|Civil War]]. British codebreakers succeeded in breaking these machines, which lacked a plugboard.{{sfn|Smith|2006|p=23}} Enigma were also used by diplomatic services.

==== Enigma H (1929) ====
[[File:Enigma-8-rotor.jpg|right|thumb|upright|A rare 8-rotor printing Enigma model H (1929).]]
There was also a large, eight-rotor printing model, the ''Enigma H'', called ''Enigma II'' by the ''[[Reichswehr]]''. In 1933 the [[Polish Cipher Bureau]] detected that it was in use for high-level military communications, but that it was soon withdrawn, as it was unreliable and jammed frequently.{{sfn|Kozaczuk|1984|p=28}}

==== Enigma K ====
The Swiss used a version of Enigma called ''model K'' or ''Swiss K'' for military and diplomatic use, which was very similar to commercial [[Enigma D]]. The machine was cracked by Poland, France, the United Kingdom and the United States (the latter codenamed it INDIGO). An ''Enigma T'' model (codenamed ''Tirpitz'') was used by Japan.

==== Typex ====

Once the British broke the Enigma, they fixed the problem with it and [[Typex|created their own]], which the Germans believed to be unsolvable.&lt;ref&gt;{{Citation|last=Numberphile|title=Flaw in the Enigma Code - Numberphile|date=2013-01-14|url=https://www.youtube.com/watch?v=V4V2bpZlqx8|accessdate=2017-02-14}}&lt;/ref&gt;

=== Military Enigma ===

==== Funkschlüssel C ====
The Reichsmarine was the first military branch to adopt Enigma. This version, named ''Funkschlüssel C'' ("Radio cipher C"), had been put into production by 1925 and was introduced into service in 1926.{{sfn|Kahn|1991|pp=39–41, 299}}

The keyboard and lampboard contained 29 letters—A-Z, Ä, Ö and Ü—which were arranged alphabetically, as opposed to the QWERTZUI ordering.{{sfn|Ulbricht|2005|p=4}} The rotors had 28 contacts, with the letter ''X'' wired to bypass the rotors unencrypted.{{sfn|Stripp|1993}}
Three rotors were chosen from a set of five{{sfn|Kahn|1991|pp=40, 299}} and the reflector could be inserted in one of four different positions, denoted α, β, γ and δ.{{sfn|Bauer|2000|p=108}} The machine was revised slightly in July 1933.{{sfn|Stripp|1993|loc=plate 3}}

==== Enigma G (1928–1930) ====
By 15 July 1928,{{sfn|Kahn|1991|pp=41, 299}} the German Army (''[[Reichswehr]]'') had introduced their own exclusive version of the Enigma machine; the ''Enigma G''.

The ''[[Abwehr]]'' used the ''Enigma G'' (the ''Abwehr'' Enigma). This Enigma variant was a four-wheel unsteckered machine with multiple notches on the rotors. This model was equipped with a counter which incremented upon each key press, and so is also known as the "counter machine" or the ''Zählwerk'' Enigma.

==== Wehrmacht Enigma I (1930–1938) ====
Enigma machine G was modified to the ''Enigma I'' by June 1930.{{sfn|Kruh|Deavours|2002|p=97}} Enigma I is also known as the ''Wehrmacht'', or "Services" Enigma, and was used extensively by German military services and other government organisations (such as the [[Deutsche Reichsbahn-Gesellschaft|railways]]{{sfn|Smith|2000|p= 73}}) before and during [[World War II]].

[[File:Bundesarchiv Bild 101I-769-0229-10A, Frankreich, Guderian, "Enigma" croppped.jpg|thumb|upright|[[Heinz Guderian]] in the [[Battle of France]], with an Enigma machine]]

The major difference between ''Enigma I'' (German Army version from 1930), and commercial Enigma models was the addition of a plugboard to swap pairs of letters, greatly increasing cryptographic strength.

Other differences included the use of a fixed reflector and the relocation of the stepping notches from the rotor body to the movable letter rings. The machine measured {{convert|28|x|34|x|15|cm|in|abbr=on}} and weighed around {{convert|12|kg|lb|abbr=on}}.&lt;ref name="Stripp"&gt;Stripp, 1993&lt;/ref&gt;

In August 1935, the Air Force introduced the Wehrmacht Enigma for their communications.{{sfn|Kruh|Deavours|2002|p=97}}

==== M3 (1934) ====
By 1930, the Reichswehr had suggested that the Navy adopt their machine, citing the benefits of increased security (with the plugboard) and easier interservice communications.{{sfn|Kahn|1991|p=43}} The Reichsmarine eventually agreed and in 1934&lt;ref&gt;{{harvnb|Kahn|1991|p=43}} says August 1934. {{harvnb|Kruh|Deavours|2002|p=15}} say October 2004.&lt;/ref&gt; brought into service the Navy version of the Army Enigma, designated ''Funkschlüssel'' ' or ''M3''. While the Army used only three rotors at that time, the Navy specified a choice of three from a possible five.{{sfn|Kruh|Deavours|2002|p=98}}
[[File:Bundesarchiv Bild 101I-241-2173-09, Russland, Verschlüsselungsgerät Enigma.jpg|thumb|left|Enigma in use on the Russian front]]

==== Two extra rotors (1938) ====
In December 1938, the Army issued two extra rotors so that the three rotors were chosen from a set of five.{{sfn|Kruh|Deavours|2002|p=97}} In 1938, the Navy added two more rotors, and then another in 1939 to allow a choice of three rotors from a set of eight.{{sfn|Kruh|Deavours|2002|p=98}}

==== M4 (1942) ====
{{See also|German Navy 4-rotor Enigma}}
A four-rotor Enigma was introduced by the Navy for U-boat traffic on 1 February 1942, called ''[[M4 (German Navy 4-rotor Enigma)|M4]]'' (the network was known as ''Triton'', or ''Shark'' to the Allies). The extra rotor was fitted in the same space by splitting the reflector into a combination of a thin reflector and a thin fourth rotor.

&lt;gallery mode="packed" heights="160px"&gt;
File:Enigma-G.jpg|Enigma G, used by the ''[[Abwehr]]'', had four rotors, no plugboard, and multiple notches on the rotors.
File:Enigma-IMG 0484-black.jpg|The German-made Enigma-K used by the Swiss Army had three rotors and a reflector, but no plugboard. It had locally re-wired rotors and an additional lamp panel.
File:four-rotor-enigma.jpg|An Enigma model T (Tirpitz)—a modified commercial Enigma K manufactured for use by the Japanese.
File:Enigma Decoder Machine.jpg|An Enigma machine in the UK's Imperial War Museum
File:Bundesarchiv Bild 101I-241-2173-06, Russland, Verschlüsselungsgerät Enigma.jpg|Enigma in use in Russia (image Bundesarchiv)
File:Bundesarchiv Bild 146-2006-0188, Verschlüsselungsgerät "Enigma".jpg|Enigma in radio car of the 7th Panzer Div. staff, August 1941
&lt;/gallery&gt;

== Breaking Enigma ==
{{Main|Cryptanalysis of the Enigma}}

== Surviving machines ==
[[File:US M1 enigma analog 3.jpg|thumb|left|U.S. Enigma replica on display at the [[National Cryptologic Museum]] in Fort Meade, Maryland]]
The effort to break the Enigma was not disclosed until the 1970s. Since then, interest in the Enigma machine has grown. Enigmas are on public display in museums around the world, and several are in the hands of private collectors and computer history enthusiasts.&lt;ref name=ng&gt;Ng, David. [http://www.latimes.com/entertainment/arts/culture/la-et-cm-imitation-game-enigma-machine-david-bohnett-20150122-story.html "Enigma machine from World War II finds unlikely home in Beverly Hills"]. ''[[Los Angeles Times]]''. 22 January 2015.&lt;/ref&gt;

The ''[[Deutsches Museum]]'' in [[Munich]] has both the three- and four-rotor German military variants, as well as several civilian versions. Enigma machines are exhibited at the National Codes Centre in [[Bletchley Park]], the [[Government Communications Headquarters]], the [[Science Museum (London)|Science Museum]] in [[London]], the [[Polish Army Museum]] in Warsaw, the [[Swedish Army Museum]] (''Armémuseum'') in [[Stockholm]], the Military Museum of [[A Coruña]] in Spain, the Nordland Red Cross War Memorial Museum in [[Narvik]],&lt;ref&gt;{{cite web|url=http://www.warmuseum.no/no/English/|title=War Museum|publisher=}}&lt;/ref&gt; Norway,  [[The Artillery, Engineers and Signals Museum]] in [[Hämeenlinna]], Finland&lt;ref&gt;{{cite web|url=http://www.viestikiltojenliitto.fi/viestimuseo/_eng/index.html|title=The National Signals Museum|publisher=}}&lt;/ref&gt; the [[Technical University of Denmark]] in Lyngby, Denmark, and at the [[Australian War Memorial]] and in the foyer of the [[Defence Signals Directorate]], both in [[Canberra]], Australia. The Jozef Pilsudski Institute in London exhibits a rare [[Polish Enigma double]] assembled in France in 1940.&lt;ref&gt;{{Cite web|url=http://www.thenews.pl/1/10/Artykul/244703,Enigma-exhibition-in-London-pays-tribute-to-Poles|title=Enigma exhibition in London pays tribute to Poles|website=Polskie Radio dla Zagranicy|access-date=2016-04-05}}&lt;/ref&gt;&lt;ref&gt;{{Cite web|url=http://pilsudski.org.uk/en/aktualnosci.php?news=205&amp;wid=13&amp;wai=&amp;year=&amp;back=%252Fen%252F|title=13 March 2016, ‘Enigma Relay’– how Poles passed the baton to Brits in the run for WWII victory,|website=pilsudski.org.uk|access-date=2016-04-05}}&lt;/ref&gt;

[[File:Kriegsmarine Enigma.png|thumb|upright|A four-rotor ''[[Kriegsmarine]]'' (German Navy, 1. February 1942 to 1945) Enigma machine on display at the U.S. National Cryptologic Museum]]
In the United States, Enigma machines can be seen at the [[Computer History Museum]] in [[Mountain View, California]], and at the [[National Security Agency]]'s [[National Cryptologic Museum]] in [[Fort George G. Meade|Fort Meade]], Maryland, where visitors can try their hand at enciphering and deciphering messages. Two machines that were acquired after the capture of {{Ship|German submarine|U-505||2}} during World War II are on display alongside the submarine at the [[Museum of Science and Industry (Chicago)|Museum of Science and Industry]] in [[Chicago]], Illinois. A four rotor device is on display in the ANZUS Corridor of the [[The Pentagon|Pentagon]] on the second floor, A ring, between corridors 9 and 10. This machine is on loan from Australia. The United States Air Force Academy in Colorado Springs has a machine on display in the Computer Science Department. There is also a machine located at the [[National World War II Museum]] in New Orleans. The [[Museum of World War II]] in Boston has seven Enigma machines on display, including a U-Boat four-rotor model, one of three surviving examples of an Enigma machine with a printer, one of fewer than ten surviving ten-rotor code machines, an example blown up by a retreating German Army unit, and two three-rotor Enigmas that visitors can operate to encode and decode messages themselves.

[[File:Muzeum 2 Wojny Swiatowej Gdansk Enigma cipher machine.jpg|thumb|left|A four-rotor ''[[Kriegsmarine]]'' Enigma machine on display at the [[Museum of the Second World War]], [[Gdańsk]], Poland]]
In Canada, a Swiss Army issue Enigma-K, is in Calgary, Alberta. It is on permanent display at the Naval Museum of Alberta inside the Military Museums of Calgary. A 4-rotor Enigma machine is on display at the [[Military Communications and Electronics Museum]] at [[CFB Kingston|Canadian Forces Base (CFB) Kingston]] in [[Kingston, Ontario]].

Occasionally, Enigma machines are sold at auction; prices have in recent years ranged from US$40,000&lt;ref&gt;Hamer, David; ''[http://www.eclipse.net/~dhamer/location.htm Enigma machines – known locations*]'' {{webarchive |url=https://web.archive.org/web/20111104151545/http://www.eclipse.net/~dhamer/location.htm |date=4 November 2011 }}&lt;/ref&gt;&lt;ref&gt;Hamer, David; ''[http://www.eclipse.net/~dhamer/enigma_p.htm Selling prices of Enigma and NEMA – all prices converted to US$]'' {{webarchive |url=https://web.archive.org/web/20110927033657/http://www.eclipse.net/~dhamer/enigma_p.htm |date=27 September 2011 }}&lt;/ref&gt; to US$547,500&lt;ref&gt;Christi's; ''[https://web.archive.org/web/20170617050627/http://artdaily.com/news/96771/Christie-s-sets-world-auction-record-for-an-Enigma-Machine-sold-to-online-bidder#.WZ80cZN94RF 4 Rotor enigma auction]''&lt;/ref&gt; in 2017. Replicas are available in various forms, including an exact reconstructed copy of the Naval M4 model, an Enigma implemented in electronics (Enigma-E), various simulators and paper-and-scissors analogues.

A rare ''Abwehr'' Enigma machine, designated G312, was stolen from the Bletchley Park museum on 1 April 2000. In September, a man identifying himself as "The Master" sent a note demanding £25,000 and threatening to destroy the machine if the ransom was not paid. In early October 2000, Bletchley Park officials announced that they would pay the ransom, but the stated deadline passed with no word from the blackmailer. Shortly afterward, the machine was sent anonymously to BBC journalist [[Jeremy Paxman]], missing three rotors.

In November 2000, an antiques dealer named Dennis Yates was arrested after telephoning ''[[The Sunday Times]]'' to arrange the return of the missing parts. The Enigma machine was returned to Bletchley Park after the incident. In October 2001, Yates was sentenced to 10 months in prison and served three months.&lt;ref&gt;{{cite news|url=http://news.bbc.co.uk/1/hi/uk/1609168.stm|work=BBC News|title=Man jailed over Enigma machine|date=19 October 2001|accessdate=2 May 2010}}&lt;/ref&gt;

In October 2008, the Spanish daily newspaper ''[[El País]]'' reported that 28 Enigma machines had been discovered by chance in an attic of Army headquarters in Madrid. These 4-rotor commercial machines had helped Franco's Nationalists win the [[Spanish Civil War]] because, though the British cryptologist [[Alfred Dilwyn Knox]] in 1937 broke the cipher generated by Franco's Enigma machines, this was not disclosed to the Republicans, who failed to break the cipher. The Nationalist government continued using its 50 Enigmas into the 1950s. Some machines have gone on display in Spanish military museums,&lt;ref&gt;Graham Keeley. ''[http://www.timesonline.co.uk/tol/news/world/europe/article5003411.ece Nazi Enigma machines helped General Franco in Spanish Civil War]'', [[The Times]], 24 October 2008, p. 47.&lt;/ref&gt;&lt;!--for the whole paragraph--&gt;&lt;ref&gt;{{cite web|url=http://www.cripto.es/museo/enigma-esp-fotos.htm |title=Taller de Criptografía – Enigmas españolas |publisher=Cripto.es |date= |accessdate=8 September 2013}}&lt;/ref&gt; including one at the National Museum of Science and Technology (MUNCYT) in La Coruña. Two have been given to Britain's GCHQ.&lt;ref&gt;{{cite web|url=http://www.schneier.com/blog/archives/2012/03/rare_spanish_en.html |title=Schneier on Security: Rare Spanish Enigma Machine |publisher=Schneier.com |date=26 March 2012 |accessdate=8 September 2013}}&lt;/ref&gt;

The [[Bulgaria]]n military used Enigma machines with a [[Cyrillic script|Cyrillic]] keyboard; one is on display in the [[National Museum of Military History (Bulgaria)|National Museum of Military History]] in [[Sofia]].&lt;ref&gt;{{cite web|url=http://www.znam.bg/com/action/showAppArticle?appID=3&amp;encID=2&amp;article=3514226659&amp;sectionID=1|title=Communication equipment|publisher=znam.bg|date=29 November 2003}}&lt;/ref&gt;

== Derivatives ==
{{Original research|section|date=April 2013}}
The Enigma was influential in the field of cipher machine design, spinning off other rotor machines. The British [[Typex]] was originally derived from the Enigma patents; Typex even includes features from the patent descriptions that were omitted from the actual Enigma machine. The British paid no royalties for the use of the patents, to protect secrecy. The Typex implementation is not the same as that found in German or other Axis versions.

A Japanese Enigma clone was codenamed GREEN by American cryptographers. Little used, it contained four rotors mounted vertically. In the U.S., cryptologist [[William F. Friedman|William Friedman]] designed the [[M-325]], a machine logically similar, although not in construction.

A unique rotor machine was constructed in 2002 by Netherlands-based Tatjana van Vark. This device makes use of 40-point rotors, allowing letters, numbers and some punctuation to be used; each rotor contains 509 parts.&lt;ref&gt;van Vark, Tatjana ''[http://www.tatjavanvark.nl/tvv1/pht10.html The coding machine]''&lt;/ref&gt;

Machines like the [[SIGABA]], [[NEMA (machine)|NEMA]], [[Typex]] and so forth, are deliberately not considered to be Enigma derivatives as their internal ciphering functions are not mathematically identical to the Enigma transform.

Several software implementations exist, but not all exactly match Enigma behaviour. The most commonly used software derivative (that is not compliant with any hardware implementation of the Enigma) is at EnigmaCo.de. Many Java applet Enigmas only accept single letter entry, complicating use even if the applet is Enigma compliant. Technically, Enigma@home is the largest scale deployment of a software Enigma, but the decoding software does not implement encipherment making it a derivative (as all original machines could cipher and decipher).

A user-friendly 3-rotor simulator, where users can select rotors, use the plugboard and define new settings for the rotors and reflectors is available.&lt;ref&gt;[http://w1tp.com/enigma/enigma_w.zip 3 rotor download]&lt;/ref&gt; The output appears in separate windows which can be independently made "invisible" to hide decryption.&lt;ref&gt;[http://membres.multimania.fr/pc1/enigma/ Enigma at Multimania]&lt;/ref&gt; Another includes an "autotyping" function which takes plaintext from a clipboard and converts it to cyphertext (or vice versa) at one of four speeds. The "very fast" option produces 26 characters in less than one second.&lt;ref&gt;[http://w1tp.com/enigma/EnigmaSim.zip Autotype download]&lt;/ref&gt;

&lt;gallery mode="packed" heights="148px"&gt;
File:Japanese secure teletype 2.jpg|A Japanese Enigma clone, codenamed GREEN by American cryptographers.
File:Tatjavanavark-machine.jpg|Tatjana van Vark's Enigma-inspired rotor machine.
File:Enigma simulator-IMG 0515-black.jpg|Electronic implementation of an Enigma machine, sold at the Bletchley Park souvenir shop
&lt;/gallery&gt;

== Simulators ==
{| class="wikitable sortable"
|-
! Name
! Platform
! Machine types
! [[#Uhr|Uhr]]
! [[#Reflector|UKW-D]]
|-
| Franklin Heath Enigma Simulator&lt;ref&gt;{{cite web|url=https://play.google.com/store/apps/details?id=uk.co.franklinheath.enigmasim&amp;hl=en|title=Enigma Simulator – Android Apps on Google Play|author=Franklin Heath Ltd|work=google.com}}&lt;/ref&gt; || Android || K Railway, Kriegsmarine M3,M4 || {{No}} || {{No}}
|-
| EnigmAndroid&lt;ref&gt;{{cite web|url=https://f-droid.org/repository/browse/?fdid=de.vanitasvitae.enigmandroid|title=F-Droid|work=f-droid.org}}&lt;/ref&gt; || Android || Wehrmacht I, Kriegsmarine M3, M4, Abwehr G31, G312, G260, D, K, Swiss-K, KD, R, T || {{No}} || {{No}}
|-
| Andy Carlson Enigma Applet (Standalone Version)&lt;ref&gt;Andy Carlson, [http://www.mtholyoke.edu/~adurfee/cryptology/enigma_j.html Enigma Applet (Standalone Version)]&lt;/ref&gt; || Java || Kriegsmarine M3, M4 || {{No}} || {{No}}
|-
| Minarke (Minarke Is Not A Real Kriegsmarine Enigma)&lt;ref&gt;John Gilbert, [http://sourceforge.net/projects/minarke Minarke – A Terminal Friendly Enigma Emulator]&lt;/ref&gt; || C/Posix/CLI (MacOS, Linux, UNIX, etc.)  || Wehrmacht, Kriegsmarine, M3, M4 || {{No}} || {{No}}
|-
| Russell Schwager Enigma Simulator&lt;ref&gt;Russell Schwager, [http://russells.freeshell.org/enigma/ Enigma Simulator Russell Schwager Enigma Simulator]&lt;/ref&gt; || Java || Kriegsmarine M3 || {{No}} || {{No}}
|-
| PA3DBJ G-312 Enigma Simulator&lt;ref&gt;PA3DBJ G-312, [http://home.caiway.nl/~antonh/enigma_ga.html Enigma Simulator]&lt;/ref&gt; || Javascript || G312 Abwehr || {{No}} || {{No}}
|-
| Daniel Palloks Universal Enigma&lt;ref&gt;Daniel Palloks,[http://people.physik.hu-berlin.de/~palloks/js/enigma/index_en.html Universal Enigma]&lt;/ref&gt; || Javascript || Wehrmacht, Kriegsmarine M3, M4. D (commercial), K (Swiss), Railway, Tirpitz (Japan), A-865 Zählwerk, G-111 Hungary/Munich, G-260 Abwehr/Argentina, G-312 Abwehr/Bletchley || {{Yes}} || {{No}}
|-
| Universal Enigma Machine Simulator&lt;ref&gt;Summerside Makerspace,[http://summersidemakerspace.ca/projects/enigma-machine/ Universal Enigma Machine Simulator]&lt;/ref&gt; || Javascript || D, I, Norway, M3, M4, Zählwerk, G, G-111, G-260, G-312, K, Swiss-K, KD, Railway, T || {{Yes}} || {{Yes}}
|-
| Terry Long Enigma Simulator&lt;ref&gt;Terry Long, [http://www.macupdate.com/app/mac/25427/enigma-simulator Enigma Simulator]&lt;/ref&gt; || MacOS || Kriegsmarine M3 || {{No}} || {{No}}
|-
| [http://www.cryptomuseum.com/crypto/enigma/sim/riscos.htm Paul Reuvers Enigma Simulator for RISC OS]&lt;ref&gt;Paul Reuvers,  [http://www.cryptomuseum.com/crypto/enigma/sim/riscos.htm Enigma Simulator for RISC OS]&lt;/ref&gt; || RISC OS || Kriegsmarine M3, M4, G-312 Abwehr || {{No}} || {{No}}
|-
| Dirk Rijmenants Enigma Simulator v7.0&lt;ref&gt;Dirk Rijmenants, [http://users.telenet.be/d.rijmenants/en/enigmasim.htm Enigma Simulator v7.0]&lt;/ref&gt; || Windows || Wehrmacht, Kriegsmarine M3, M4 || {{No}} || {{No}}
|-
| Frode Weierud Enigma Simulators&lt;ref&gt;Frode Weierud [http://cryptocellar.org/simula/ Enigma Simulators]&lt;/ref&gt; || Windows || Abwehr, Kriegsmarine M3, M4, Railway || {{No}} || {{No}}
|-
| Alexander Pukall Enigma Simulator &lt;ref&gt;Alexander Pukall, [http://pc1cipher.esy.es/enigma-en/index.html Enigma Simulator ]&lt;/ref&gt; || Windows || Wehrmacht, Luftwaffe || {{No}} || {{No}}
|-
| CrypTool 2 - Enigma component and cryptanalysis &lt;ref&gt;CrypTool 2 Team, [https://www.cryptool.org/en/cryptool2 CrypTool 2 website]&lt;/ref&gt; || Windows || A/B/D (commercial), Abwehr, Reichsbahn, Swiss-K, Enigma M3, Enigma M4 || {{No}} || {{No}}
|}

== In popular culture ==
; Literature 
* [[Hugh Whitemore]]'s play, ''[[Breaking the Code]]'' (1986), focuses on the life and death of [[Alan Turing]], who was the central force in continuing to solve the Enigma code in the United Kingdom, during [[World War II]]. Turing was played by [[Derek Jacobi]], who also played Turing in a 1996 television adaptation of the play.
* [[Robert Harris (novelist)|Robert Harris]]' novel ''[[Enigma (novel)|Enigma]]'' (1995)  is set against the backdrop of World War II [[Bletchley Park]] and cryptologists working to read Naval Enigma in [[Hut 8]]. 
* [[Neal Stephenson]]'s novel ''[[Cryptonomicon]]'' (1999) prominently features the Enigma machine and efforts to break it, and portrays the German U-boat command under [[Karl Dönitz]] using it in apparently deliberate ignorance of its penetration.

; Films
* ''[[Sekret Enigmy]]'' (1979; translation: ''The Enigma Secret''), is a Polish film dealing with Polish aspects of the subject.&lt;ref&gt;{{IMDb title|tt0079878}}&lt;/ref&gt;
* The plot of the film ''[[U-571 (film)|U-571]]'' (released in 2000) revolves around an attempt by American, rather than British, forces to seize an Enigma machine from a German U-boat.
* Harris' book, with substantial changes in plot, was adapted as the film ''[[Enigma (2001 film)|Enigma]]'' (2001), directed by [[Michael Apted]] and starring [[Kate Winslet]] and [[Dougray Scott]]. The film was criticised for historical inaccuracies, including neglect of the role of [[Poland]]'s ''[[Biuro Szyfrów]]''. The film—like the book—makes a Pole the villain, who seeks to betray the secret of Enigma decryption.&lt;ref&gt;{{cite new|author=Laurence Peter|url=http://news.bbc.co.uk/2/hi/europe/8158782.stm |title=How Poles cracked Nazi Enigma secret |publisher=[[BBC News]]|date= 20 July 2009}}&lt;/ref&gt;
* The film ''[[The Imitation Game]]'' (2014) tells the story of [[Alan Turing]] and his attempts to crack the Enigma machine code during World War II.&lt;ref name=ng /&gt;

; Television
* In the British television series ''[[The Bletchley Circle]]'', the [[Typex]] was used by the protagonists during the war, and in Season 2, Episode 4, they visit [[Bletchley Park]] to seek one out, in order to crack the code of the [[black market]] procurer and smuggler Marta, who used the Typex to encode her ledger. The Circle, forced to settle for using an Enigma, instead, successfully cracks the code.
* In [[List of Elementary episodes#Season 5 (2016–17)|season 5, episode 23]] ("Scrambled") of the American television series [[Elementary (TV series)|''Elementary'']] a drug smuggling gang uses a four-rotor Enigma machine as part of their effort to encrypt their communications.

== See also ==
* [[Ultra]]
* [[Bletchley Park]]
* [[Beaumanor Hall]], a stately home used during the Second World War for military intelligence
* [[Joan Clarke]]
* [[Erich Fellgiebel]]
* [[Gisbert Hasenjaeger]]—responsible for Enigma security
* [[Fritz Thiele]]
* [[United States Naval Computing Machine Laboratory]]
* [[Arlington Hall]]
* [[Enigma (disambiguation)|Enigma]] -  disambiguation page

== References ==

=== Notes ===
{{Reflist|30em}}

=== Bibliography ===
{{Refbegin|30em}}
* {{cite book|last=Bauer |first=F. L. |year=2000 |title=Decrypted Secrets |publisher=Springer |edition=2nd |isbn=3-540-66871-3 |url={{google books |plainurl=y |id=E-epCAAAQBAJ}}|ref=harv}}
* {{cite journal |last1=Hamer |first1=David H. |last2=Sullivan |first2=Geoff |last3=Weierud |first3=Frode |date=July 1998 |title=Enigma Variations: An Extended Family of Machines |journal=Cryptologia |volume=XXII |issue=3 |doi=10.1080/0161-119891886885 |publisher=Taylor &amp; Francis |location=Abingdon |url=http://www.math.utoledo.edu/~codenth/Cryptanalysis/crypt_machs/ESIM/enigvar2.PDF |accessdate=18 February 2016 |issn=0161-1194}}
* {{cite book|last=Stripp |first=Alan |title=The Enigma Machine: Its Mechanism and Use |editor-last1=Hinsley |editor-first1=F. H. |editor-last2=Stripp |editor-first2=Alan  |work=Codebreakers: The Inside Story of Bletchley Park |year=1993 |url={{google books |plainurl=y |id=j1MC2d2LPAcC}}|ref=harv}}
* {{cite book |last=Kahn |first=David |authorlink=David Kahn (writer) |year=1991 |title=Seizing the Enigma: The Race to Break the German U-Boats Codes, 1939–1943 |isbn=0-395-42739-8 |url={{google books |plainurl=y |id=j1MC2d2LPAcC}}|ref=harv}}
* {{cite book|last=Kozaczuk |first=Władysław |authorlink=Władysław Kozaczuk |title=Enigma: How the German Machine Cipher Was Broken, and How It Was Read by the Allies in World War Two |editor1-first=Christopher |editor1-last=Kasparek |editor1-link=Christopher Kasparek |location=Frederick, MD |publisher=University Publications of America |year=1984 |isbn=0-89093-547-5 |url={{google books |plainurl=y |id=5hJnAAAAMAAJ}}|ref=harv}}
* {{cite web |last=Kozaczuk |first=Władysław |authorlink=Władysław Kozaczuk |url=http://www.enigmahistory.org/text.html |title=The origins of the Enigma/ULTRA |deadurl=yes |archiveurl=https://web.archive.org/web/20030717071218/http://www.enigmahistory.org/text.html |archivedate=17 July 2003 |df=dmy-all }}
* {{cite journal | last1 = Kruh | first1 = L. | last2 = Deavours | first2 = C. | doi = 10.1080/0161-110291890731 | title = The Commercial Enigma: Beginnings of Machine Cryptography | journal = Cryptologia | volume = 26 | pages = 1–16 | year = 2002 | pmid =  | pmc =|ref=harv }}
* {{cite journal | last1 = Marks | first1 = Philip | last2 = Weierud | first2 = Frode | year = 2000 | title = Recovering the Wiring of Enigma's Umkehrwalze A | url = http://cryptocellar.web.cern.ch/cryptocellar/pubs/ukwa.pdf | journal = Cryptologia | volume = 24 | issue = 1 | pages = 55–66 | doi = 10.1080/0161-110091888781 | deadurl = yes | archiveurl = https://web.archive.org/web/20120213152736/http://cryptocellar.web.cern.ch/cryptocellar/pubs/ukwa.pdf | archivedate = 13 February 2012 | df = dmy-all }}
* {{cite journal |last=Rejewski |first=Marian |author-link=Marian Rejewski |title=An Application of the Theory of Permutations in Breaking the Enigma Cipher |journal=Applicationes mathematicae |volume=16 |issue=4 |year=1980 |url=http://cryptocellar.org/ |issn=1730-6280 |ref=harv}}
* {{cite book|first=Michael |last=Smith|authorlink=Michael Smith (newspaper reporter) |title=Station X: The Codebreakers of Bletchley Park|url={{google books |plainurl=y |id=Wv4mSVDtA-wC}}|year=2000|publisher=Pan|isbn=0-7522-7148-2 |ref=harv}}
* {{cite book |last=Smith |first=Michael |authorlink=Michael Smith (newspaper reporter) |year=2006 |contribution=How it began: Bletchley Park Goes to War |editor-last=Copeland |editor-first=B Jack |editor-link=Jack Copeland |title=Colossus: The Secrets of Bletchley Park's Codebreaking Computers |publication-place=Oxford |url={{google books |plainurl=y |id=e6ocfloTkJ4C}} |publisher=Oxford University Press |isbn=978-0-19-284055-4 |ref=harv}}
* {{cite web |last=Ulbricht |first=Heinz |title=Die Chiffriermaschine Enigma — Trügerische Sicherheit: Ein Beitrag zur Geschichte der Nachrichtendienste |language=German |trans-title=The Enigma Cipher Machine — Deceptive Security: A contribution to the history of intelligence services |series=PhD Thesis |year=2005 |url=http://opus.tu-bs.de/opus/volltexte/2005/705/pdf/enigmadiss.pdf |ref=harv}}
{{Refend}}

== Further reading ==
{{Refbegin|30em}}
* {{cite book|first=Richard James |last=Aldrich|title=GCHQ: The Uncensored Story of Britain's Most Secret Intelligence Agency|url={{google books |plainurl=y |id=4I2PmCtrHOgC}}|year=2010|publisher=HarperPress|isbn=978-0-00-727847-3}}
* {{cite book|first=Gustave |last=Bertrand|title=Enigma: ou, La plus grande énigme de la guerre 1939–1945|url={{google books |plainurl=y |id=o2UNAAAAIAAJ}}|year=1973|publisher=Plon}}
* {{cite book|first=Peter |last=Calvocoressi|authorlink=Peter Calvocoressi |title=Top Secret Ultra|url={{google books |plainurl=y |id=qxiHPwAACAAJ |page=98}} |pp=98–103|year=2001|publisher=M &amp; M Baldwin|isbn=978-0-947712-41-9}}
* {{cite web |last=Grime |first=James |title=Enigma – 158,962,555,217,826,360,000 |url=http://www.numberphile.com/videos/enigma.html |work=Numberphile |publisher=[[Brady Haran]]}}
* {{cite web |last=Grime |first=James |title=The Enigma Flaw |url=http://www.numberphile.com/videos/enigma_flaw.html |work=Numberphile |publisher=[[Brady Haran]]}}
* Heath, Nick, [http://www.techrepublic.com/article/the-women-who-helped-crack-nazi-codes-at-bletchley-park Hacking the Nazis: The secret story of the women who broke Hitler's codes] TechRepublic, 27 March 2015
* {{cite book|first=John |last=Herivel|authorlink=John Herivel|title=Herivelismus: And the German Military Enigma|url={{google books |plainurl=y |id=voM0QwAACAAJ}}|year=2008|publisher=M &amp; M Baldwin}}
* {{Citation |last = Huttenhain |first = Orr |last2 = Fricke |title = OKW/Chi Cryptanalytic Research on Enigma, Hagelin and Cipher Teleprinter Messages |publisher = TICOM |year = 1945 |url = https://drive.google.com/file/d/0B7sNVKDp-yiJOWYxZWFmNDgtODUyMS00Y2FiLThkNWItYmQ5N2JmMzEyMzIz/view }}
* {{cite book|first=John |last=Keen|authorlink=John Keen (author)|title=Harold 'Doc' Keen and the Bletchley Park Bombe|url={{google books |plainurl=y |id=tfq7MQEACAAJ}}|date=1 August 2012|publisher=M &amp; M Baldwin|isbn=978-0-947712-48-8}}
* {{cite book|first=Christine |last=Large|title=Hijacking Enigma: The Insider's Tale|url={{google books |plainurl=y |id=jAkiAQAAIAAJ}}|date=6 October 2003|publisher=Wiley|isbn=978-0-470-86346-6}}
* Marks, Philip. "Umkehrwalze D: Enigma's Rewirable Reflector—Part I", ''Cryptologia'' 25(2), April 2001, pp.&amp;nbsp;101–141.
* Marks, Philip. "Umkehrwalze D: Enigma's Rewirable Reflector—Part II", ''Cryptologia'' 25(3), July 2001, pp.&amp;nbsp;177–212.
* Marks, Philip. "Umkehrwalze D: Enigma's Rewirable Reflector—Part III", ''Cryptologia'' 25(4), October 2001, pp.&amp;nbsp;296–310.
* {{cite book |last=Paillole |first=Paul |title=Notre espion chez Hitler |trans-title=Our Spy with Hitler |language=French |publisher=Robert Laffont |year=1985}}
* {{cite book |title=Inside ENIGMA |author=Perera, Tom |year=2010 |isbn=978-1-905086-64-1 | publisher=[[Radio Society of Great Britain]] |location=Bedford, UK}}
* Perera, Tom. ''The Story of the ENIGMA: History, Technology and Deciphering'', 2nd Edition, CD-ROM, 2004, Artifax Books, {{ISBN|1-890024-06-6}} [http://w1tp.com/enigma/ecds.htm sample pages]
* Rebecca Ratcliffe: Searching for Security. The German Investigations into Enigma's security. In: Intelligence and National Security 14 (1999) Issue 1 (Special Issue) S. 146–167.
* {{cite book |first=Rebecca |last=Ratcliffe |title=How Statistics led the Germans to believe Enigma Secure and Why They Were Wrong: neglecting the practical Mathematics of Cipher machines  |editor-first=Brian J. |editor-last=Winkel|work=The German Enigma Cipher Machine: Beginnings, Success, and Ultimate Failure|url={{google books |plainurl=y |id=1eVOAAAAMAAJ}}|date=1 January 2005|publisher=Artech House|isbn=978-1-58053-996-8}}
* [[Marian Rejewski|Rejewski, Marian]]. [http://chc60.fgcu.edu/images/articles/rejewski.pdf] ''How Polish Mathematicians Deciphered the Enigma", ''Annals of the History of Computing 3'', 1981. This article is regarded by [[Andrew Hodges]], Alan Turing's biographer, as "the definitive account" (see Hodges' ''[[Alan Turing: The Enigma]]'', Walker and Company, 2000 paperback edition, p.&amp;nbsp;548, footnote 4.5).
* {{cite journal |last=Quirantes |first=Arturo |title=Model Z: A Numbers-Only Enigma Version |journal=Cryptologia |volume=28| issue=2 |date=April 2004 |doi=10.1080/0161-110491892845 |pages=153–156}}
* {{cite book |first=Hugh |last=Sebag-Montefiore |authorlink=Hugh Sebag-Montefiore |title=Enigma: The Battle For The Code |year=2011 |publisher=Orion |isbn=978-1-78022-123-6}}
* Ulbricht, Heinz. Enigma Uhr, ''Cryptologia'', 23(3), April 1999, pp.&amp;nbsp;194–205.
* {{cite book|first=Gordon |last=Welchman |authorlink=Gordon Welchman |title=The Hut Six Story: Breaking the Enigma Codes  |year=1982 |publisher=McGraw-Hill |isbn=978-0-07-069180-3}}
* {{cite book |first=F. W. |last=Winterbotham |title=The Ultra Secret |year=1999 |publisher=Weidenfeld &amp; Nicolson |isbn=978-0-297-64405-7}}
{{Refend}}

== External links ==
&lt;!-- PLEASE BE CAUTIOUS IN ADDING MORE LINKS TO THIS ARTICLE.--&gt;
{{Commons category|Enigma machine}}
* [https://www.bbc.com/news/magazine-28167071 Gordon Corera, Poland's overlooked Enigma codebreakers, BBC News Magazine, 4 July 2014]
* [http://enigmadisplays.blogspot.ca/ Long-running list of places to visit a unit in the real world]
* [http://www.bletchleypark.org.uk/ Bletchley Park National Code Centre Home of the British codebreakers during the Second World War]
* [http://www.cryptomuseum.com/crypto/enigma/ Enigma machines on the Crypto Museum website]
* [http://cnm.open.ac.uk/projects/stationx/enigma/index.html Pictures of a four-rotor naval enigma, including Flash (SWF) views of the machine]
* [http://www.cgisecurity.net/2008/04/getting-to-see-an-enigma-machine-at-rsa-2008-.html Enigma Pictures and Demonstration by NSA Employee at RSA]
* {{dmoz|Science/Math/Applications/Communication_Theory/Cryptography/Historical/}}
* [http://www.wwiiarchives.net/servlet/action/document/index/97/0 Kenngruppenheft]
* [http://www.enigma-maschine.de/en/ Process of building an Enigma M4 replica]
* [http://www.enigma.hoerenberg.com/ Breaking German Navy Ciphers]
* [http://russells.freeshell.org/enigma/ An online Enigma Machine simulator]
* [http://enigmaco.de/enigma/enigma.swf Enigma simulation]
* [http://people.physik.hu-berlin.de/~palloks/js/enigma/enigma-u_v20_en.html Universal Enigma simulator]
* [http://www.public-enigma.com/ Public Enigma Simulator – Java simulator, including 13 Enigma machine variations]
* [https://cryptii.com/pipes/enigma-machine Cryptii – Online modular playground, including 13 Enigma machine variations]

{{Clear}}
{{cryptography navbox | classical}}
{{Cryptography navbox|machines}}

{{Authority control}}

[[Category:Products introduced in 1918]]
[[Category:Articles with inconsistent citation formats]]
[[Category:Broken stream ciphers]]
[[Category:Cryptographic hardware]]
[[Category:Cryptography]]
[[Category:Rotor machines]]
[[Category:Signals intelligence of World War II]]
[[Category:World War II military equipment of Germany]]
[[Category:Encryption devices]]
[[Category:Enigma machine]]
[[Category:Military communications of Germany]]</text>
      <sha1>brk7rqp4eu5jihulzuxt4o93qmtd545</sha1>
    </revision>
  </page>
  <page>
    <title>Erdős–Moser equation</title>
    <ns>0</ns>
    <id>53551948</id>
    <revision>
      <id>866258226</id>
      <parentid>849588935</parentid>
      <timestamp>2018-10-29T08:01:58Z</timestamp>
      <contributor>
        <username>LucasBrown</username>
        <id>11487766</id>
      </contributor>
      <comment>/* Constraints on solutions */ Minor tweaks.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3915">{{unsolved|mathematics|2=Does the Erdős–Moser equation have solutions other than &lt;math&gt;1^1+2^1=3^1&lt;/math&gt;?}}

In [[number theory]], the '''Erdős–Moser equation''' is

:&lt;math&gt;1^k+2^k+\cdots+m^k=(m+1)^k&lt;/math&gt;

where &lt;math&gt;m&lt;/math&gt; and &lt;math&gt;k&lt;/math&gt; are positive [[integers]].  The only known solution is 1&lt;sup&gt;1&lt;/sup&gt; + 2&lt;sup&gt;1&lt;/sup&gt; = 3&lt;sup&gt;1&lt;/sup&gt;, and [[Paul Erdős]] conjectured that no further solutions exist.

== Constraints on solutions ==

[[Leo Moser]] in 1953 proved that 2 divides ''k'' and that there is no other solution with ''m'' &lt; 10&lt;sup&gt;1,000,000&lt;/sup&gt;.

In 1966 it was shown that 6 ≤ ''k'' + 2 &lt; ''m'' &lt; 2''k''.

In 1994 it was shown that [[Least common multiple|lcm]](1,2,...,200) divides ''k'' and that any prime factor of ''m'' + 1 must be [[regular prime|irregular]] and &gt; 10000.

Moser's method was extended in 1999 to show that ''m'' &gt; 1.485 × 10&lt;sup&gt;9,321,155&lt;/sup&gt;.

In 2002 it was shown that all primes between 200 and 1000 must divide ''k''.

In 2009 it was shown that 2''k'' / (2''m'' – 1) must be a [[convergent (continued fraction)|convergent]] of [[Natural logarithm of 2|ln(2)]]; large-scale computation of ln(2) was then used to show that ''m'' &gt; 2.7139 × 10&lt;sup&gt;1,667,658,416&lt;/sup&gt;.

== References ==
&lt;!-- Please remember to include |ref=harv in citations. This article uses the shortened footnotes template {{sfn}}, in conjunction with Harvard referencing {{harv}} or {{harvnb}} templates. These all use the |ref=harv parameter in the {{cite book}} template to create automatic multiple links in the {{reflist}}.  See talk. --&gt;

{{refbegin}} &lt;!--Small font--&gt;
* {{cite journal
 |last=Gallot
 |first=Yves
 |last2=Moree
 |first2=Pieter
 |last3=Zudilin
 |first3=Wadim
 |author-link=Yves Gallot
 |author-link2=Pieter Moree
 |author-link3=Wadim Zudilin
 |year=2010
 |title=The Erdős–Moser Equation 1&lt;sup&gt;''k''&lt;/sup&gt; + 2&lt;sup&gt;''k''&lt;/sup&gt; + ... + (''m'' – 1)&lt;sup&gt;''k''&lt;/sup&gt; = ''m''&lt;sup&gt;''k''&lt;/sup&gt; Revisited Using Continued Fractions
 |journal=Mathematics of Computation
 |volume=80
 |pages=1221&amp;ndash;1237
 |language=English
 |ref=harv
 |url=https://www.ams.org/journals/mcom/2011-80-274/S0025-5718-2010-02439-1
 |accessdate=2017-03-20}}
* {{cite journal
 |last=Moser
 |first=Leo
 |author-link=Leo Moser
 |year=1953
 |title=On the Diophantine Equation 1&lt;sup&gt;''k''&lt;/sup&gt; + 2&lt;sup&gt;''k''&lt;/sup&gt; + ... + (''m'' – 1)&lt;sup&gt;''k''&lt;/sup&gt; = ''m''&lt;sup&gt;''k''&lt;/sup&gt;
 |journal=Scripta Math.
 |volume=19
 |pages=84&amp;ndash;88
 |language=English
 |ref=harv}}
* {{cite journal
 |last=Butske
 |first=W.
 |last2=Jaje
 |first2=L.M.
 |last3=Mayernik
 |first3=D.R.
 |year=1999
 |title=The Equation &amp;Sigma;&lt;sub&gt;''p''&amp;#124;''N''&lt;/sub&gt; 1/''p'' + 1/''N'' = 1, Pseudoperfect Numbers, and Partially Weighted Graphs
 |journal=Math. Comp.
 |volume=69
 |pages=407&amp;ndash;420
 |language=English
 |url=https://www.ams.org/journals/mcom/2000-69-229/S0025-5718-99-01088-1/
 |accessdate=2017-03-20
 |ref=harv}}
* {{cite journal
 |last=Krzysztofek
 |first=B.
 |year=1966
 |title=The Equation 1&lt;sup&gt;''n''&lt;/sup&gt; + ... + ''m''&lt;sup&gt;''n''&lt;/sup&gt; = (''m'' + 1)&lt;sup&gt;''n''&lt;/sup&gt;
 |journal=Wyz. Szkol. Ped. w. Katowicech-Zeszyty Nauk. Sekc. Math.
 |volume=5
 |pages=47&amp;ndash;54
 |language=Polish
 |ref=harv}}
* {{cite journal
 |last=Moree
 |first=Pieter
 |last2=te Riele
 |first2=Herman
 |last3=Urbanowicz
 |first3=J.
 |author-link=Pieter Moree
 |author-link2=Herman te Riele
 |year=1994
 |title=Divisibility Properties of Integers ''x'', ''k'' Satisfying 1&lt;sup&gt;''k''&lt;/sup&gt; + 2&lt;sup&gt;''k''&lt;/sup&gt; + ... + (''x'' – 1)&lt;sup&gt;''k''&lt;/sup&gt; = ''x''&lt;sup&gt;''k''&lt;/sup&gt;
 |journal=Math. Comp.
 |volume=63
 |pages=799&amp;ndash;815
 |language=English
 |url=https://www.ams.org/journals/mcom/1994-63-208/S0025-5718-1994-1257577-1/
 |accessdate=2017-03-20
 |ref=harv}}

{{DEFAULTSORT:Erdős-Moser equation}}
[[Category:Number theory]]
[[Category:Diophantine equations]]
[[Category:Paul Erdős]]
[[Category:Unsolved problems in mathematics]]</text>
      <sha1>3pkasfpadi8403e1pkt5ril21ei0khj</sha1>
    </revision>
  </page>
  <page>
    <title>Fractal antenna</title>
    <ns>0</ns>
    <id>57794</id>
    <revision>
      <id>866180195</id>
      <parentid>865974958</parentid>
      <timestamp>2018-10-28T19:59:39Z</timestamp>
      <contributor>
        <username>JCW-CleanerBot</username>
        <id>31737083</id>
      </contributor>
      <minor/>
      <comment>[[User:JCW-CleanerBot#Logic|task]], replaced: Ieee  → IEEE  (2)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="13630">{{Antennas|expanded=types}}
A '''fractal antenna''' is an [[Antenna (radio)|antenna]] that uses a [[fractal]], [[Self-similarity|self-similar]] design to maximize the effective length, or increase the perimeter (on inside sections or the outer structure), of material that can receive or transmit [[electromagnetic radiation]] within a given total surface area or volume.

Such fractal antennas are also referred to as multilevel and [[space filling curves]], but the key aspect lies in their repetition of a motif over two or more scale sizes,&lt;ref name=r1&gt;Nathan Cohen (2002) "Fractal antennas and fractal resonators" {{US Patent|6452553}}&lt;/ref&gt; or "iterations". For this reason, fractal antennas are very compact, multiband or wideband, and have useful applications in cellular telephone and microwave communications.
A fractal antenna's response differs markedly from traditional antenna designs, in that it is capable of operating with good-to-excellent performance at many different frequencies simultaneously.  Normally standard antennas have to be "cut" for the frequency for which they are to be used—and thus the standard antennas only work well at that frequency.

This makes the fractal antenna an excellent choice for wideband and multiband applications. In addition the fractal nature of the antenna shrinks its size, without the use of any components, such as inductors or capacitors.
__TOC__
[[File:6452553 Vicsek Fractal Antenna.png|thumb|right|An example of a fractal antenna: a space-filling curve called a Minkowski Island fractal&lt;ref name=r4&gt;{{cite journal|last1=Cohen|first1=Nathan|title=Fractal antennas Part 1|journal=[[Communication Quarterly]]|date=Summer 1995|pages=7–23|url=https://archive.org/stream/fea_Fractal_Antennas_Part-1/Fractal_Antennas_Part-1_djvu.txt}}&lt;/ref&gt;&lt;ref name="r2"&gt;{{cite web|url=http://classes.yale.edu/fractals/Panorama/ManuFractals/FractalAntennas/FracTenna4.gif|title=FracTenna4.gif|last=|first=|date=|website=|format=GIF|archiveurl=https://web.archive.org/web/20070320175808/http://classes.yale.edu/fractals/Panorama/ManuFractals/FractalAntennas/FracTenna4.gif|archivedate=20 March 2007|deadurl=yes|accessdate=2007-02-13|df=dmy-all}}&lt;/ref&gt;]]

== Log periodic antennas and fractals ==
The first fractal "antennas" were, in fact, fractal "arrays",  with fractal arrangements of antenna elements, and not recognized initially as having self-similarity as their attribute. [[Log-periodic antenna]]s are arrays, around since the 1950s (invented by Isbell and DuHamel), that are such fractal arrays. They are a common form used in TV antennas, and are arrow-head in shape.

== Fractal element antennas and performance ==
[[File:Antenna flat panel.png|thumb|A [[planar array]] fractal antenna]]

Antenna elements (as opposed to antenna arrays) made from self-similar shapes were first created by Nathan Cohen&lt;ref&gt;{{cite web|url=http://www.fractenna.com/nca_cohen_bio.html|title=Fractal Antenna Systems, Inc|author=|date=|website=www.fractenna.com|accessdate=22 April 2018}}&lt;/ref&gt; then a professor at [[Boston University]], starting in 1988.

Cohen's efforts with a variety of fractal antenna designs were first published in 1995.&lt;ref name="Cohen-1995"&gt;{{cite journal |author=Cohen, N. |title=Fractal Antennas |journal=Communications Quarterly |pages=9 |date=Summer 1995}}&lt;/ref&gt; Cohen's publication marked the inaugural scientific publication on fractal antennas. Most varieties of fractal antennas are so-called "fractal element antennas".

Many fractal element antennas use the fractal structure as a virtual combination of [[capacitors]] and [[inductors]]. This makes the antenna so that it has many different resonances which can be chosen and adjusted by choosing the proper fractal design. This complexity arises because the current on the structure has a complex arrangement caused by the inductance and self capacitance. In general, although their effective electrical length is longer, the fractal element antennas are themselves physically smaller, again due to this reactive loading.

Thus fractal element antennas are shrunken compared to conventional designs, and do not need  additional components, assuming the structure happens to have the desired resonant input impedance. In general the [[fractal dimension]] of a fractal antenna is a poor predictor of its performance and application.  Not all fractal antennas work well for a given application or set of applications. Computer search methods and antenna simulations are commonly used to identify which fractal antenna designs best meet the need of the application.

Although the first validation of the technology was published as early as 1995,&lt;ref name="Cohen-1995"/&gt; recent independent studies show advantages of the fractal element technology in real-life applications, such as RFID&lt;ref&gt;{{cite conference|last=|first=|date=26–28 March 2007|title=Read Range Performance Comparison of Compact Reader Antennas for a Handheld UHF RFID Reader|url=http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=4143512|conference=|volume=|pages=63–70|doi=10.1109/RFID.2007.346151|isbn=1-4244-1013-4|via=|vauthors=Ukkonen L, Sydanheimo L, Kivikoski M|booktitle=IEEE International Conference on RFID, 2007|laysummary=http://www.rfidjournal.com/article/articleview/3334/1/1/}}&lt;/ref&gt; and cell phones.&lt;ref&gt;{{cite journal |author1=N. A. Saidatul |author2=A. A. H. Azremi |author3=R. B. Ahmad |author4=P. J. Soh |author5=F. Malek |title=Multiband Fractal Planar Inverted F Antenna (F-Pifa) for Mobile Phone Application |journal=Progress in Electromagnetics Research B |volume=14 |pages=127–148 |year=2009 |doi=10.2528/PIERB0903080 |url=http://ceta.mit.edu/pierb/pier.php?paper=09030802 |deadurl=yes |archiveurl=https://web.archive.org/web/20100719185220/http://ceta.mit.edu/pierb/pier.php?paper=09030802 |archivedate=19 July 2010 |df=dmy-all |doi-broken-date=2018-09-14 }}&lt;/ref&gt;

One researcher has stated to the contrary that fractals do not perform any better than "meandering line" (essentially, fractals with only one size scale, repeating in translation) antennas.  Specifically quoting researcher Steven Best: "Differing antenna geometries, fractal or otherwise, do not, in a manner different than other geometries, uniquely determine the EM behavior of the antenna."&lt;ref&gt;{{cite journal|date=|year=2003|title=A Comparison of the Resonant Properties of Small Space-Filling Fractal Antennas|url=|journal=IEEE Antennas and Wireless Propagation Letters|volume=2|issue=1|pages=197–200|doi=10.1109/1-awp.2003.819680|via=|last1=Best|first1=S.R.}}&lt;/ref&gt;&lt;ref&gt;{{cite journal|date=|year=2002|title=On the Resonant Properties of the Koch Fractal and other Wire Monopole Antennas|url=|journal=IEEE Antennas and Wireless Propagation Letters|volume=1|issue=1|pages=74–76|citeseerx=10.1.1.205.6172|doi=10.1109/lawp.2002.802550|via=|last1=Best|first1=S.R.}}&lt;/ref&gt; However, in the last few years, dozens of studies have shown superior performance with fractals,&lt;ref&gt;{{cite journal |last=Singh |first=Ashutosh K. |author2=Kabeer, Reneez A.|author3= Ali, Z.|author4= Singh, V. K.|author5= Shukla, M. |title=Performance analysis of first iteration koch curve fractal log periodic antenna of varying flare angles |journal=Central European Journal of Engineering|date=16 November 2012 |volume=3 |issue=1 |pages=51–7 |doi=10.2478/s13531-012-0040-2}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://www.fractenna.com/FractalAdvantage.html|title=Fractal Antenna: What's New|author=|date=|website=www.fractenna.com|accessdate=22 April 2018}}&lt;/ref&gt; and the below reference of frequency invariance conclusively demonstrates that geometry is a key aspect in uniquely determining  the EM behavior of frequency independent antennas.

== Fractal antennas, frequency invariance, and Maxwell's equations ==
A different and also useful attribute of some fractal element antennas is their self-scaling aspect. In 1957, V.H. Rumsey&lt;ref&gt;Rumsey, V.H. "Frequency Independent Antennas", IRE International Convention Record, Vol. 5, Part 1, pp.114-118, 1957&lt;/ref&gt;  presented results that angle-defined scaling was one of the underlying requirements to make antennas "invariant" (have same radiation properties) at a number, or range of, frequencies.  Work by Y. Mushiake in Japan starting in 1948&lt;ref&gt;{{Cite journal|url=http://www.sm.rim.or.jp/~ymushiak/sub.docu.1.htm##%% |first=Y. |last=Mushiake |title=Origination of self-complementary structure and discovery of its constant-impedance property |journal=J. IEE Japan |volume=69 |issue=3 |page=88 |date=March 1949 |language=Japanese}}&lt;/ref&gt; demonstrated similar results of frequency independent antennas having [[self-complementary antenna|self-complementarity.]]

It was believed that antennas had to be defined by angles for this to be true, but in 1999 it was discovered&lt;ref&gt;Hohlfeld R, Cohen N (1999). "Self-similarity and the geometric requirements for frequency independence in Antennae". Fractals 7 (1): 79–84. doi:10.1142/S0218348X99000098&lt;/ref&gt; that ''[[self-similarity]] was one of the underlying requirements to make antennas frequency and bandwidth invariant''. In other words, the self-similar aspect was the underlying requirement, along with origin symmetry, for frequency 'independence'. Angle-defined antennas are self-similar, but other self-similar antennas are frequency independent although not angle-defined.

This analysis, based on Maxwell's equations, showed fractal antennas offer a closed-form and unique insight into a key aspect of electromagnetic phenomena. To wit: the invariance property of Maxwell's equations. This is now known as the HCR Principle. Mushiake's earlier work on self complementarity was shown to be limited to impedance smoothness, as expected from Babinet's Principle, but not frequency invariance.

== Other uses ==

In addition to their use as antennas, fractals have also found application in other antenna system components including loads, [[Counterpoise (ground system)|counterpoises]], and ground planes. Confusion by those who claim "grain of rice"-sized fractal antennas arises, because such fractal structures serve the purpose of loads and counterpoises, rather than bona fide antennas.

Fractal inductors and fractal tuned circuits (fractal resonators) were also discovered and invented simultaneously with fractal element antennas.&lt;ref name=r1/&gt;&lt;ref&gt;Nathan Cohen (2007) "Fractal antennas and fractal resonators" {{US Patent|7256751}}&lt;/ref&gt; An emerging example of such is in [[metamaterial]]s. A recent invention demonstrates using close-packed fractal resonators to make the first wideband [[metamaterial]] invisibility cloak at microwave frequencies (US patent 8,253,639). Peer reviewed publication may be found in the scholarly journal 'FRACTALS'.&lt;ref&gt;Cohen,N.,"Body Sized Wide-Band High Fidelity Invisibility Cloak", FRACTALS, 20,227-232 (2012)&lt;/ref&gt;

Fractal filters (a type of tuned circuit) are another example where the superiority of the fractal approach for smaller size and better  rejection has been proven.&lt;ref&gt;{{cite book |author1=Lancaster, M. |author2=Hong, Jia-Sheng |title=Microstrip filters for RF/microwave applications |publisher=Wiley |location=New York |year=2001 |pages=410–1 |isbn=978-0-471-38877-7|url=https://books.google.com/books?id=vj0hz1KUAXoC&amp;pg=PA410}}&lt;/ref&gt;&lt;ref&gt;{{Cite journal |author1=Pourahmadazar, J. |author2=Ghobadi, C. |author3=Nourinia, J. |author4=Shirzad, H. |title=Mutiband Ring Fractal Monopole Antennas For Mobile Devices |journal=IEEE Antennas and Wireless Propagation Letters |volume=9 |year=2010 |pages=863–866 |doi=10.1109/LAWP.2010.2071372 |url=http://ieeexplore.ieee.org/Xplore/login.jsp?url=http%3A%2F%2Fieeexplore.ieee.org%2Fiel5%2F7727%2F4357943%2F05560718.pdf%3Farnumber%3D5560718&amp;authDecision=-203}}&lt;/ref&gt;&lt;ref&gt;{{Cite journal |author1=Pourahmadazar, J. |author2=Ghobadi, C. |author3=Nourinia, J. |title=Novel Modified Pythagorean Tree Fractal Monopole Antennas for UWB Applications|journal=IEEE Antennas and Wireless Propagation Letters |volume=10 |year=2011 |pages=484–487|doi=10.1109/LAWP.2011.2154354 |url=http://ieeexplore.ieee.org/search/freesrchabstract.jsp?tp=&amp;arnumber=5766703&amp;queryText%3Dpourahmadazar%26openedRefinements%3D*%26searchField%3DSearch+All}}&lt;/ref&gt;

As fractals can be used as counterpoises, loads, ground planes, and filters, all parts that can be integrated with antennas, they are considered parts of some antenna ''systems'' and thus are discussed in the context of fractal antennas.

Owing to the fact that [[DNA]] is a self-similar, electrically conducting molecule, it is hypothesized that DNA acts as a fractal antenna in the presence an external electromagnetic field.&lt;ref&gt;{{Cite journal|last=Blank|first=Martin|last2=Goodman|first2=Reba|date=April 2011|title=DNA is a fractal antenna in electromagnetic fields|journal=International Journal of Radiation Biology|volume=87|issue=4|pages=409–415|doi=10.3109/09553002.2011.538130|issn=1362-3095|pmid=21457072}}&lt;/ref&gt;

== See also ==

* [[Waveguide (electromagnetism)]]

== References ==

{{reflist|30em}}

== External links ==
* [http://www.ruckman.net/home/news-archives#FEATURED How to make a fractal antenna for HDTV or DTV]
* [http://journals.cambridge.org/action/displayAbstract?fromPage=online&amp;aid=9547792&amp;fulltextType=RA&amp;fileId=S175907871500001X  CPW-fed H-tree fractal antenna for WLAN, WIMAX, RFID, C-band, HiperLAN, and UWB applications]
* [https://www.youtube.com/watch?v=QWd0nEXFnrE/ Video of a fractal antenna monopole using fractal metamaterials]

{{Antenna Types}}

{{Use dmy dates|date=February 2011}}

[[Category:Radio frequency antenna types]]
[[Category:Antennas (radio)]]
[[Category:Fractals]]</text>
      <sha1>25k4hpiz0u59c8xnm68lfzv0d9wl9kp</sha1>
    </revision>
  </page>
  <page>
    <title>Galley division</title>
    <ns>0</ns>
    <id>1726089</id>
    <revision>
      <id>861617190</id>
      <parentid>861615423</parentid>
      <timestamp>2018-09-28T18:48:22Z</timestamp>
      <contributor>
        <username>William Avery</username>
        <id>1398</id>
      </contributor>
      <comment>English; link</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="6608">{{Expert-subject|Mathematics|date=November 2008}}

&lt;!-- Unsourced image removed: [[Image:Galley_Method1.png|thumb|270px|16th century example of galley division]] --&gt;

In [[arithmetic]], the '''galley method''', also known as the '''batello''' or the '''scratch method''', was the most widely used method of [[division (mathematics)|division]] in use prior to 1600.  The names [[galea (boat)|galea]] and batello refer to a boat which the outline of the work was thought to resemble.

An earlier version of this method was used as early as 825 by [[Al-Khwarizmi]].  The galley method is thought to be of [[Arab]] origin and is most effective when used on a sand [[abacus]]. However, [[Lam Lay Yong]]'s research pointed out that the galley method of division originated in the 1st century AD in ancient China.&lt;ref&gt; {{cite journal | title = On the Chinese Origin of the Galley Method of Arithmetical Division | journal = The British Journal for the History of Science | date = June 1966 | first = Lam | last = Lay-Yong | volume = 3 | issue = 1 | pages = 66–69 | url = http://journals.cambridge.org/abstract_S0007087400000200 | accessdate = 2012-12-29 | doi=10.1017/s0007087400000200}}&lt;/ref&gt;

The galley method writes fewer figures than [[long division]], and results in interesting shapes and pictures as it expands both above and below the initial lines.  It was the preferred method of division for seventeen centuries, far longer than long division's four centuries.

==How it works==
[[Image:Galley Method3.png|thumb|right|280px|65284/594 using galley division]]
[[Image:Galley Method4.png|thumb| right |180px|The completed problem]]
[[Image:Galley Method2.png|thumb|right|110px|65284/594 using "modern" long division for comparison]]
Set up the problem by writing the dividend and then a bar. The quotient will be written after the bar. Steps:
:(a1) Write the divisor below the dividend. Align the divisor so that its leftmost digit is directly below the dividend's leftmost digit (if the divisor is 594, for instance, it would be written an additional space to the right, so that the "5" would appear below the&amp;nbsp;"6", as shown in the illustration). 
:(a2) Dividing 652 by 594 yields the quotient 1 which is written to the right of the bar.
Now multiply each digit of the divisor by the new digit of the quotient and subtract that from the left-hand segment of the dividend. Where the subtrahend and the dividend segment differ, cross out the dividend digit and write if necessary the subtrahend digit and next vertical empty space. Cross out the divisor digit used.
:(b) Compute 6&amp;nbsp;&amp;minus;&amp;nbsp;5&amp;times;1&amp;nbsp;=&amp;nbsp;1. Cross out the 6 of the dividend and above it write a 1. Cross out the 5 of the divisor. The resulting dividend is now read off as the topmost un-crossed digits: 15284.
:(c) Using the left-hand segment of the resulting dividend we get 15&amp;nbsp;&amp;minus;&amp;nbsp;9&amp;times;1&amp;nbsp;=&amp;nbsp;6. Cross out the 1 and 5 and write 6 above. Cross out the 9. The resulting dividend is 6284.
:(d) Compute 62&amp;nbsp;&amp;minus;&amp;nbsp;4&amp;times;1&amp;nbsp;=&amp;nbsp;58. Cross out the 6 and 2 and write 5 and 8 above. Cross out the 4. The resulting dividend is 5884.
:(e) Write the divisor one step to the right of where it was originally written using empty spaces below existing crossed out digits. 
:(f1) Dividing 588 by 594 yields 0 which is written as the new digit of the quotient. 
:(f2) As 0 times any digit of the divisor is 0, the dividend will remain unchanged. We therefore can cross out all the digits of the divisor.
:(f3) We write the divisor again one space to the right
:(omitted) Dividing 5884 by 594 yields 9 which is written as the new digit of the quotient. 58&amp;nbsp;&amp;minus;&amp;nbsp;5&amp;times;9&amp;nbsp;=&amp;nbsp;13 so cross out the 5 and 8 and above them write 1 and 3. Cross out the 5 of the divisor. The resulting divident is now 1384. 138&amp;nbsp;&amp;minus;&amp;nbsp;9&amp;times;9&amp;nbsp;=&amp;nbsp;57. Cross out 1,3, and 8 of the dividend and write 5 and 7 above. Cross out the 9 of the divisor. The resulting dividend is 574. 574&amp;nbsp;&amp;minus;&amp;nbsp;4&amp;times;9&amp;nbsp;=&amp;nbsp;538. Cross out the 7 and 4 of the dividend and write 3 and 8 above them. Cross out the 4 of the divisor. The resulting dividend is 538. The process is done, the quotient is 109 and the remainder is 538.

===Other versions===

The above is called the cross-out version and is the most common. An erasure version exists for situations where erasure is acceptable and there is not need to keep track of the intermediate steps. This is the method used with a sand abacus. Finally, there is a printers' method that uses neither erasure or crossouts. Only the top digit in each column of the dividend is active with a zero used to denote an entirely inactive column.
{| border="0" cellpadding="5" cellspacing="5" align="center"
|[[Image:Galley Method erase animated.gif|thumb|left|120px|65284/594 using galley division (erasure version)]]
|[[Image:Galley Method printers final.png|thumb|left|120px|65284/594 using galley division (printers version)]]
|}

==Modern usage==
Galley division was the favorite method of division with arithmeticians through the 18th century and it is thought that it fell out of use due to the lack of cancelled types in printing. It is still taught in the [[Moorish]] schools of [[North Africa]] and other parts of the [[Middle East]].

==Origin==
[[File:Sunzi division.GIF|thumb|left|200px|400AD. Sunzi division algorithm for 6561/9 (animated diagram showing the progression of working)]]
[[File:AL Khwarizmi division.GIF|right|thumb|200px|825AD. Division algorithm described in Al-Khwarizmi's book (animated diagram showing the progression of working)]]

Lam Lay Yong, mathematics professor of [[National University of Singapore]], traced the origin of the galley method to the ''[[Sunzi Suanjing]]'' written about 400AD. The division described by [[Al-Khwarizmi]] in 825 was identical to the Sunzi algorithm for
division.&lt;ref&gt;Lam Lay Yong, The Development of Hindu-Arabic and Traditional Chinese Arithmetic , Chinese Science, 13 1996, 35&amp;ndash;54&lt;/ref&gt;

==References==

{{Reflist}}

==See also==
*[[Group (mathematics)|Group]]
*[[Field (algebra)]]
*[[Division algebra]]
*[[Division ring]]
*[[Long division]]
*[[Vinculum (symbol)|Vinculum]]

== External links ==
* [http://www.pballew.net/arithme1.html#divide  Excellent historical exegenesis of the origins of division, including the Galley Method]
* [http://mathforum.org/library/drmath/view/61872.html Galley or Scratch Method of Division] at The Math Forum

[[Category:Arithmetic]]
[[Category:Division (mathematics)]]
[[Category:History of mathematics]]

[[simple:Division]]</text>
      <sha1>g68hipk879xu070g9vssn8e3fo52368</sha1>
    </revision>
  </page>
  <page>
    <title>Go and mathematics</title>
    <ns>0</ns>
    <id>11422488</id>
    <revision>
      <id>845635147</id>
      <parentid>827203692</parentid>
      <timestamp>2018-06-13T03:40:29Z</timestamp>
      <contributor>
        <username>Dmytro</username>
        <id>23292</id>
      </contributor>
      <comment>/* Without Ko */ clarify</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="16945">{{GoBoardGame}}
The game of [[Go (board game)|Go]] is one of the most popular games in the world. As a result of its elegant and simple rules, the game has long been an inspiration for [[mathematical]] research. [[Shen Kuo]], a Chinese scholar in 11th century, estimated that the number of possible board positions is around 10&lt;sup&gt;172&lt;/sup&gt; in [[Dream Pool Essays]]. In more recent years, research of the game by [[John Horton Conway|John H. Conway]] led to the invention of the [[surreal number]]s and contributed to development of [[combinatorial game theory]] (with Go Infinitesimals&lt;ref&gt;[http://senseis.xmp.net/?GoInfinitesimals Go Infinitesimals]&lt;/ref&gt; being a specific example of its use in Go).

==Computational complexity==

Generalized Go is played on ''n x n'' boards, and the [[Complexity class|computational complexity]] of determining the winner in a given position of generalized Go depends crucially on the [[ko rule]]s.

Go is “almost” in [[PSPACE]], since in normal play, moves are not reversible, and it is only through capture that there is the possibility of the repeating patterns necessary for a harder complexity.

===Without Ko===

Without ko, Go is [[PSPACE-hard]].&lt;ref name="sipser1980"&gt;{{cite journal|last1=Lichtenstein|first1=David|last2=Sipser|first2=Michael|title=Go Is Polynomial-Space Hard|journal=Journal of the ACM|date=April 1980|volume=27|issue=2|pages=393–401|url=http://webdocs.cs.ualberta.ca/~games/go/seminar/2003/030331/p393-lichtenstein.pdf|doi=10.1145/322186.322201}}&lt;/ref&gt; This is proved by reducing [[True Quantified Boolean Formula#PSPACE-completeness|True Quantified Boolean Formula]], which is known to be PSPACE-complete, to [[generalized geography]], to planar generalized geography, to [[Generalized geography#Planar bipartite graph with maximum degree 3|planar generalized geography with maximum degree 3]], finally to Go positions.

Go with superko is not known to be in PSPACE. Though actual games seem never to last longer than &lt;math&gt;n^2&lt;/math&gt; moves, in general it's not known if there were a polynomial bound on the length of Go games. If there were, Go would be PSPACE-complete. As it currently stands, it might be PSPACE-complete, EXPTIME-complete, or even EXPSPACE-complete.

===Japanese ko rule===

Japanese ko rules state that only the basic ko, that is, a move that reverts the board to the situation one move previously, is forbidden. Longer repetitive situations are allowed, thus potentially allowing a game to loop forever, such as the triple ko, where there are three kos at the same time, allowing a cycle of 12 moves.

With Japanese ko rules, Go is [[EXPTIME]]-complete.&lt;ref name="robson1983"&gt;{{cite journal|last1=Robson|first1=John|title=The complexity of Go|journal=Proceedings of the IFIP 9th World Computer Congress on Information Processing|date=1983|pages=413–417}}&lt;/ref&gt;

===Superko rule===

The [[superko rule]] (also called the positional superko rule) states that a repetition of any board position that has previously occurred is forbidden. This is the ko rule used in most Chinese and US rulesets.

It is an open problem what the complexity class of Go is under superko rule. Though Go with Japanese ko rule is EXPTIME-complete, both the lower and the upper bounds of Robson’s EXPTIME-completeness proof&lt;ref name="robson1983" /&gt; break when the superko rule is added.

It is known that it is at least PSPACE-hard, since the proof in&lt;ref name="sipser1980" /&gt; of the PSPACE-hardness of Go does not rely on the ko rule, or lack of the ko rule. It is also known that Go is in EXPSPACE.&lt;ref name="robson1984"&gt;{{cite journal|last1=Robson|first1=J|title=Combinatorial games with exponential space complete decision problems|journal=Proceedings of the Mathematical Foundations of Computer Science|date=1984|pages=498–506|doi=10.1007/BFb0030333}}&lt;/ref&gt;

Robson&lt;ref name="robson1984" /&gt; showed that if the superko rule, that is, “no previous position may ever be recreated”, is added to certain two-player games that are EXPTIME-complete, then the new games would be EXPSPACE-complete. Intuitively, it's because it requires an exponential amount of space even to determine the legal moves from a position, because the game history leading up to a position could be exponentially long.

As a result, superko variants (moves that repeat a previous board position are not allowed) of generalized [[chess]] and [[checkers]] are EXPSPACE-complete, since generalized chess&lt;ref name="Fraenkel1981"&gt;{{cite journal| author = [[Aviezri Fraenkel]] and D. Lichtenstein| title = Computing a perfect strategy for n&amp;times;n chess requires time exponential in n| journal = J. Comb. Th. A| issue = 31| year = 1981| pages = 199–214|doi=10.1016/0097-3165(81)90016-9}}&lt;/ref&gt; and checkers&lt;ref name="robson1984checkers"&gt;{{cite journal| author = J. M. Robson| title = N by N checkers is Exptime complete| journal = SIAM Journal on Computing| volume = 13| issue = 2| pages = 252–267| year = 1984| doi = 10.1137/0213018}}&lt;/ref&gt; are EXPTIME-complete. However, this result does not apply to Go.&lt;ref name="robson1984" /&gt;

===Complexity of certain Go configurations===

A Go endgame begins when the board is divided into areas that are isolated from all other local areas by living stones, such that each local area has a polynomial size canonical game tree. In the language of [[combinatorial game theory]], it happens when a Go game decomposes into a sum of subgames with polynomial size canonical game trees.

With that definition, Go endgames are PSPACE-hard.&lt;ref&gt;{{cite journal|last1=Wolfe|first1=David|editor1-last=Nowakowski|editor1-first=Richard J.|title=Go endgames are PSPACE-hard|journal=More Games of No Chance, Mathematical Sciences Research Institute Publications 42|date=2002|pages=125–136|url=http://library.msri.org/books/Book42/files/wolfe.pdf|publisher=Cambridge University Press}}&lt;/ref&gt;

This is proven by converting the [[True quantified Boolean formula|Quantified Boolean Formula]] problem, which is PSPACE-complete, into a sum of small (with polynomial size canonical game trees) Go subgames. Note that the paper does not prove that Go endgames are in PSPACE, so they might not be PSPACE-complete.

Determining which side wins a [http://senseis.xmp.net/?ladder ladder] capturing race is PSPACE-complete, whether Japanese ko rule or superko rule is in place.&lt;ref&gt;{{cite journal|last1=Crâşmaru|first1=Marcel|last2=Tromp|first2=John|author-link2=John Tromp|title=Ladders are PSPACE-Complete|journal=Computers and Games, volume 2063 of Lecture Notes in Computer Science|date=2000|doi=10.1007/3-540-45579-5_16|publisher=Springer}}&lt;/ref&gt; This is proven by simulating QBF, known to be PSPACE-complete, with ladders that bounce around the board like light beams.

==Legal positions==
Since each location on the board can be either empty, black, or white, there are a total of 3&lt;sup&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/sup&gt; possible board positions on a square board with length n; however only part of them are legal. [[John Tromp|Tromp]] and Farnebäck derived a recursive formula for legal positions &lt;math&gt;L(m,n)&lt;/math&gt; of a rectangle board with length m and n.&lt;ref name="Tromp and Farnebäck 2007"&gt;{{citation | last1= Tromp | first1 = J |author-link1=John Tromp| last2 = Farnebäck | first2 = G |year = 2007 | title =Combinatorics of Go | publisher = Springer, Berlin, Heidelberg | isbn = 978-3-540-75537-1 |doi=10.1007/978-3-540-75538-8_8 }}&lt;/ref&gt; The exact number of &lt;math&gt;L(19,19)&lt;/math&gt; is obtained in 2016&lt;ref&gt;https://tromp.github.io/go/legal.html 208 168 199 381 979 984 699 478 633 344 862 770 286 522 453 884 530 548 425 639 456 820 927 419 612 738 015 378 525 648 451 698 519 643 907 259 916 015 628 128 546 089 888 314 427 129 715 319 317 557 736 620 397 247 064 840 935&lt;/ref&gt;. They also find an asymptotic formula &lt;math&gt;L\approx AB^{m+n}C^{mn}&lt;/math&gt;, where &lt;math&gt;A\approx 0.8506399258457145&lt;/math&gt;, &lt;math&gt;B\approx 0.96553505933837387&lt;/math&gt; and &lt;math&gt;C\approx 2.975734192043357249381&lt;/math&gt;. It has been estimated that the observable universe contains around 10&lt;sup&gt;80&lt;/sup&gt; atoms, far fewer than the number of possible legal positions of regular board size (m=n=19). As the board gets larger, the percentage of the positions that are legal decreases.

{| class="wikitable"
!Board size n&amp;times;n
!3&lt;sup&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/sup&gt;
!Percent legal
!&lt;math&gt;L&lt;/math&gt; (legal positions) ({{OEIS link|A094777}})&lt;ref&gt;https://tromp.github.io/go/gostate.pdf&lt;/ref&gt;
|-
!1&amp;times;1
|align="right"|3
|align="right"|33.33%
|align="right"|1
|-
!2&amp;times;2
|align="right"|81
|align="right"|70.37%
|align="right"|57
|-
!3&amp;times;3
|align="right"|19,683
|align="right"|64.40%
|align="right"|12,675
|-
!4&amp;times;4
|align="right"|43,046,721
|align="right"|56.49%
|align="right"|24,318,165
|-
!5&amp;times;5
|align="right"|847,288,609,443
|align="right"|48.90%
|align="right"|414,295,148,741
|-
!9&amp;times;9
|align="right"|4.43426488243&amp;times;10&lt;sup&gt;38&lt;/sup&gt;
|align="right"|23.44%
|align="right"|1.03919148791&amp;times;10&lt;sup&gt;38&lt;/sup&gt;
|-
!13&amp;times;13
|align="right"|4.30023359390&amp;times;10&lt;sup&gt;80&lt;/sup&gt;
|align="right"|8.66%
|align="right"|3.72497923077&amp;times;10&lt;sup&gt;79&lt;/sup&gt;
|-
!19&amp;times;19
|align="right"|1.74089650659&amp;times;10&lt;sup&gt;172&lt;/sup&gt;
|align="right"|1.20%
|align="right"|2.08168199382&amp;times;10&lt;sup&gt;170&lt;/sup&gt;
|}

==Game tree complexity==

The [[computer scientist]] [[Victor Allis]] notes that typical games between experts last about 150 moves, with an average of about 250 choices per move, suggesting a [[game-tree complexity]] of 10&lt;sup&gt;360&lt;/sup&gt;.&lt;ref&gt;Allis 1994&lt;/ref&gt; For the number of ''theoretically possible'' games, including games impossible to play in practice, Tromp and Farnebäck give lower and upper bounds of 10&lt;sup&gt;10&lt;sup&gt;48&lt;/sup&gt;&lt;/sup&gt; and 10&lt;sup&gt;10&lt;sup&gt;171&lt;/sup&gt;&lt;/sup&gt; respectively.&lt;ref name="Tromp and Farnebäck 2007"/&gt;
The most commonly quoted number for the number of possible games, 10&lt;sup&gt;700&lt;/sup&gt;&lt;ref name="top ten"&gt;AGA – top ten reason to play Go&lt;/ref&gt; is derived from a simple permutation of 361 moves or 361! = 10&lt;sup&gt;768&lt;/sup&gt;.  Another common derivation is to assume N intersections and L longest game for N^L total games.  For example, 400 moves, as seen in some professional games, would be one out of 361&lt;sup&gt;400&lt;/sup&gt; or 1 &amp;times; 10&lt;sup&gt;1023&lt;/sup&gt; possible games.

The total number of possible games is a function both of the size of the board and the number of moves played.  While most games last less than 400 or even 200 moves, many more are possible.

{| class="wikitable"
!Game size
!Board size N (intersections)
!N!
!Average game length L
!N&lt;sup&gt;L&lt;/sup&gt;
!Maximum game length (# of moves)
!Lower limit of games
!Upper limit of games
|-
!2&amp;times;2
|align="right"|4
|align="right"|24
|align="right"|3
|align="right"|64
|align="right"|
|align="right"|386,356,909,593&lt;ref&gt;Tromp 1999&lt;/ref&gt;
|align="right"|386,356,909,593
|-
!3&amp;times;3
|align="right"|9
|align="right"|3.6&amp;times;10&lt;sup&gt;5&lt;/sup&gt;
|align="right"|5
|align="right"|5.9&amp;times;10&lt;sup&gt;4&lt;/sup&gt;
|align="right"|
|align="right"|
|
|-
!4&amp;times;4
|align="right"|16
|align="right"|2.1&amp;times;10&lt;sup&gt;13&lt;/sup&gt;
|align="right"|9
|align="right"|6.9&amp;times;10&lt;sup&gt;10&lt;/sup&gt;
|align="right"|
|align="right"|
|
|-
!5&amp;times;5
|align="right"|25
|align="right"|1.6&amp;times;10&lt;sup&gt;25&lt;/sup&gt;
|align="right"|15
|align="right"|9.3&amp;times;10&lt;sup&gt;20&lt;/sup&gt;
|align="right"|
|align="right"|
|
|-
!9&amp;times;9
|align="right"|81
|align="right"|5.8&amp;times;10&lt;sup&gt;120&lt;/sup&gt;
|align="right"|45
|align="right"|7.6&amp;times;10&lt;sup&gt;85&lt;/sup&gt;
|align="right"|
|align="right"|
|
|-
!13&amp;times;13
|align="right"|169
|align="right"|4.3&amp;times;10&lt;sup&gt;304&lt;/sup&gt;
|align="right"|90
|align="right"|3.2&amp;times;10&lt;sup&gt;200&lt;/sup&gt;
|align="right"|
|align="right"|
|
|-
!19&amp;times;19
|align="right"|361
|align="right"|1.0&amp;times;10&lt;sup&gt;768&lt;/sup&gt;
|align="right"|200
|align="right"|3&amp;times;10&lt;sup&gt;511&lt;/sup&gt;
|align="right"|10&lt;sup&gt;48&lt;/sup&gt;
|align="right"|10&lt;sup&gt;10&lt;sup&gt;48&lt;/sup&gt;&lt;/sup&gt;
|align="right"|10&lt;sup&gt;10&lt;sup&gt;171&lt;/sup&gt;&lt;/sup&gt;
|-
!21&amp;times;21
|align="right"|441
|align="right"|2.5&amp;times;10&lt;sup&gt;976&lt;/sup&gt;
|align="right"|250
|align="right"|1.3&amp;times;10&lt;sup&gt;661&lt;/sup&gt;
|align="right"|
|align="right"|
|
|}

The total number of possible games can be estimated from the board size in a number of ways, some more rigorous than others.  The simplest, a permutation of the board size, (N)&lt;sub&gt;L&lt;/sub&gt;, fails to include illegal captures and positions.  Taking N as the board size (19&amp;times;19=361) and L as the longest game, N&lt;sup&gt;L&lt;/sup&gt; forms an upper limit.  A more accurate limit is presented in the Tromp/Farnebäck paper.

{| class="wikitable"
!align="left"|Longest game L (19&amp;times;19)
!align="left"|(N)&lt;sub&gt;L&lt;/sub&gt;
!align="left"|Lower limit of games
!align="left"|Upper limit of games
!align="left"|Notes
|-
!1
|align="right"|361
|align="right"|361
|align="right"|361
|White resigns after first move, 361 ignoring all symmetry including y=x else (Distances from corner)10x10-10=90 90/2=45 +10 (adding back x=y points of symmetry) = 55.
|-
!2
|align="right"|722
|align="right"|
|align="right"|721
|Black resigns after white's first move, 721 ignoring all symmetry including y=x else 19x19-19=342 342/2=171 +19 = 190 - 1= 189.
|-
!50
|align="right"|2.1&amp;times;10&lt;sup&gt;126&lt;/sup&gt;
|align="right"|
|align="right"|7.5&amp;times;10&lt;sup&gt;127&lt;/sup&gt;
|
|-
!100
|align="right"|1.4&amp;times;10&lt;sup&gt;249&lt;/sup&gt;
|align="right"|
|align="right"|5.6&amp;times;10&lt;sup&gt;255&lt;/sup&gt;
|
|-
!150
|align="right"|6.4&amp;times;10&lt;sup&gt;367&lt;/sup&gt;
|align="right"|
|align="right"|4.2&amp;times;10&lt;sup&gt;383&lt;/sup&gt;
|
|-
!200
|align="right"|1.9&amp;times;10&lt;sup&gt;481&lt;/sup&gt;
|align="right"|
|align="right"|3.2&amp;times;10&lt;sup&gt;511&lt;/sup&gt;
|
|-
!250
|align="right"|8.2&amp;times;10&lt;sup&gt;587&lt;/sup&gt;
|align="right"|
|align="right"|2.4&amp;times;10&lt;sup&gt;639&lt;/sup&gt;
|
|-
!300
|align="right"|2.8&amp;times;10&lt;sup&gt;684&lt;/sup&gt;
|align="right"|
|align="right"|7.8&amp;times;10&lt;sup&gt;766&lt;/sup&gt;
|
|-
!350
|align="right"|3.6&amp;times;10&lt;sup&gt;760&lt;/sup&gt;
|align="right"|
|align="right"|1.3&amp;times;10&lt;sup&gt;895&lt;/sup&gt;
|
|-
!361
|align="right"|1.4&amp;times;10&lt;sup&gt;768&lt;/sup&gt;
|align="right"|
|align="right"|1.8&amp;times;10&lt;sup&gt;923&lt;/sup&gt;
|Longest game using 181 black and 180 white stones
|-
!400
|align="right"|n/a
|align="right"|
|align="right"|1.0&amp;times;10&lt;sup&gt;1023&lt;/sup&gt;
|Longest professional games
|-
!500
|align="right"|n/a
|align="right"|
|align="right"|5.7&amp;times;10&lt;sup&gt;1278&lt;/sup&gt;
|
|-
!1000
|align="right"|n/a
|align="right"|
|align="right"|3.2&amp;times;10&lt;sup&gt;2557&lt;/sup&gt;
|
|-
!47 million
|align="right"|n/a
|align="right"|
|align="right"|10&lt;sup&gt;10&lt;sup&gt;8&lt;/sup&gt;&lt;/sup&gt;
|361^3 moves
|-
!10&lt;sup&gt;48&lt;/sup&gt;
|align="right"|n/a
|align="right"|10&lt;sup&gt;10&lt;sup&gt;48&lt;/sup&gt;&lt;/sup&gt;
|align="right"|10&lt;sup&gt;10&lt;sup&gt;171&lt;/sup&gt;&lt;/sup&gt;
|Longest game
|}

10&lt;sup&gt;700&lt;/sup&gt; is thus an overestimate of the number of possible games that can be played in 200 moves and an underestimate of the number of games that can be played in 361 moves.  Since there are about 31 million seconds in a year, it would take about 2¼ years, playing 16 hours a day at one move per second, to play 47 million moves.

==See also==
* [[Game complexity]]
* [[Shannon number]] (Chess)

==Notes==
{{Reflist|2}}

==References ==
* {{cite web | title = Top Ten Reasons to Play Go | author = AGA | url = http://www.usgo.org/resources/topten.html }}
* {{cite book | author = Allis, Victor | year = 1994 | title = Searching for Solutions in Games and Artificial Intelligence | publisher = Ph.D. Thesis, University of Limburg, Maastricht, The Netherlands | isbn = 90-900748-8-0 | url = http://fragrieu.free.fr/SearchingForSolutions.pdf|format=PDF}}
* {{cite web | url = http://www.swiss.ai.mit.edu/~bob/hearn-thesis-final.pdf |format=PDF| title = Games, Puzzles, and Computation | author = Hearn, Robert A. | year = 2006 }} [Ph.D. Thesis, MIT.]
* {{cite web | url=https://query.nytimes.com/gst/fullpage.html?res=9C04EFD6123AF93AA15754C0A961958260 | title=To Test a Powerful Computer, Play an Ancient Game | last=Johnson |
first=George | work=[[New York Times]]| date=1997-07-29}}
*[[Christos Papadimitriou|Papadimitriou, Christos]] (1994), ''Computational Complexity'', Addison Wesley.
* {{cite web | url = https://groups.google.com/group/rec.games.go/browse_thread/thread/161ff6e5922e1124/c90e5b4a61ea0602?lnk=st | last = Tromp | first = John |author-link=John Tromp| year = 1999 | title = Number of 2&amp;times;2 games with positional superko }}
* {{cite web | url = https://tromp.github.io/go/legal.html | title = Number of legal Go positions (up to 19&amp;times;19) | last = Tromp | first = John |author-link=John Tromp| year = 2005 }}
* {{cite web | title = Combinatorics of Go |author1=[[John Tromp|Tromp, John]]  |author2=Farnebäck, Gunnar | year = 2007 | url = https://tromp.github.io/go/gostate.ps}}

==External links==
* [https://web.archive.org/web/20070611031147/http://msoworld.com/mindzine/news/orient/go/special/gomath.html Go and Mathematics]
* [http://senseis.xmp.net/?NumberOfPossibleOutcomesOfAGame Number of possible outcomes of a game] - article at Sensei's Library

[[Category:Go (game)]]
[[Category:Combinatorial game theory]]
[[Category:Recreational mathematics]]</text>
      <sha1>iof78yaq4lrl67qn7yjrfs74p5htvil</sha1>
    </revision>
  </page>
  <page>
    <title>Graph (abstract data type)</title>
    <ns>0</ns>
    <id>557931</id>
    <revision>
      <id>857779211</id>
      <parentid>857778743</parentid>
      <timestamp>2018-09-02T23:50:19Z</timestamp>
      <contributor>
        <username>Ringbang</username>
        <id>147617</id>
      </contributor>
      <comment>table markdown and metadata; resized thumbnail; caption correction</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7895">[[File:Directed.svg|160px|thumb|A [[directed graph]] with three [[Vertex (graph theory)|vertices]] (blue circles) and three [[Edge (graph theory)|edges]] (black arrows).]]

In [[computer science]], a '''graph''' is an [[abstract data type]] that is meant to implement the [[Graph (discrete mathematics)|undirected graph]] and [[directed graph]] concepts from [[mathematics]]; specifically, the field of [[graph theory]].

A graph data structure consists of a finite (and possibly mutable) [[Set (computer science)|set]] of ''vertices'' or ''nodes'' or ''points'', together with a set of unordered pairs of these vertices for an undirected graph or a set of ordered pairs for a directed graph. These pairs are known as ''edges'', ''arcs'', or ''lines'' for an undirected graph and as ''arrows'', ''directed edges'', ''directed arcs'', or ''directed lines'' for a directed graph. The vertices may be part of the graph structure, or may be external entities represented by integer indices or [[Reference (computer science)|references]].

A graph data structure may also associate to each edge some ''edge value'', such as a symbolic label or a numeric attribute (cost, capacity, length, etc.).

==Operations==
The basic operations provided by a graph data structure ''G'' usually include:&lt;ref name="gt-ops"&gt;See, e.g. {{harvtxt|Goodrich|Tamassia|2015}}, Section 13.1.2: Operations on graphs, p. 360. For a more detailed set of operations, see {{citation|contribution=Chapter 6: Graphs and their data structures|pages=240–282|title=LEDA: A platform for combinatorial and geometric computing|first1=K.|last1=Mehlhorn|author1-link=Kurt Mehlhorn|first2=S.|last2=Näher|publisher=Cambridge University Press|year=1999}}.&lt;/ref&gt;
* &lt;code&gt;adjacent&lt;/code&gt;(''G'', ''x'', ''y''): tests whether there is an edge from the vertex ''x'' to the vertex ''y'';
* &lt;code&gt;neighbors&lt;/code&gt;(''G'', ''x''): lists all vertices ''y'' such that there is an edge from the vertex ''x'' to the vertex ''y'';
* &lt;code&gt;add_vertex&lt;/code&gt;(''G'', ''x''): adds the vertex ''x'', if it is not there;
* &lt;code&gt;remove_vertex&lt;/code&gt;(''G'', ''x''): removes the vertex ''x'', if it is there;
* &lt;code&gt;add_edge&lt;/code&gt;(''G'', ''x'', ''y''): adds the edge from the vertex ''x'' to the vertex ''y'', if it is not there;
* &lt;code&gt;remove_edge&lt;/code&gt;(''G'', ''x'', ''y''): removes the edge from the vertex ''x'' to the vertex ''y'', if it is there;
* &lt;code&gt;get_vertex_value&lt;/code&gt;(''G'', ''x''): returns the value associated with the vertex ''x'';
* &lt;code&gt;set_vertex_value&lt;/code&gt;(''G'', ''x'', ''v''): sets the value associated with the vertex ''x'' to ''v''.

Structures that associate values to the edges usually also provide:&lt;ref name="gt-ops"/&gt;
* &lt;code&gt;get_edge_value&lt;/code&gt;(''G'', ''x'', ''y''): returns the value associated with the edge (''x'', ''y'');
* &lt;code&gt;set_edge_value&lt;/code&gt;(''G'', ''x'', ''y'', ''v''): sets the value associated with the edge (''x'', ''y'') to ''v''.

==Representations==
Different data structures for the representation of graphs are used in practice:
; [[Adjacency list]]&lt;ref&gt;{{harvtxt|Cormen|Leiserson|Rivest|Stein|2001}}, pp. 528–529; {{harvtxt|Goodrich|Tamassia|2015}}, pp. 361-362.&lt;/ref&gt;
: Vertices are stored as records or objects, and every vertex stores a [[list (computing)|list]] of adjacent vertices. This data structure allows the storage of additional data on the vertices. Additional data can be stored if edges are also stored as objects, in which case each vertex stores its incident edges and each edge stores its incident vertices.
; [[Adjacency matrix]]&lt;ref&gt;{{harvtxt|Cormen|Leiserson|Rivest|Stein|2001}}, pp. 529–530; {{harvtxt|Goodrich|Tamassia|2015}}, p.&amp;nbsp;363.&lt;/ref&gt;
: A two-dimensional matrix, in which the rows represent source vertices and columns represent destination vertices. Data on edges and vertices must be stored externally. Only the cost for one edge can be stored between each pair of vertices.
; [[Incidence matrix]]&lt;ref&gt;{{harvtxt|Cormen|Leiserson|Rivest|Stein|2001}}, Exercise 22.1-7, p.&amp;nbsp;531.&lt;/ref&gt;
: A two-dimensional Boolean matrix, in which the rows represent the vertices and columns represent the edges. The entries indicate whether the vertex at a row is incident to the edge at a column.

The following table gives the [[time complexity]] cost of performing various operations on graphs, for each of these representations, with |''V'' | the number of vertices and |''E'' | the number of edges.{{Citation needed|reason=Reliable source needed for the entire table below.|date=November 2011}} In the matrix representations, the entries encode the cost of following an edge. The cost of edges that are not present are assumed to be ∞.

{| class="wikitable"
|-
!
! scope="col" | Adjacency list
! scope="col" | Adjacency matrix
! scope="col" | Incidence matrix
|-
! scope="row" {{rh2|align=left}} | Store graph
| &lt;math&gt;O(|V|+|E|)&lt;/math&gt;
| &lt;math&gt;O(|V|^2)&lt;/math&gt;
| &lt;math&gt;O(|V|\cdot|E|)&lt;/math&gt;
|-
! scope="row" {{rh2|align=left}} | Add vertex
| &lt;math&gt;O(1)&lt;/math&gt;
| &lt;math&gt;O(|V|^2)&lt;/math&gt;
| &lt;math&gt;O(|V|\cdot|E|)&lt;/math&gt;
|-
! scope="row" {{rh2|align=left}} | Add edge
| &lt;math&gt;O(1)&lt;/math&gt;
| &lt;math&gt;O(1)&lt;/math&gt;
| &lt;math&gt;O(|V|\cdot|E|)&lt;/math&gt;
|-
! scope="row" {{rh2|align=left}} | Remove vertex
| &lt;math&gt;O(|E|)&lt;/math&gt;
| &lt;math&gt;O(|V|^2)&lt;/math&gt;
| &lt;math&gt;O(|V|\cdot|E|)&lt;/math&gt;
|-
! scope="row" {{rh2|align=left}} | Remove edge
| &lt;math&gt;O(|V|)&lt;/math&gt;
| &lt;math&gt;O(1)&lt;/math&gt;
| &lt;math&gt;O(|V|\cdot|E|)&lt;/math&gt;
|-
! scope="row" {{rh2|align=left}} | Are vertices ''x'' and ''y'' adjacent (assuming that their storage positions are known)?
| &lt;math&gt;O(|V|)&lt;/math&gt;
| &lt;math&gt;O(1)&lt;/math&gt;
| &lt;math&gt;O(|E|)&lt;/math&gt;
|-
! scope="row" {{rh2|align=left}} | Remarks
| Slow to remove vertices and edges, because it needs to find all vertices or edges
| Slow to add or remove vertices, because matrix must be resized/copied
| Slow to add or remove vertices and edges, because matrix must be resized/copied
|}

Adjacency lists are generally preferred because they efficiently represent [[sparse graph]]s. An adjacency matrix is preferred if the graph is dense, that is the number of edges |''E'' | is close to the number of vertices squared, |''V'' |&lt;sup&gt;2&lt;/sup&gt;, or if one must be able to quickly look up if there is an edge connecting two vertices.&lt;ref name="clrs"&gt;{{citation |authorlink=Thomas H. Cormen |first=Thomas H. |last=Cormen |authorlink2=Charles E. Leiserson |first2=Charles E. |last2=Leiserson |authorlink3=Ronald L. Rivest |first3=Ronald L. |last3=Rivest |authorlink4=Clifford Stein |first4=Clifford |last4=Stein |year=2001 |title=[[Introduction to Algorithms]] |edition=Second |publisher=MIT Press and McGraw-Hill |isbn=0-262-03293-7 |chapter=Section 22.1: Representations of graphs |pages=527–531 }}.&lt;/ref&gt;&lt;ref name="gt"&gt;{{citation|title=Algorithm Design and Applications|first1=Michael T.|last1=Goodrich|author1-link=Michael T. Goodrich|first2=Roberto|last2=Tamassia|author2-link=Roberto Tamassia|publisher=Wiley|year=2015|contribution=Section 13.1: Graph terminology and representations|pages=355–364}}.&lt;/ref&gt;

==See also==
* [[Graph traversal]] for graph walking strategies
* [[Graph database]] for graph (data structure) persistency
* [[Graph rewriting]] for rule based transformations of graphs (graph data structures)
* [[Graph drawing software]] for software, systems, and providers of systems for drawing graphs

==References==
{{reflist}}

==External links==
* [http://www.boost.org/libs/graph Boost Graph Library: a powerful C++ graph library] s.a. [[Boost (C++ libraries)]]
* [https://networkx.github.com/ Networkx: a Python graph library]
* [http://www.graphmatcher.com GraphMatcher] a java program to align directed/undirected graphs.


{{Graph representations}}
{{Data structures}}
&lt;!--Categories--&gt;
{{DEFAULTSORT:Graph (Abstract Data Type)}}
[[Category:Graph theory]]
[[Category:Graph data structures]]
[[Category:Abstract data types]]
[[Category:Graphs]]
[[Category:Hypergraphs]]</text>
      <sha1>jgfhrwbok5mj9bpo3kv0mjlq60axeau</sha1>
    </revision>
  </page>
  <page>
    <title>Hybrid algorithm</title>
    <ns>0</ns>
    <id>40338559</id>
    <revision>
      <id>853323622</id>
      <parentid>842790692</parentid>
      <timestamp>2018-08-03T23:01:54Z</timestamp>
      <contributor>
        <username>Abequinn14</username>
        <id>25846501</id>
      </contributor>
      <comment>Reverted 1 [[WP:AGF|good faith]] edit by [[Special:Contributions/2405:204:66A7:D11B:653E:6011:52DF:BFE|2405:204:66A7:D11B:653E:6011:52DF:BFE]] using [[WP:STiki|STiki]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="4277">{{Unreferenced|date=May 2014}}
A '''hybrid algorithm''' is an [[algorithm]] that combines two or more other algorithms that solve the same problem, either choosing one (depending on the data), or switching between them over the course of the algorithm. This is generally done to combine desired features of each, so that the overall algorithm is better than the individual components.

"Hybrid algorithm" does not refer to simply combining multiple algorithms to solve a different problem – many algorithms can be considered as combinations of simpler pieces – but only to combining algorithms that solve the same problem, but differ in other characteristics, notably performance.

==Examples==
In [[computer science]], hybrid algorithms are very common in optimized real-world implementations of [[recursive algorithm]]s, particularly [[Divide and conquer algorithm#Implementation issues|implementations]] of 
[[divide and conquer algorithm|divide and conquer]] or [[decrease and conquer]] algorithms, where the size of the data decreases as one moves deeper in the recursion. In this case, one algorithm is used for the overall approach (on large data), but deep in the recursion, it switches to a different algorithm, which is more efficient on small data. A common example is in [[sorting algorithm]]s, where the insertion sort, which is inefficient on large data, but very efficient on small data (say, five to ten elements), is used as the final step, after primarily applying another algorithm, such as [[merge sort]] or [[quicksort]]. Merge sort and quicksort are asymptotically optimal on large data, but the overhead becomes significant if applying them to small data, hence the use of a different algorithm at the end of the recursion. A highly optimized hybrid sorting algorithm is [[Timsort]], which combines merge sort, insertion sort, together with additional logic (including [[binary search]]) in the merging logic.

A general procedure for a simple hybrid recursive algorithm is ''short-circuiting the base case,'' also known as ''[[arm's-length recursion]].'' In this case whether the next step will result in the base case is checked before the function call, avoiding an unnecessary function call. For example, in a tree, rather than recursing to a child node and then checking if it is null, checking null before recursing. This is useful for efficiency when the algorithm usually encounters the base case many times, as in many tree algorithms, but is otherwise considered poor style, particularly in academia, due to the added complexity.

Another example of hybrid algorithms for performance reasons are [[introsort]] and [[introselect]], which combine one algorithm for fast average performance, falling back on another algorithm to ensure (asymptotically) optimal worst-case performance. Introsort begins with a [[quicksort]], but switches to a [[heap sort]] if quicksort is not progressing well; analogously introselect begins with [[quickselect]], but switches to [[median of medians]] if quickselect is not progressing well.

Centralized [[distributed algorithm]]s can often be considered as hybrid algorithms, consisting of an individual algorithm (run on each distributed processor), and a combining algorithm (run on a centralized distributor) – these correspond respectively to running the entire algorithm on one processor, or running the entire computation on the distributor, combining trivial results (a one-element data set from each processor). A basic example of these algorithms are [[distribution sort]]s, particularly used for [[external sorting]], which divide the data into separate subsets, sort the subsets, and then combine the subsets into totally sorted data; examples include [[bucket sort]] and [[flashsort]].

However, in general distributed algorithms need not be hybrid algorithms, as individual algorithms or combining or communication algorithms may be solving different problems. For example, in models such as [[MapReduce]], the Map and Reduce step solve different problems, and are combined to solve a different, third problem.

== See also ==
* [[Hybrid algorithm (constraint satisfaction)]]
* [[Hybrid genetic algorithm]]
* [[Hybrid input output (HIO) algorithm for phase retrieval]]

[[Category:Algorithms]]</text>
      <sha1>947a7lljnklqwjzb7cf4b01rtkcuzic</sha1>
    </revision>
  </page>
  <page>
    <title>Inclusion (Boolean algebra)</title>
    <ns>0</ns>
    <id>40153832</id>
    <revision>
      <id>567164022</id>
      <timestamp>2013-08-04T21:34:25Z</timestamp>
      <contributor>
        <username>Macrakis</username>
        <id>49920</id>
      </contributor>
      <comment>[[WP:AES|←]]Created page with 'In [[Boolean algebra (structure)]], the '''inclusion relation''' &lt;math&gt;a\le b&lt;/math&gt; is defined as &lt;math&gt;ab'=0&lt;/math&gt; and is the Boolean analogue to the subset...'</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1298">In [[Boolean algebra (structure)]], the '''inclusion relation''' &lt;math&gt;a\le b&lt;/math&gt; is defined as &lt;math&gt;ab'=0&lt;/math&gt; and is the Boolean analogue to the [[subset]] relation in [[set theory]]. Inclusion is a [[partial order]].

The inclusion relation &lt;math&gt;a&lt;b&lt;/math&gt; can be expressed in many ways:
* &lt;math&gt;a&lt;b&lt;/math&gt;
* &lt;math&gt;ab'=0&lt;/math&gt;
* &lt;math&gt;a'+b=1&lt;/math&gt;
* &lt;math&gt;b'&lt;a'&lt;/math&gt;
* &lt;math&gt;a+b=b&lt;/math&gt;
* &lt;math&gt;ab=a&lt;/math&gt;

The inclusion relation has a natural interpretation in various Boolean algebras: in the subset algebra, the [[subset]] relation; in arithmetic Boolean algebra, [[divisor|divisibility]]; in the [[Propositional formula#An algebra of propositions.2C the propositional calculus|algebra of propositions]], [[Material conditional|material implication]]; in the two-element algebra, the set { (0,0), (0,1), (1,1) }.

Some useful properties of the inclusion relation are:
* &lt;math&gt;a\le a+b&lt;/math&gt;
* &lt;math&gt;ab\le a&lt;/math&gt;

The inclusion relation may be used to define '''Boolean intervals''' such that &lt;math&gt;a\le x\le b&lt;/math&gt; A Boolean algebra whose carrier set is restricted to the elements in an interval is itself a Boolean algebra.

==References==

* Frank Markham Brown, ''Boolean Reasoning: The Logic of Boolean Equations'', 2nd edition, 2003, p. 52

[[Category:Boolean algebra]]</text>
      <sha1>4xi3uhdrc066lob69ner8ka2dn0fqmz</sha1>
    </revision>
  </page>
  <page>
    <title>Kaplan–Yorke map</title>
    <ns>0</ns>
    <id>2053018</id>
    <revision>
      <id>813162678</id>
      <parentid>790712011</parentid>
      <timestamp>2017-12-02T04:23:48Z</timestamp>
      <contributor>
        <username>JCW-CleanerBot</username>
        <id>31737083</id>
      </contributor>
      <minor/>
      <comment>[[User:JCW-CleanerBot#Logic|task]], replaced: Lecture notes in Mathematics → Lecture Notes in Mathematics using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2364">{{no footnotes|date=June 2013}}
[[Image:Kaplan-Yorke map.png|thumb|A plot of 100,000 iterations of the Kaplan-Yorke map with α=0.2. The initial value (x&lt;sub&gt;0&lt;/sub&gt;,y&lt;sub&gt;0&lt;/sub&gt;) was (128873/350377,0.667751).]]
The '''Kaplan–Yorke map''' is a [[discrete-time]] [[dynamical system]].   It is an example of a dynamical system that exhibits [[chaos theory|chaotic behavior]].  The Kaplan–Yorke [[function (mathematics)|map]] takes a point (''x&lt;sub&gt;n&lt;/sub&gt;,&amp;nbsp;y&lt;sub&gt;n&lt;/sub&gt;&amp;nbsp;'') in the [[plane (mathematics)|plane]] and [[function (mathematics)|maps]] it to a new point given by

:&lt;math&gt;x_{n+1}=2x_n\ (\textrm{mod}~1)&lt;/math&gt;
:&lt;math&gt;y_{n+1}=\alpha y_n+\cos(4\pi x_n)&lt;/math&gt;

where ''mod'' is the [[modulo operation|modulo operator]] with real arguments. The map depends on only the one [[Constant (mathematics)|constant]] α.

==Calculation method==
Due to roundoff error, successive applications of the modulo operator will yield zero after some ten or twenty iterations when implemented as a floating point operation on a computer. It is better to implement the following equivalent algorithm:

:&lt;math&gt;a_{n+1}=2a_n\ (\textrm{mod}~b)&lt;/math&gt;
:&lt;math&gt;x_{n+1}=a_n/b&lt;/math&gt;
:&lt;math&gt;y_{n+1}=\alpha y_n+\cos(4\pi x_n)&lt;/math&gt;

where the &lt;math&gt;a_n&lt;/math&gt; and &lt;math&gt;b&lt;/math&gt; are computational integers. It is also best to choose &lt;math&gt;b&lt;/math&gt; to be a large [[prime number]] in order to get many different values of &lt;math&gt;x_n&lt;/math&gt;.

Another way to avoid having the modulo operator yield zero after a short number of iterations is

X&lt;sub&gt;n+1&lt;/sub&gt; = 2X&lt;sub&gt;n&lt;/sub&gt; (mod 0.99995)

Y&lt;sub&gt;n+1&lt;/sub&gt; = αY&lt;sub&gt;n&lt;/sub&gt; + cos(4πX&lt;sub&gt;n&lt;/sub&gt;)

which, will still eventually return zero but takes many more iterations.

==References==
* {{cite book | author= J.L. Kaplan and J.A. Yorke | title= Functional Differential Equations and Approximations of Fixed Points (Lecture Notes in Mathematics 730) |editor=H.O. Peitgen and H.O. Walther | publisher=Springer-Verlag | year=1979 | isbn = 0-387-09518-7}}
* {{cite journal | author=P. Grassberger and I. Procaccia | title=Measuring the strangeness of strange attractors | journal=Physica | year=1983 | volume=9D | issue=1-2| pages=189–208 | bibcode=1983PhyD....9..189G | doi=10.1016/0167-2789(83)90298-1 }}

{{Chaos theory}}

{{DEFAULTSORT:Kaplan Yorke Map}}
[[Category:Chaotic maps]]


{{Mathapplied-stub}}
{{physics-stub}}</text>
      <sha1>rwqnls4qmxj12dxdross2q893q81art</sha1>
    </revision>
  </page>
  <page>
    <title>Lie-* algebra</title>
    <ns>0</ns>
    <id>37920642</id>
    <revision>
      <id>816627755</id>
      <parentid>745645713</parentid>
      <timestamp>2017-12-22T16:14:53Z</timestamp>
      <contributor>
        <username>Omnipaedista</username>
        <id>8524693</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1116">In mathematics, a '''Lie-* algebra''' is a [[D-module]] with a Lie* bracket. They were introduced by [[Alexander Beilinson]] and [[Vladimir Drinfeld]] ({{harvtxt|Beilinson|Drinfeld|2004|loc=section 2.5.3}}), and are similar to the '''conformal algebras''' discussed by {{harvtxt|Kac|1998}} and to '''vertex Lie algebras'''.

==References==
*{{Citation | last1=Beilinson | first1=Alexander | last2=Drinfeld | first2=Vladimir | title=Chiral algebras | url=https://books.google.com/books?id=yHZh3p-kFqQC | publisher=[[American Mathematical Society]] | location=Providence, R.I. | series=American Mathematical Society Colloquium Publications | isbn=978-0-8218-3528-9 |mr=2058353 | year=2004 | volume=51}}
*{{Citation | author1-link=Victor Kac | last1=Kac | first1=Victor | title=Vertex algebras for beginners | url=https://books.google.com/books?id=PIhm9-37IlUC | publisher=[[American Mathematical Society]] | location=Providence, R.I. | edition=2nd | series=University Lecture Series | isbn=978-0-8218-1396-6 |mr=1651389 | year=1998 | volume=10}}

{{DEFAULTSORT:Lie- algebra}}
{{algebra-stub}}
[[Category:Lie algebras]]</text>
      <sha1>rr1qgifr5f36rgipwifgp05yy6t5dym</sha1>
    </revision>
  </page>
  <page>
    <title>Local Fields</title>
    <ns>0</ns>
    <id>21934376</id>
    <revision>
      <id>815597704</id>
      <parentid>746133830</parentid>
      <timestamp>2017-12-15T20:53:13Z</timestamp>
      <contributor>
        <username>Vycl1994</username>
        <id>19014806</id>
      </contributor>
      <comment>/* top */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2286">{{Infobox book&lt;!-- See Wikipedia:WikiProject_Novels or Wikipedia:WikiProject_Books --&gt;
| name          = Local Fields
| image         = Local Fields - bookcover.jpg
| border        = yes
| caption       =
| title_orig    = Corps Locaux
| genre         = Non-fiction
| author        = [[Jean-Pierre Serre]]
| country       = France
| language      = [[French language|French]] (original)&lt;br /&gt; [[English language|English]] (translation)
| subject       = [[Algebraic Number Theory]]
| publisher     = [[Springer Science+Business Media|Springer]]
| release_date  = 1980
| media_type    = Print
| pages         = 241 pp.
| isbn          = 978-0-387-90424-5
| oclc          = 4933106
}}

'''''Corps Locaux''''' by [[Jean-Pierre Serre]], originally published in 1962 and translated into English as '''''Local Fields''''' by [[Marvin Jay Greenberg]] in 1979, is a seminal graduate-level [[algebraic number theory]] text covering [[local fields]], [[Ramification (mathematics)|ramification]], [[group cohomology]], and [[local class field theory]].  The book's end goal is to present local class field theory from the cohomological point of view.  This theory concerns extensions of "local" (i.e., complete for a discrete valuation) fields with finite residue field.{{Dubious|date=August 2011}}&lt;!-- I thought he doesn't assume residue fields are finite. Taku --&gt;

==Contents==
#''Part I, Local Fields (Basic Facts)'': Discrete valuation rings, Dedekind domains, and Completion.
#''Part II, Ramification'': Discriminant &amp; Different, Ramification Groups, The Norm, and Artin Representation.
#''Part III, Group Cohomology'': Abelian &amp; Nonabelian Cohomology, Cohomology of Finite Groups, Theorems of Tate and Nakayama, Galois Cohomology, Class Formations, and Computation of Cup Products.
#''Part IV, Local Class Field Theory'': Brauer Group of a Local Field, Local Class Field Theory, Local Symbols and Existence Theorem, and Ramification.

==References==
*{{Citation | last1=Serre | first1=Jean-Pierre | author1-link=Jean-Pierre Serre | title=Local Fields  | publisher=[[Springer-Verlag]] | location=Berlin, New York | isbn=978-0-387-90424-5 |mr=0554237 | year=1980}}

[[Category:Algebraic number theory]]
[[Category:Class field theory]]
[[Category:Mathematics books]]


{{mathematics-lit-stub}}</text>
      <sha1>0yo057k3q1btkm3dypha5iw0nf85jmq</sha1>
    </revision>
  </page>
  <page>
    <title>Majorization</title>
    <ns>0</ns>
    <id>2864495</id>
    <revision>
      <id>837778847</id>
      <parentid>826396217</parentid>
      <timestamp>2018-04-23T00:22:09Z</timestamp>
      <contributor>
        <username>Humanengr</username>
        <id>6063935</id>
      </contributor>
      <minor/>
      <comment>grammar</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="10218">In [[mathematics]], '''majorization''' is a [[preorder]] on [[vector space|vectors]] of [[real numbers]]. For a vector &lt;math&gt;\mathbf{a}\in\mathbb{R}^d&lt;/math&gt;, we denote by &lt;math&gt;\mathbf{a}^{\downarrow}\in\mathbb{R}^d&lt;/math&gt; the vector with the same components, but sorted in descending order.
Given &lt;math&gt;\mathbf{a},\mathbf{b} \in \mathbb{R}^d&lt;/math&gt;, we say that
&lt;math&gt; \mathbf{a} &lt;/math&gt; '''weakly majorizes''' (or dominates) &lt;math&gt; \mathbf{b} &lt;/math&gt; '''from below''' written as &lt;math&gt; \mathbf{a} \succ_w \mathbf{b} &lt;/math&gt; [[iff]]

: &lt;math&gt; \sum_{i=1}^k a_i^{\downarrow} \geq \sum_{i=1}^k b_i^{\downarrow} \quad \text{for } k=1,\dots,d,&lt;/math&gt;

Equivalently, we say that &lt;math&gt;\mathbf{b}&lt;/math&gt; is '''weakly majorized''' (or dominated) by &lt;math&gt;\mathbf{a}&lt;/math&gt; '''from below''', denoted as &lt;math&gt; \mathbf{b} \prec_w \mathbf{a} &lt;/math&gt;.

Similarly, we say that
&lt;math&gt; \mathbf{a} &lt;/math&gt; '''weakly majorizes''' &lt;math&gt; \mathbf{b} &lt;/math&gt; '''from above''' written as &lt;math&gt; \mathbf{a} \succ^w \mathbf{b} &lt;/math&gt; [[iff]]

: &lt;math&gt; \sum_{i=k}^d a_i^{\downarrow} \leq \sum_{i=k}^d b_i^{\downarrow} \quad \text{for } k=1,\dots,d,&lt;/math&gt;

Equivalently, we say that &lt;math&gt;\mathbf{b}&lt;/math&gt; is '''weakly majorized''' by &lt;math&gt;\mathbf{a}&lt;/math&gt; '''from above''', denoted as &lt;math&gt; \mathbf{b} \prec^w \mathbf{a} &lt;/math&gt;.

If &lt;math&gt; \mathbf{a} \succ_w \mathbf{b} &lt;/math&gt;  and in addition &lt;math&gt;\sum_{i=1}^d a_i = \sum_{i=1}^d b_i&lt;/math&gt;  we say that
&lt;math&gt; \mathbf{a} &lt;/math&gt; '''majorizes''' (or dominates) &lt;math&gt; \mathbf{b} &lt;/math&gt; written as &lt;math&gt; \mathbf{a} \succ \mathbf{b} &lt;/math&gt;.
Equivalently, we say that &lt;math&gt;\mathbf{b}&lt;/math&gt; is '''majorized''' (or dominated) by &lt;math&gt;\mathbf{a}&lt;/math&gt;, denoted as &lt;math&gt; \mathbf{b} \prec \mathbf{a} &lt;/math&gt;.

It is easy to see that &lt;math&gt; \mathbf{a} \succ \mathbf{b} &lt;/math&gt; if and only if &lt;math&gt; \mathbf{a} \succ_w \mathbf{b} &lt;/math&gt; and &lt;math&gt; \mathbf{a} \succ^w \mathbf{b} &lt;/math&gt;.

Note that the majorization order does not depend on the order of the components of the vectors &lt;math&gt; \mathbf{a} &lt;/math&gt; or &lt;math&gt; \mathbf{b} &lt;/math&gt;. Majorization is not a [[partially ordered set|partial order]], since &lt;math&gt; \mathbf{a} \succ \mathbf{b} &lt;/math&gt; and &lt;math&gt; \mathbf{b} \succ \mathbf{a} &lt;/math&gt; do not imply &lt;math&gt; \mathbf{a} = \mathbf{b} &lt;/math&gt;, it only implies that the components of each vector are equal, but not necessarily in the same order.

Regrettably, to confuse the matter, some literature sources use the reverse notation, e.g., &lt;math&gt;\succ&lt;/math&gt; is replaced with  &lt;math&gt;\prec&lt;/math&gt;, most notably,  in Horn and Johnson, ''Matrix analysis'' (Cambridge Univ. Press, 1985), Definition 4.3.24, while the same authors switch to the traditional notation, introduced here, later in their ''Topics in Matrix Analysis'' (1994), and in the second edition of ''Matrix analysis'' (2013).

A function &lt;math&gt;f:\mathbb{R}^d \to \mathbb{R}&lt;/math&gt; is said to be [[Schur-convex function|Schur convex]] when &lt;math&gt;\mathbf{a} \succ \mathbf{b}&lt;/math&gt; implies &lt;math&gt;f(\mathbf{a}) \geq  f(\mathbf{b})&lt;/math&gt;.  Similarly, &lt;math&gt;f(\mathbf{a})&lt;/math&gt; is '''Schur concave''' when &lt;math&gt;\mathbf{a} \succ \mathbf{b}&lt;/math&gt; implies &lt;math&gt;f(\mathbf{a}) \leq f(\mathbf{b}).&lt;/math&gt;

The majorization partial order on finite sets, described here, can be generalized to the [[Lorenz ordering]], a partial order on [[cumulative distribution function|distribution functions]].

==Examples==
The order of the entries does not affect the majorization, e.g., the statement &lt;math&gt;(1,2)\prec (0,3)&lt;/math&gt; is simply 
equivalent to &lt;math&gt;(2,1)\prec (3,0)&lt;/math&gt;.

(Strong) majorization: &lt;math&gt;(1,2,3)\prec (0,3,3)\prec (0,0,6)&lt;/math&gt;. For vectors with ''n'' components
: &lt;math&gt;
\left(\frac{1}{n}, \ldots, \frac{1}{n}\right)\prec \left(\frac{1}{n-1}, \ldots, \frac{1}{n-1},0\right)
\prec \cdots \prec
\left(\frac{1}{2},\frac{1}{2}, 0, \ldots, 0\right) \prec \left(1, 0, \ldots, 0\right).
&lt;/math&gt;

(Weak) majorization: &lt;math&gt;(1,2,3)\prec_w (1,3,3)\prec_w (1,3,4)&lt;/math&gt;. For vectors with ''n'' components:
: &lt;math&gt;
\left(\frac{1}{n}, \ldots, \frac{1}{n}\right)\prec_w \left(\frac{1}{n-1}, \ldots, \frac{1}{n-1},1\right).
&lt;/math&gt;

==Geometry of majorization==
[[File:2D Majorization Example.png|thumb|250px|Figure 1. 2D majorization example]]
For &lt;math&gt;\mathbf{x}, \mathbf{y} \in \mathbb{R}^n,&lt;/math&gt; we have
&lt;math&gt;\mathbf{x} \prec \mathbf{y}&lt;/math&gt; if and only if &lt;math&gt;\mathbf{x}&lt;/math&gt; is in the convex hull of all vectors obtained by permuting the coordinates of &lt;math&gt;\mathbf{y}&lt;/math&gt;.

Figure 1 displays the convex hull in 2D for the vector &lt;math&gt;\mathbf{y}=(3,\,1)&lt;/math&gt;. Notice that the center of the convex hull, which is an interval in this case, is the vector &lt;math&gt;\mathbf{x}=(2,\,2)&lt;/math&gt;. This is the "smallest" vector satisfying  &lt;math&gt;\mathbf{x} \prec \mathbf{y}&lt;/math&gt; for this given vector &lt;math&gt;\mathbf{y}&lt;/math&gt;.

[[File:3D Majorization Example.png|thumb|250px|Figure 2. 3D Majorization Example]]
Figure 2 shows the convex hull in 3D. The center of the convex hull, which is a 2D polygon in this case, is the "smallest" vector &lt;math&gt;\mathbf{x}&lt;/math&gt; satisfying  &lt;math&gt;\mathbf{x} \prec \mathbf{y}&lt;/math&gt; for this given vector &lt;math&gt;\mathbf{y}&lt;/math&gt;.

==Equivalent conditions==
Each of the following statements is true if and only if &lt;math&gt;\mathbf{a}\succ \mathbf{b}&lt;/math&gt;:

* &lt;math&gt;\mathbf{b} = D\mathbf{a}&lt;/math&gt; for some [[doubly stochastic matrix]] &lt;math&gt;D&lt;/math&gt; (see Arnold,&lt;ref name=Arnold&gt;Barry C. Arnold.  "Majorization and the Lorenz Order: A Brief Introduction".  Springer-Verlag Lecture Notes in Statistics, vol. 43, 1987.&lt;/ref&gt; Theorem 2.1).  This is equivalent to saying b can be represented as a weighted average of the permutations of &lt;math&gt;a&lt;/math&gt;.
* From &lt;math&gt;\mathbf{a}&lt;/math&gt; we can produce &lt;math&gt;\mathbf{b}&lt;/math&gt; by a finite sequence of "Robin Hood operations" where we replace two elements &lt;math&gt;a_i&lt;/math&gt; and &lt;math&gt;a_j &lt; a_i&lt;/math&gt; with &lt;math&gt;a_i-\varepsilon&lt;/math&gt; and &lt;math&gt;a_j+\varepsilon&lt;/math&gt;, respectively, for some &lt;math&gt;\varepsilon \in (0, a_i-a_j)&lt;/math&gt; (see Arnold,&lt;ref name=Arnold/&gt; p.&amp;nbsp;11).
* For every convex function &lt;math&gt;h:\mathbb{R}\to \mathbb{R}&lt;/math&gt;, &lt;math&gt;\sum_{i=1}^d h(a_i) \geq \sum_{i=1}^d h(b_i)&lt;/math&gt; (see Arnold,&lt;ref name=Arnold/&gt; Theorem 2.9).
*&lt;math&gt; \forall t \in \mathbb{R} \quad \sum_{j=1}^d |a_j-t| \geq \sum_{j=1}^d |b_j-t|&lt;/math&gt;. (see Nielsen and Chuang Exercise 12.17,&lt;ref name=NielsenChuang&gt;{{Cite book|last1=Nielsen|first=Michael A.|authorlink1=Michael Nielsen|last2=Chuang|first2=Isaac L.|authorlink2=Isaac Chuang|title=[[Quantum Computation and Quantum Information (book)|Quantum Computation and Quantum Information]]|publisher=Cambridge University Press|location=Cambridge|year=2010|edition=2nd|oclc=844974180|isbn=978-1-107-00217-3}}&lt;/ref&gt;)

==In linear algebra==
* Suppose that for two real [[Vector (geometric)|vectors]] &lt;math&gt;v,v' \in \mathbb{R}^d&lt;/math&gt;, &lt;math&gt;v&lt;/math&gt; majorizes &lt;math&gt;v'&lt;/math&gt;. Then it can be shown that there exists a set of probabilities &lt;math&gt;(p_1,p_2,\ldots,p_d),
\sum_{i=1}^d p_i=1&lt;/math&gt; and a set of [[permutation]]s &lt;math&gt;(P_1,P_2,\ldots,P_d)&lt;/math&gt; such that &lt;math&gt;v'=\sum_{i=1}^d p_iP_iv&lt;/math&gt;. Alternatively it can be shown that there exists a [[doubly stochastic matrix]] &lt;math&gt;D&lt;/math&gt; such that &lt;math&gt;vD=v'&lt;/math&gt;

*We say that a [[hermitian operator]], &lt;math&gt;H&lt;/math&gt;, majorizes another, &lt;math&gt;H'&lt;/math&gt;, if the set of eigenvalues of &lt;math&gt;H&lt;/math&gt; majorizes that of &lt;math&gt;H'&lt;/math&gt;.

==In recursion theory==
Given &lt;math&gt;f, g : \mathbb{N} \to\mathbb{N}&lt;/math&gt;, then &lt;math&gt;f&lt;/math&gt; is said to ''majorize'' &lt;math&gt;g&lt;/math&gt; if, for all &lt;math&gt;x&lt;/math&gt;, &lt;math&gt;f(x)\geq g(x)&lt;/math&gt;.  If there is some &lt;math&gt;n&lt;/math&gt; so that &lt;math&gt;f(x)\geq g(x)&lt;/math&gt; for all &lt;math&gt;x &gt; n&lt;/math&gt;, then &lt;math&gt;f&lt;/math&gt; is said to ''dominate'' (or ''eventually dominate'') &lt;math&gt;g&lt;/math&gt;.  Alternatively, the preceding terms are often defined requiring the strict inequality &lt;math&gt;f(x) &gt; g(x)&lt;/math&gt; instead of &lt;math&gt;f(x)\geq g(x)&lt;/math&gt; in the foregoing definitions.

==Generalizations==
Various generalizations of majorization are discussed in chapters 14 and 15 of the reference work ''Inequalities: Theory of Majorization and Its Applications''. Albert W. Marshall, [[Ingram Olkin]], Barry Arnold. Second edition. Springer Series in Statistics. Springer, New York, 2011. {{ISBN|978-0-387-40087-7}}

==See also==
* [[Muirhead's inequality]]
* [[Schur-convex function]]
* [[Schur–Horn theorem]] relating diagonal entries of a matrix to its eigenvalues.
* For positive [[integer number]]s, weak majorization is called [[Dominance order]].

==Notes==
&lt;references/&gt;

==References==
* J. Karamata. Sur une inegalite relative aux fonctions convexes. Publ. Math. Univ. Belgrade 1, 145&amp;ndash;158, 1932.
* G. H. Hardy, J. E. Littlewood and G. Pólya, Inequalities, 2nd edition, 1952, Cambridge University Press, London.
* ''Inequalities: Theory of Majorization and Its Applications'' Albert W. Marshall, [[Ingram Olkin]], Barry Arnold, Second edition. Springer Series in Statistics. Springer, New York, 2011. {{ISBN|978-0-387-40087-7}}
* ''Inequalities: Theory of Majorization and Its Applications'' (1980) Albert W. Marshall, [[Ingram Olkin]], Academic Press, {{ISBN|978-0-12-473750-1}}
* [https://arxiv.org/abs/0801.4221v1 A tribute to Marshall and Olkin's book "Inequalities: Theory of Majorization and its Applications"]
* ''Matrix Analysis'' (1996) Rajendra Bhatia, Springer, {{ISBN|978-0-387-94846-1}}
* ''Topics in Matrix Analysis'' (1994) Roger A. Horn and Charles R. Johnson, Cambridge University Press, {{ISBN|978-0-521-46713-1}}
* ''Majorization and Matrix Monotone Functions in Wireless Communications'' (2007)  Eduard Jorswieck and Holger Boche, Now Publishers, {{ISBN|978-1-60198-040-3}}
* ''The Cauchy Schwarz Master Class'' (2004) J. Michael Steele, Cambridge University Press, {{ISBN|978-0-521-54677-5}}

==External links==
* [http://mathworld.wolfram.com/Majorization.html Majorization in MathWorld]
* [http://planetmath.org/encyclopedia/Majorization.html Majorization in PlanetMath]

==Software==
* [[OCTAVE]]/[[MATLAB]] [http://www.mathworks.com/matlabcentral/fileexchange/26962-majorization-check code to check majorization]

[[Category:Order theory]]
[[Category:Linear algebra]]</text>
      <sha1>03xijm6ty16krapujhmbs5tpste1iqn</sha1>
    </revision>
  </page>
  <page>
    <title>Martin's maximum</title>
    <ns>0</ns>
    <id>15978374</id>
    <revision>
      <id>798911933</id>
      <parentid>764022370</parentid>
      <timestamp>2017-09-04T14:55:26Z</timestamp>
      <contributor>
        <username>KolbertBot</username>
        <id>31691822</id>
      </contributor>
      <minor/>
      <comment>Bot: [[User:KolbertBot|HTTP→HTTPS]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3372">In [[set theory]], a branch of [[mathematical logic]], '''Martin's maximum''', introduced by {{harvtxt|Foreman|Magidor|Shelah|1988}},  is a generalization of the [[proper forcing axiom]], itself a generalization of [[Martin's axiom]].  It represents the broadest class of [[Forcing (mathematics)|forcings]] for which a forcing axiom is consistent.

Martin's maximum (MM) states that if ''D'' is a collection of &lt;math&gt;\aleph_1&lt;/math&gt; dense subsets of a notion of forcing that preserves stationary subsets of ω&lt;sub&gt;1&lt;/sub&gt;, then there is a ''D''-generic filter. It is a well known fact that forcing with a [[Countable chain condition|ccc]] notion of forcing preserves stationary subsets of ω&lt;sub&gt;1&lt;/sub&gt;, thus MM extends MA(&lt;math&gt;\aleph_1&lt;/math&gt;). If (''P'',≤) is not a stationary set preserving notion of forcing, i.e., there is a stationary subset of ω&lt;sub&gt;1&lt;/sub&gt;, which becomes nonstationary when forcing with (''P'',≤), then there is a collection ''D'' of &lt;math&gt;\aleph_1&lt;/math&gt; dense subsets of (''P'',≤), such that there is no ''D''-generic filter. This is why MM is called the maximal extension of Martin's axiom.

The existence of a [[supercompact cardinal]] implies the consistency of Martin's maximum.&lt;ref name=J684&gt;Jech (2003) p.684&lt;/ref&gt;  The proof uses [[Saharon Shelah|Shelah]]'s theories of semiproper forcing and iteration with revised countable supports.

MM implies that the value of the [[cardinality of the continuum|continuum]] is &lt;math&gt;\aleph_2&lt;/math&gt;&lt;ref name=J685&gt;Jech (2003) p.685&lt;/ref&gt; and that the ideal of [[stationary set|nonstationary sets]] on ω&lt;sub&gt;1&lt;/sub&gt; is &lt;math&gt;\aleph_2&lt;/math&gt;-saturated.&lt;ref name=J687&gt;Jech (2003) p.687&lt;/ref&gt; It further implies stationary reflection, i.e., if ''S'' is a stationary subset of some regular cardinal κ≥ω&lt;sub&gt;2&lt;/sub&gt; and every element of ''S'' has countable cofinality, then there is an ordinal α&lt;κ such that ''S''∩α is stationary in α. In fact, ''S'' contains a closed subset of order type ω&lt;sub&gt;1&lt;/sub&gt;.

==References==
{{reflist}}
*{{citation | last=Foreman | first= M. | author1-link=Matthew Foreman | last2=Magidor | first2= M. | author2-link=Menachem Magidor| last3= Shelah | first3= Saharon | author3-link=Saharon Shelah  | title=Martin's maximum, saturated ideals, and nonregular ultrafilters. I. |journal=Ann. of Math. |volume= 127 |year=1988|issue= 1|pages= 1–47 |doi=10.2307/1971415|publisher=The Annals of Mathematics, Vol. 127, No. 1|jstor=1971415 |mr=0924672 | zbl=0645.03028}} [https://www.jstor.org/stable/1971520 correction]
*{{Citation | last1=Jech | first1=Thomas | author1-link=Thomas Jech | title=Set Theory | edition=Third millennium| publisher=[[Springer-Verlag]] | location=Berlin, New York | series=Springer Monographs in Mathematics | isbn=978-3-540-44085-7 | year=2003 | zbl=1007.03002}}
*{{citation | last=Moore | first=Justin Tatch | chapter=Logic and foundations: the proper forcing axiom | zbl=1258.03075 | editor1-last=Bhatia | editor1-first=Rajendra | title=Proceedings of the international congress of mathematicians (ICM 2010), Hyderabad, India, August 19–27, 2010. Vol. II: Invited lectures | location=Hackensack, NJ | publisher=World Scientific | isbn=978-981-4324-30-4| pages=3–29 | year=2011 | url=http://www.math.cornell.edu/~justin/Ftp/ICM.pdf}}

==See also==
[[Transfinite number]]

[[Category:Forcing (mathematics)]]


{{settheory-stub}}</text>
      <sha1>6k2toxuj854lu0kffmj5q1u7i4ytnh2</sha1>
    </revision>
  </page>
  <page>
    <title>Matt Curtin</title>
    <ns>0</ns>
    <id>1631409</id>
    <revision>
      <id>869351737</id>
      <parentid>869350249</parentid>
      <timestamp>2018-11-18T01:55:34Z</timestamp>
      <contributor>
        <username>BenKuykendall</username>
        <id>12604315</id>
      </contributor>
      <comment>cryptography-stub, cleanup tag, remove irrelevant citation</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1640">{{BLP sources|date=November 2018}}

'''Matt Curtin''' (born 1973) is a computer scientist and entrepreneur in [[Columbus, Ohio]] best known for his work in [[cryptography]] and [[firewall (networking)|firewall]] systems.  He is the founder of [[Interhack Corporation]], first faculty advisor of Open Source Club at The Ohio State University,&lt;ref&gt;[http://opensource.osu.edu/about/officers Officers | Open Source Club at The Ohio State University]&lt;/ref&gt; and lecturer in the Department of Computer Science and Engineering at The [[Ohio State University]], where he teaches a [[Common Lisp]] course.  The author of two books, ''Developing Trust: Online Privacy and Security'' and ''[[Brute Force: Cracking the Data Encryption Standard]]''.

Curtin's work includes helping to prove the weakness of the [[Data Encryption Standard]] and providing expert testimony in ''Blumofe v. Pharmatrak'', in which a key ruling was made by the [[U.S. Court of Appeals]] for the First Circuit, showing how the [[Electronic Communications Privacy Act]] (ECPA) applies to Web technology.

==References==
{{Reflist}}

==External links==
*[http://ergo-sum.us/Members/cmcurtin/ Matt Curtin's homepage]
*[http://web.interhack.com/ Interhack Corporation]

{{cryptography-stub}}

{{Authority control}}

{{DEFAULTSORT:Curtin, Matt}}
[[Category:1973 births]]
[[Category:Computer systems researchers]]
[[Category:American computer scientists]]
[[Category:Cypherpunks]]
[[Category:Living people]]
[[Category:Ohio State University faculty]]
[[Category:Businesspeople from Columbus, Ohio]]
[[Category:Place of birth missing (living people)]]
[[Category:Engineers from Ohio]]</text>
      <sha1>tjryfpi1rleh15n7qp0dsgt95w07cwj</sha1>
    </revision>
  </page>
  <page>
    <title>Microsoft Binary Format</title>
    <ns>0</ns>
    <id>26322871</id>
    <revision>
      <id>868128329</id>
      <parentid>856541135</parentid>
      <timestamp>2018-11-10T05:05:20Z</timestamp>
      <contributor>
        <username>InternetArchiveBot</username>
        <id>27015025</id>
      </contributor>
      <comment>Rescuing 1 sources and tagging 0 as dead. #IABot (v2.0beta10)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="24632">In [[computing]], '''Microsoft Binary Format''' (MBF) was a format for [[floating-point]] numbers used in [[Microsoft]]'s [[BASIC]] language products, including [[MBASIC]], [[GW-BASIC]] and [[QuickBasic]] prior to version 4.00.&lt;ref name="kb"&gt;{{cite web |title=IEEE vs. Microsoft Binary Format; Rounding Issues (Complete) |publisher=Microsoft Support |date=2006-11-21 |url=http://support.microsoft.com/kb/35826 |access-date=2010-02-24}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=https://support.microsoft.com/en-us/kb/42980 |title=(Complete) Tutorial to Understand IEEE Floating-Point Errors |website=support.microsoft.com |access-date=2016-06-02}}&lt;/ref&gt;&lt;ref name="masm50"&gt;{{cite web |url=https://stackoverflow.com/questions/2686298/convert-pre-ieee-754-c-floating-point-numbers-to-from-c-sharp |quote=Read with care. The second reference could be mistaken to say that QB 4.0 could use MBF internally, but it only uses IEEE. It just has a few conversion functions to convert IEEE floating point numbers to strings containing MBF data, e.g. MKDMBF$ in addition to MKD$ which just copies the bytes of the IEEE value to a string.|title=Article : Floating Point Numbers |website=stackoverflow.com |access-date=2016-06-02}}&lt;/ref&gt;&lt;ref&gt;{{cite web |title=The MASM 6.1 documentation notes that 5.1 was the last MASM version to support MBF |url=http://people.sju.edu/~ggrevera/arch/references/MASM61PROGUIDE.pdf |format=PDF |website=people.sju.edu |access-date=2016-06-02}}&lt;/ref&gt;&lt;ref&gt;GW-BASIC User's Manual, Appendix D.3 USR Function Calls&lt;/ref&gt;&lt;ref&gt;BASIC Second edition (May 1982), IBM: Appendix C-15 (This is the BASICA manual.)&lt;/ref&gt;&lt;ref&gt;{{cite web |url=http://www.trs-80.com/trs80-zaps-internals.htm#rommath |title=ROM Routes (Integer Math |website=Trs-80.com |access-date=2016-06-02}}&lt;/ref&gt;

==History==
In 1975, [[Bill Gates]] and [[Paul Allen]] were working on [[Altair BASIC]], which they were developing at [[Harvard University]] on a [[PDP-10]] running their Altair [[emulator]].&lt;ref name="dawn"&gt;{{cite web |author-last=Ireland |author-first=Corydon |url=http://news.harvard.edu/gazette/story/2013/09/dawn-of-a-revolution |title=Dawn of a revolution &amp;#124; Harvard Gazette |publisher=news.harvard.edu |access-date=2016-05-30}}&lt;/ref&gt; One thing still missing was code to handle floating-point numbers, needed to support calculations with very big and very small numbers,&lt;ref name="dawn"/&gt; which would be particularly useful for science and engineering.&lt;ref&gt;{{cite journal |url=http://www.sciencedirect.com/science/article/pii/0898122187901817 |doi=10.1016/0898-1221(87)90181-7 |volume=14 |title=An introduction to the scientific computing language Pascal-SC |journal=Computers |pages=53–69}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=http://cis.poly.edu/~mleung/CS3734/s05/ch01/floatingPoints2.pdf |format=PDF |title=Floating-Point Numbers in Digital Computers |author-first=K. Ming |author-last=Leung |website=cis.poly.edu |access-date=2016-06-02}}&lt;/ref&gt; One of the proposed uses of the Altair was as a scientific calculator.&lt;ref&gt;{{cite web |url=https://books.google.nl/books?id=klV_BAAAQBAJ&amp;pg=PA16 |title=Bill Gates: A Biography - Michael B. Becraft - Google Boeken |publisher=Books.google.nl |date=2014-08-26 |access-date=2016-05-30}}&lt;/ref&gt;
[[File:Altair 8800 at the Computer History Museum, cropped.jpg|thumb|[[Altair 8800]] front panel]]
At a dinner at [[Currier House (Harvard College)|Currier House]], an undergraduate residential house at Harvard, Gates and Allen complained to their dinner companions about having to write this code.&lt;ref name="dawn"/&gt; One of them, [[Monte Davidoff]], told them that he had written floating-point routines before and convinced Gates and Allen that he was capable of writing the Altair BASIC floating-point code.&lt;ref name="dawn"/&gt; At the time there was no standard for floating-point numbers, so Davidoff had to come up with his own. He decided that 32 bits would allow enough range and precision.&lt;ref&gt;{{cite web |url=http://altairbasic.org/math_ex.htm |title=Altair BASIC 3.2 (4K Edition) |publisher=altairbasic.org |access-date=2016-05-30}}&lt;/ref&gt; When Allen had to demonstrate it to [[Micro Instrumentation and Telemetry Systems|MITS]], it was the first time it ran on an actual Altair.&lt;ref&gt;{{cite web |url=https://www.theregister.co.uk/2001/05/11/microsoft_altair_basic_legend_talks/ |title=Microsoft Altair BASIC legend talks about Linux, CPRM and that very frightening photo |website=theregister.co.uk |access-date=2016-05-30}}&lt;/ref&gt; But it worked, and when he entered ‘PRINT 2+2’, Davidoff's adding routine gave the correct answer.&lt;ref name="dawn"/&gt;

The source code for Altair BASIC was thought to have been lost to history, but resurfaced in 2000. It had been sitting behind Gates's former tutor and dean [[Harry R. Lewis|Harry Lewis]]'s file cabinet, who rediscovered it.&lt;ref name="raiders"&gt;{{cite web |url=https://www.theregister.co.uk/2001/05/13/raiders_of_the_lost_altair/ |title=Raiders of the Lost Altair BASIC Source Code |website=theregister.co.uk |access-date=2016-05-30}}&lt;/ref&gt;&lt;ref name="quest"&gt;{{cite web |url=http://www.rjh.org.uk/altair/ian.htm |title=Quest for the Holy Source - Ian's trip to Harvard |publisher=web.archive.org |access-date=2016-05-30 |dead-url=unfit |archive-url=https://web.archive.org/web/20020102173701/http://www.rjh.org.uk/altair/ian.htm |archive-date=2002-01-02}}&lt;/ref&gt; A comment in the source credits Davidoff as the writer of Altair BASIC's math package.&lt;ref name="raiders"/&gt;&lt;ref name="quest"/&gt;
[[File:Radio Shack Tandy TRS-80 Model I System.JPG|thumb|left|Radio Shack Tandy TRS-80 Model I System]]
Altair BASIC took off, and soon most early home computers ran some form of Microsoft BASIC.&lt;ref&gt;{{cite web |url=http://www.oldcomputers.net/important-computer-people.html |title=Important computer inventors |publisher=Oldcomputers.net |access-date=2016-05-30}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=http://comp.lang.basic.powerbasic.narkive.com/erBpXdwr/basic-7-0-for-windows#post4 |title=Basic 7.0 for Windows |publisher=comp.lang.basic.powerbasic.narkive.com |access-date=2016-05-30}}&lt;/ref&gt; The BASIC port for the [[6502]] CPU, such as used in the [[Commodore PET]], took up more space due to the lower code density of the 6502. Because of this it would likely not fit in a single ROM chip together with the machine-specific input and output code. Since an extra chip was necessary, extra space was available, and this was used in part to extend the floating-point format from 32 to 40 bits.&lt;ref name="Steil_2008"&gt;{{cite web |title=Create your own Version of Microsoft BASIC for 6502 |author-first=Michael |author-last=Steil |publisher=pagetable.com |date=2008-10-20 |url=http://www.pagetable.com/?p=46 |access-date=2016-05-30 |dead-url=no |archive-url=https://web.archive.org/web/20160530092603/http://www.pagetable.com/?p=46 |archive-date=2016-05-30}}&lt;/ref&gt; This extended format was not only provided by [[Commodore BASIC]] 1 &amp; 2, but was also supported by [[AppleSoft BASIC]] I &amp; II since version 1.1 (1977), [[KIM-1]] BASIC since version 1.1a (1977), and [[Tangerine Microtan 65|MicroTAN]] BASIC since version 2b (1980).&lt;ref name="Steil_2008"/&gt; Not long afterwards the [[Z80]] ports, such as [[TRS-80 Level II BASIC|Level II BASIC]] for the [[TRS-80]] (1978), introduced the 64-bit, double-precision format as a separate data type from 32-bit, single-precision.&lt;ref&gt;{{cite web |url=https://archive.org/details/Level_II_BASIC_Reference_Manual_1st_Ed._1978_Radio_Shack |title=Radio Shack Hardware Manual: Level II BASIC Reference Manual 1st Ed. (1978)(Radio Shack): Free Download &amp; Streaming: Internet Archive |publisher=archive.org |access-date=2016-05-30}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=http://akhara.com/trs-80/docs/model1/Level%20II%20BASIC%20Reference%20Manual%20(1979)(Radio%20Shack)(pdf).zip |format=PDF |title=Level II Basic |website=akhara.com |accessdate=2016-06-02}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=https://archive.org/details/BASIC-80_MBASIC_Reference_Manual |title=BASIC-80 (MBASIC) Reference Manual |format=PDF |access-date=2016-05-30}}&lt;/ref&gt; Microsoft used the same floating-point formats in their implementation of [[Fortran]]&lt;ref&gt;{{cite web |url=http://www.textfiles.com/bitsavers/pdf/microsoft/cpm/Microsoft_FORTRAN-80_Ver3.4_Users_Manual_Nov80.pdf |title=(page 45 and 55) |website=textfiles.com |access-date=2016-05-30}}&lt;/ref&gt; and for their macro assembler [[MASM]],&lt;ref&gt;{{cite web |url=ftp://ftp.gwdg.de/pub/mpsf/pc_doc/dosbesch.ps |title=Archived copy |accessdate=2015-10-07 |deadurl=yes |archiveurl=https://web.archive.org/web/20050220040002/http://ftp.gwdg.de/pub/mpsf/pc_doc/dosbesch.ps |archivedate=2005-02-20 |df= }}&lt;/ref&gt; although their spreadsheet [[Multiplan]]&lt;ref&gt;{{cite web |url=http://www.classiccmp.org/dunfield/kyocera/t200mpln.pdf |title=Tandy 200 Multiplan Manual |format=PDF |website=classiccmp.org  |access-date=2016-06-02}}&lt;/ref&gt;&lt;ref&gt;Microsoft C [[Microsoft P-Code|Pcode]] Specifications, page 13; Multiplan wasn't compiled to machine code, but to a kind of byte-code which was run by an interpreter, in order to make Multiplan portable across the widely varying hardware of the time. This byte-code distinguished between the machine-specific floating point format to calculate on, and an external (standard) format, which was [[binary coded decimal]] (BCD). The PACK and UNPACK instructions converted between the two.&lt;/ref&gt; and their [[COBOL]] implementation used [[binary-coded decimal]] (BCD) floating point.&lt;ref&gt;{{cite web |url=http://www.textfiles.com/bitsavers/pdf/microsoft/cpm/Microsoft_COBOL-80_1978.pdf |title=(page 26 = 32 in the PDF) |website=textfiles.com |access-date=2016-05-30}}&lt;/ref&gt; Even so, for a while MBF became the de facto floating-point format on home computers, to the point where people still occasionally encounter legacy files and file formats using it.&lt;ref&gt;{{cite web |url=http://www.textfiles.com/programming/qwk.txt |format=TXT |title=QWK Mail Packet File Layout |author-first=Patrick Y. |author-last=Lee |website=textfiles.com |access-date=2016-06-02}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=http://www.csidata.com/patch/csim.txt |format=TXT |title=This document describes the abandoned CompuTrac data format, which until recently was actively used by Equis' MetaStock charting software |website=csidata.com |access-date=2016-06-02 |deadurl=yes |archiveurl=https://web.archive.org/web/20160305170347/http://www.csidata.com/patch/csim.txt |archivedate=2016-03-05 |df= }}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=https://www.7api.com/converting-microsoft-binary-format-to-ieee-format-using-vb-6-beatfx.html |title=Converting Microsoft Binary Format to IEEE format Using VB 6 |publisher=7api.com |date=2016-05-04 |access-date=2016-05-30 }}{{dead link|date=January 2018 |bot=InternetArchiveBot |fix-attempted=yes }}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=http://www.tek-tips.com/viewthread.cfm?qid=592713 |title=Help !Anybody know how to convert old M/S MBF value from Qbasic to VB6 - Visual Basic(Microsoft): Version 5 &amp; 6 |publisher=Tek-Tips |access-date=2016-05-30}}&lt;/ref&gt;&lt;ref&gt;{{cite web|author=GL88 |url=https://social.msdn.microsoft.com/Forums/vstudio/en-US/64a201b5-852d-41df-9abe-2ad2645cc937/reading-binary-format-qbasic-with-c?forum=netfxbcl |title=Reading Binary Format (QBasic) with C# |publisher=Social.msdn.microsoft.com |access-date=2016-05-30}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=http://r.789695.n4.nabble.com/Reading-MetaStock-data-format-in-R-td4677240.html |title=Rmetrics - Reading MetaStock data format in R |publisher=R.789695.n4.nabble.com |date=2013-09-30 |access-date=2016-05-30}}&lt;/ref&gt;
[[Image:VAX 11-780 intero.jpg|thumb|[[VAX-11/780]] minicomputer]]

===IEEE 754===
{{Main|IEEE 754}}
As early as in 1976, [[Intel]] was starting the development of a floating-point [[coprocessor]].&lt;ref name="case"&gt;{{cite web |url=http://www.intel.com/content/dam/www/public/us/en/documents/case-studies/floating-point-case-study.pdf |title=Archived copy |access-date=2016-05-30 |dead-url=yes |archive-url=https://web.archive.org/web/20160304114859/http://www.intel.com/content/dam/www/public/us/en/documents/case-studies/floating-point-case-study.pdf |archive-date=2016-03-04}}&lt;/ref&gt;&lt;ref name="story"&gt;{{cite web |url=https://www.cs.berkeley.edu/~wkahan/ieee754status/754story.html |title=An Interview with the Old Man of Floating-Point |publisher=cs.berkeley.edu |date=1998-02-20 |access-date=2016-05-30}}&lt;/ref&gt; Intel hoped to be able to sell a chip containing good implementations of all the operations found in the widely varying maths software libraries.&lt;ref name="case"/&gt;&lt;ref name="conv"&gt;{{cite web |author-last=Woehr |author-first=Jack |url=http://www.drdobbs.com/architecture-and-design/a-conversation-with-william-kahan/184410314 |title=A Conversation with William Kahan &amp;#124; Dr. Dobb's |publisher=drdobbs.com |date=1997-11-01 |access-date=2016-05-30}}&lt;/ref&gt; John Palmer, who managed the project, contacted [[William Kahan]], who suggested that Intel use the floating point of [[Digital Equipment Corporation]]'s (DEC) VAX. The first VAX, the [[VAX-11/780]] had just come out in late 1977, and its floating point was highly regarded. However, seeking to market their chip to the broadest possible market, Intel wanted the best floating point possible, and Kahan went on to draw up specifications. When rumours of Intel's new chip reached its competitors, they started a standardization effort, called [[IEEE 754]], to prevent Intel from gaining too much ground. Kahan got Palmer's permission to participate; he was allowed to explain Intel's design decisions and their underlying reasoning, but not anything related to Intel's implementation architecture.&lt;ref name="case"/&gt;&lt;ref name="story"/&gt;&lt;ref name="conv"/&gt;&lt;ref name="interview"&gt;{{cite web |url=http://www.dr-chuck.com/dr-chuck/papers/columns/r3114.pdf |format=PDF |title=IEEE 754: An Interview with William Kahan |website=dr-chuck.com |access-date=2016-06-02}}&lt;/ref&gt; VAX's floating-point formats differed from MBF only in that it had the sign in the most significant bit.&lt;ref&gt;{{cite web |url=http://nssdc.gsfc.nasa.gov/nssdc/formats/VAXFloatingPoint.htm |title=The VAX-11/780 did not implement the "G" format yet. Although this is not directly apparent from the tables because the structures have been cut up in two-byte words, the byte order is actually the same as on modern CPUs. There isn't enough room in the exponent range for NaNs, Infinity, infinities or denormals.&lt;!-- You can also check the results of ‘?CVS(STRING$(3,0)+CHR$(1)),CVS(STRING$(2,255)+CHR$(127)+CHR$(255))’ in e.g. GW-BASIC against the stated limits for the VAX.--&gt; |website=nssdc.gsfc.nasa.gov |access-date=2016-06-02}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=http://www.ece.cmu.edu/~ece447/s15/lib/exe/fetch.php?media=vax_hwhbk_1979.pdf |format=PDF |title=VAX11 780 |website=Ece.cmu.edu |access-date=2016-06-02}}&lt;/ref&gt; It turned out that for double-precision numbers, an 8-bit exponent isn't wide enough for some wanted operations, e.g. to store the product of two 32-bit numbers.&lt;ref name="kb"/&gt;
[[File:Intel C8087.jpg|thumb|left|[[Intel 8087]] floating-point coprocessor]]
Both Kahan's proposal and a counter-proposal by DEC therefore used 11 bits, like the time-tested [[CDC 6600#60-bit floating point|60-bit floating-point format]] of the [[CDC 6600]] from 1965.&lt;ref name="story"/&gt;&lt;ref name="interview"/&gt;&lt;ref&gt;{{cite web |url=http://ygdes.com/CDC/DesignOfAComputer_CDC6600.pdf |format=PDF |title=Design of a Computer: The Control Data 6600 |author-first=J. E. |author-last=Thornton |website=ygdes.com |access-date=2016-06-02}}&lt;/ref&gt; Kahan's proposal also provided for infinities, which are useful when dealing with division-by-zero conditions; not-a-number values, which are useful when dealing with invalid operations; [[denormal number]]s, which help mitigate problems caused by underflow;&lt;ref name=interview/&gt;&lt;ref&gt;{{cite web |url=https://www.cs.berkeley.edu/~wkahan/ieee754status/why-ieee.pdf |format=PDF |title=Why do we need a floating-point arithmetic standard? |author-first=William Morton |author-last=Kahan |website=cs.berkeley.edu |access-date=2016-06-02}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=https://www.cs.berkeley.edu/~wkahan/JAVAhurt.pdf |format=PDF |title=How Java’s Floating-Point Hurts Everyone Everywhere |author-first1=William Morton |author-last1=Kahan |author-first2=Joseph D. |author-last2=Darcy |website=cs.berkeley.edu |access-date=2016-06-02}}&lt;/ref&gt; and a better balanced [[exponent bias]], which can help avoid overflow and underflow when taking the reciprocal of a number.&lt;ref&gt;{{cite web |url=https://books.google.nl/books?id=sUD8CAAAQBAJ&amp;pg=PA171 |title=Numerical Analysis and Parallel Processing: Lectures given at The Lancaster ... - Peter R. Turner - Google Boeken |publisher=books.google.nl |date=2013-12-21 |access-date=2016-05-30}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=https://www.cs.berkeley.edu/~wkahan/ieee754status/Names.pdf |format=PDF |title=Names for Standardized Floating-Point Formats |website=cs.berkeley.edu |access-date=2016-06-02}}&lt;/ref&gt; In 1980 the [[Intel 8087]] chip was already released,&lt;ref&gt;{{cite web |url=http://micro.magnet.fsu.edu/optics/olympusmicd/galleries/chips/intel8087.html |title=Molecular Expressions: Science, Optics &amp; You - Olympus MIC-D: Integrated Circuit Gallery - Intel 8087 Math Coprocessor |publisher=micro.magnet.fsu.edu |access-date=2016-05-30}}&lt;/ref&gt; but DEC remained opposed, to denormal numbers in particular, because of performance concerns and since it would give DEC a competitive advantage to standardise on DEC's format. The next year DEC had a study done in order to demonstrate that gradual underflow was a bad idea, but the study concluded the opposite, and DEC gave in. In 1985 the standard was ratified, but it had already become the de facto standard a year earlier, implemented by many manufacturers.&lt;ref name="story"/&gt;&lt;ref name="interview"/&gt;&lt;ref&gt;{{cite web |url=https://www.cs.berkeley.edu/~wkahan/ieee754status/IEEE754.PDF |format=PDF |title=IEEE Standard 754 for Binary Floating-Point Arithmetic |author-first=William Morton |author-last=Kahan |website=cs.berkeley.edu |access-date=2016-06-02}}&lt;/ref&gt;

By the time [[QuickBASIC 4.00]] was released, the IEEE 754 standard had become widely adopted&amp;mdash;for example, it was incorporated into Intel's [[Intel 387|387]] coprocessor and every [[x86]] processor from the [[Intel 80486|486]] on.  QuickBASIC versions 4.0 and 4.5 use IEEE 754 floating-point variables by default, but (at least in version 4.5) there is a command-line option for the IDE and the compiler that switches from IEEE to MBF floating-point numbers, to support earlier-written programs that rely on details of the MBF data formats.  [[Visual Basic]] also uses the IEEE 754 format instead of MBF.

=={{anchor|32-bit MBF|40-bit MBF|64-bit MBF}}Technical details==
MBF numbers consist of an 8-bit base-2 [[exponent]] with a bias of 128, so that exponents −127...−1 are represented by ''x'' = 1.'.127 (01h...7Fh), exponents 0...127 are represented by ''x'' = 128...255 (80h...FFh), with a special case for ''x'' = 0 (00h) representing the whole number being zero, a sign [[bit]] (positive mantissa: ''s'' = 0; negative mantissa: ''s'' = 1) and a 23-,&lt;ref name="Steil_2008"/&gt; 31-&lt;ref name="Steil_2008"/&gt; or 55-bit mantissa of the [[significand]].  There is always a 1-bit implied to the left of the explicit mantissa, and the [[radix point]] is located before this [[assumed bit]]&lt;!-- whereas IEEE locates it afterwards --&gt;. The MBF double-precision format provides less scale than the [[IEEE 754]] format, and although the format itself provides almost one extra decimal digit of precision, in practice the stored values are less accurate because IEEE calculations use 80-bit intermediate results, and MBF doesn't.&lt;ref name="kb"/&gt;&lt;ref name="masm50"/&gt;&lt;ref&gt;{{cite web |url=http://community.embarcadero.com/index.php/article/technical-articles/162-programming/14799-converting-between-microsoft-binary-and-ieee-forma |title=Converting between Microsoft Binary and IEEE forma |publisher=Embarcadero |access-date=2016-05-30}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=https://groups.google.com/forum/#!topic/comp.os.msdos.programmer/mDyRI1wolAc |title=Google Groups |website=Groups.google.com |access-date=2016-06-02}}&lt;/ref&gt; Unlike IEEE floating point, MBF doesn't support [[denormal number]]s, [[Infinity|infinities]] or [[NaN]]s.&lt;ref&gt;{{cite web |url=http://www.boyet.com/Articles/MBFSinglePrecision.html |title=julian m bucknall &gt;&gt; Understanding single precision MBF |publisher=boyet.com |access-date=2016-05-30}}&lt;/ref&gt;&lt;!-- By the way, you can easily check this yourself using GW-BASIC. Evaluating ‘?CVS(STRING$(2,0)+CHR$(64)+CHR$(129))’ (for single precision) or ‘?CVD(STRING$(6,0)+CHR$(64)+CHR$(129))’ (for double precision) will yield 1.5 as expected. You can vary the numbers and see what the result is. As you increase the exponent you just get bigger numbers as it reaches 255, instead of infinities and NaNs as in IEEE. If the exponent is zero, the result will equal 0, according to GW-BASIC. --&gt;

MBF single-precision format (32 bits, "6-digit BASIC"):
{| class="wikitable"
|-
! Exponent !! Sign !! Significand
|-
! 8&amp;nbsp;bits,&lt;br/&gt;bit&amp;nbsp;31–24 !! 1&amp;nbsp;bit,&lt;br/&gt;bit&amp;nbsp;23 !! 23&amp;nbsp;bits,&lt;br/&gt;bit&amp;nbsp;22–0 
|-
| xxxxxxxx || s || mmmmmmmmmmmmmmmmmmmmmmm
|}

MBF extended-precision format (40 bits, "9?&lt;!-- is it really 9 digits, not 8? --&gt;-digit BASIC"):
{| class="wikitable"
|-
! Exponent !! Sign !! Significand
|-
! 8&amp;nbsp;bits,&lt;br/&gt;bit&amp;nbsp;39–32 !! 1&amp;nbsp;bit,&lt;br/&gt;bit&amp;nbsp;31 !! 31&amp;nbsp;bits,&lt;br/&gt;bit&amp;nbsp;30–0 
|-
| xxxxxxxx || s || mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
|}

MBF double-precision format (64 bits):
{| class="wikitable"
|-
! Exponent !! Sign !! Significand
|-
! 8&amp;nbsp;bits,&lt;br/&gt;bit&amp;nbsp;63–56 !! 1&amp;nbsp;bit,&lt;br/&gt;bit&amp;nbsp;55 !! 55&amp;nbsp;bits,&lt;br/&gt;bit&amp;nbsp;54–0
|-
| xxxxxxxx || s || mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm 
|}

==Examples==

* "10":&lt;ref name="Steil_2008"/&gt;
: 32-bit format: 84h, 20h, 00h, 00h
: 40-bit format: 84h, 20h, 00h, 00h, 00h

* "1":&lt;ref name="Steil_2008"/&gt;
: 32-bit format: 81h, 00h, 00h, 00h
: 40-bit format: 81h, 00h, 00h, 00h, 00h

* "0":
: 32-bit format: 00h, 00h, 00h, 00h (or 00h, xxh, xxh, xxh)
: 40-bit format: 00h, 00h, 00h, 00h, 00h (or 00h, xxh, xxh, xxh, xxh)

* "0.5":&lt;ref name="Steil_2008"/&gt;
: 32-bit format: 80h, 00h, 00h, 00h
: 40-bit format: 80h, 00h, 00h, 00h, 00h

* "0.25":&lt;ref name="Steil_2008"/&gt;
: 32-bit format: 7Fh, 00h, 00h, 00h
: 40-bit format: 7Fh, 00h, 00h, 00h, 00h

* "-0.5":&lt;ref name="Steil_2008"/&gt;
: 32-bit format: 80h, 80h, 00h, 00h
: 40-bit format: 80h, 80h, 00h, 00h, 00h

* "sqrt(0.5)":&lt;ref name="Steil_2008"/&gt;
: 32-bit format: 80h, 35h, 04h, F3h
: 40-bit format: 80h, 35h, 04h, F3h, 34h

* "sqrt(2)":&lt;ref name="Steil_2008"/&gt;
: 32-bit format: 81h, 35h, 04h, F3h
: 40-bit format: 81h, 35h, 04h, F3h, 34h

* "ln(2)":&lt;ref name="Steil_2008"/&gt;
: 32-bit format: 80h, 31h, 72h, 18h
: 40-bit format: 80h, 31h, 72h, 17h, F8h

* "log&lt;sub&gt;2&lt;/sub&gt;(e)":&lt;ref name="Steil_2008"/&gt;
: 32-bit format: 81h, 38h, AAh, 3Bh
: 40-bit format: 81h, 38h, AAh, 3Bh, 29h

* "pi/2":&lt;ref name="Steil_2008"/&gt;
: 32-bit format: 81h, 49h, 0Fh, DBh
: 40-bit format: 81h, 49h, 0Fh, DAh, A2h

* "2*pi":&lt;ref name="Steil_2008"/&gt;
: 32-bit format: 83h, 49h, 0Fh, DBh
: 40-bit format: 83h, 49h, 0Fh, DAh, A2h
&lt;!--
; these values are /1000 of what the labels say
CON_99999999_9:
:  32-bit format: 91h, 43h, 4Fh, F8h
:  40-bit format: 9Bh, 3Eh, BCh, 1Fh, FDh

CON_999999999:
: 32-bit format: 94h, 74h, 23h, F7h
: 40-bit format: 9Eh, 6Eh, 6Bh, 27h, FEh ; alternative values 
: 40-bit format: 9Eh, 6Eh, 6Bh, 27h, FDh ; alternative values

CON_BILLION:
: 32-bit format: 94h, 74h, 24h, 00h
: 40-bit format: 9Eh, 6Eh, 6Bh, 28h, 00h
--&gt;

==See also==
{{Portal|Computer Science}}
* [[Floating point]]
* [[IEEE 754]] — Standard for Binary Floating-Point Arithmetic
* [[IBM Floating Point Architecture]]

==References==
{{Reflist}}

==External links==
* Microsoft [https://web.archive.org/web/20101026203154/http://support.microsoft.com/kb/140520 provides] a dynamic link library for 16-bit Visual Basic containing functions to convert between MBF data and IEEE 754.
**This library wraps the MBF conversion functions in the 16-bit Visual C(++) CRT.
**These conversion functions will round an IEEE double precision number like ¾ ⋅ 2&lt;sup&gt;−128&lt;/sup&gt; to zero rather than to 2&lt;sup&gt;−128&lt;/sup&gt;.
**They don't support denormals at all: the IEEE or MBF single precision number 2&lt;sup&gt;−128&lt;/sup&gt; will be converted to zero even though it is representable in either format.
**This library is only intended for use with Visual Basic; C(++) programs are expected to call the CRT functions directly.

[[Category:Binary arithmetic]]
[[Category:Computer arithmetic]]
[[Category:Floating point]]</text>
      <sha1>5wmmmdc97jrkegj2zy0eq3bx8sljs8w</sha1>
    </revision>
  </page>
  <page>
    <title>Operator algebra</title>
    <ns>0</ns>
    <id>455987</id>
    <revision>
      <id>865648983</id>
      <parentid>833118245</parentid>
      <timestamp>2018-10-25T08:19:57Z</timestamp>
      <contributor>
        <username>Tea2min</username>
        <id>36029</id>
      </contributor>
      <comment>/* top */ Rewording. See [[Operator algebra#Extremely bad introduction]].</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="4155">In [[functional analysis]], an '''operator algebra''' is an [[algebra over a field|algebra]] of [[continuous function (topology)|continuous]] [[linear operator]]s on a [[topological vector space]] with the multiplication given by the composition of mappings. 

The results obtained in the study of operator algebras are phrased in [[Algebra|algebraic]] terms, while the techniques used are highly analytic.&lt;ref&gt;''Theory of Operator Algebras I'' By Masamichi Takesaki, Springer 2012, p vi&lt;/ref&gt;  Although the study of operator algebras is usually classified as a branch of functional analysis, it has direct applications to [[representation theory]], [[differential geometry]], [[quantum statistical mechanics]], [[quantum information]], and [[quantum field theory]].

==Overview==
Operator algebras can be used to study [[wiktionary:arbitrary|arbitrary]] sets of operators with little algebraic relation ''simultaneously''. From this point of view, operator algebras can be regarded as a generalization of [[spectral theory]] of a single operator. In general operator algebras are non-[[commutative]] [[ring (mathematics)|ring]]s.

An operator algebra is typically required to be [[closure (mathematics)|closed]] in a specified operator [[topology]] inside the algebra of the whole continuous linear operators. In particular, it is a set of operators with both algebraic and topological closure properties. In some disciplines such properties are [[axiom]]ized and algebras with certain topological structure become the subject of the research.

Though algebras of operators are studied in various contexts (for example, algebras of [[pseudo-differential operator]]s acting on spaces of distributions), the term ''operator algebra'' is usually used in reference to algebras of [[bounded operator]]s on a [[Banach space]] or, even more specially in reference to algebras of operators on a [[Separable space|separable]] [[Hilbert space]], endowed with the operator [[norm (mathematics)|norm]] topology.

In the case of operators on a Hilbert space, the [[Hermitian adjoint]] map on operators gives a natural [[Involution (mathematics)|involution]] which provides an additional algebraic structure which can be imposed on the algebra. In this context, the best studied examples are [[self-adjoint]] operator algebras, meaning that they are closed under taking adjoints. These include [[C*-algebra]]s and [[von Neumann algebra]]s. C*-algebras can be easily characterized abstractly by a condition relating the norm, involution and multiplication. Such abstractly defined C*-algebras can be identified to a certain closed subalgebra of the algebra of the continuous linear operators on a suitable Hilbert space. A similar result holds for von Neumann algebras.

Commutative self-adjoint operator algebras can be regarded as the algebra of [[Complex numbers|complex]] valued continuous functions on a [[locally compact space]], or that of measurable functions on a [[measurable space|standard measurable space]]. Thus, general operator algebras are often regarded as a noncommutative generalizations of these algebras, or the structure of the ''base space'' on which the functions are defined. This point of view is elaborated as the philosophy of [[noncommutative geometry]], which tries to study various non-classical and/or pathological objects by noncommutative operator algebras.

Examples of operator algebras which are not self-adjoint include:
*[[nest algebra]]s 
*many [[commutative subspace lattice algebra]]s
*many [[limit algebra]]s

==See also==
*[[Banach algebra]]
*[[Topologies on the set of operators on a Hilbert space]]
*[[Matrix mechanics]]
*[[Vertex operator algebra]]

==References==
{{reflist}}

== Further reading ==
*{{cite book
  | last = Blackadar
  | first = Bruce
  | title = Operator Algebras: Theory of C*-Algebras and von Neumann Algebras
  | publisher = [[Springer-Verlag]]
  | series = Encyclopaedia of Mathematical Sciences
  | year = 2005
  | isbn = 3-540-28486-9 }}
* M. Takesaki, ''Theory of Operator Algebras I'', Springer, 2001.

[[Category:Operator theory]]
[[Category:Functional analysis]]
[[Category:Operator algebras]]</text>
      <sha1>0teetbzc083drxjs1qrumt9j3ppinm1</sha1>
    </revision>
  </page>
  <page>
    <title>Partition (number theory)</title>
    <ns>0</ns>
    <id>104790</id>
    <revision>
      <id>870836341</id>
      <parentid>870766594</parentid>
      <timestamp>2018-11-27T09:09:38Z</timestamp>
      <contributor>
        <username>D.Lazard</username>
        <id>12336988</id>
      </contributor>
      <comment>Reverted 1 edit by [[Special:Contributions/Datolo12|Datolo12]] ([[User talk:Datolo12|talk]]): None change improves the article. ([[WP:TW|TW]])</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="38008">[[File:Ferrer partitioning diagrams.svg|thumb|right|300px|[[Young diagram#Diagrams|Young diagrams]] associated to the partitions of the positive integers 1 through 8.  They are arranged so that images under the reflection about the main diagonal of the square are conjugate partitions.]]
[[File:Partitions of n with biggest addend k.svg|thumb|right|300px|Partitions of ''n'' with biggest addend ''k'']]

In [[number theory]] and [[combinatorics]], a '''partition''' of a positive [[integer]] ''n'', also called an '''integer partition''', is a way of writing ''n'' as a [[summation|sum]] of positive integers. Two sums that differ only in the order of their [[summand]]s are considered the same partition. (If order matters, the sum becomes a [[composition (combinatorics)|composition]].)  For example, 4 can be partitioned in five distinct ways:

:4
:3 + 1
:2 + 2
:2 + 1 + 1
:1 + 1 + 1 + 1

The order-dependent [[Composition (combinatorics)|composition]] 1 + 3 is the same partition as 3 + 1, while the two distinct compositions 1 + 2 + 1 and 1 + 1 + 2 represent the same partition 2 + 1 + 1.

A summand in a partition is also called a '''part'''. The number of partitions of ''n'' is given by the partition function ''p''(''n''). So ''p''(4) = 5. The notation ''&amp;lambda;'' &amp;#x22A2; ''n'' means that ''&amp;lambda;'' is a partition of ''n''.

Partitions can be graphically visualized with [[Young diagram]]s or [[Ferrers diagram]]s. They occur in a number of branches of [[mathematics]] and [[physics]], including the study of [[symmetric polynomial]]s, the [[symmetric group]] and in [[group representation|group representation theory]] in general.

==Examples==
The seven partitions of 5 are:
* 5
* 4 + 1
* 3 + 2
* 3 + 1 + 1
* 2 + 2 + 1
* 2 + 1 + 1 + 1
* 1 + 1 + 1 + 1 + 1

In some sources partitions are treated as the sequence of summands, rather than as an expression with plus signs.  For example, the partition 2&amp;nbsp;+&amp;nbsp;2&amp;nbsp;+&amp;nbsp;1 might instead be written as the tuple {{nowrap|(2, 2, 1)}} or in the even more compact form {{nowrap|(2&lt;sup&gt;2&lt;/sup&gt;, 1)}} where the superscript indicates the number of repetitions of a term.

==Representations of partitions==
There are two common diagrammatic methods to represent partitions: as Ferrers diagrams, named after [[Norman Macleod Ferrers]], and as Young diagrams, named after the British mathematician [[Alfred Young]].  Both have several possible conventions; here, we use ''English notation'', with diagrams aligned in the upper-left corner.

===Ferrers diagram &lt;!-- [[Ferrers diagram]] and [[Ferrers diagrams]] currently redirect to this section. --&gt; ===
The partition 6&amp;nbsp;+&amp;nbsp;4&amp;nbsp;+&amp;nbsp;3&amp;nbsp;+&amp;nbsp;1 of the positive number 14 can be represented
by the following diagram:

{|
|- style="vertical-align:top; text-align:left;"
[[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]]
|- style="vertical-align:top; text-align:center;"
|- style="vertical-align:top; text-align:center;"
|}
The 14 circles are lined up in 4 rows, each having the size of a part of the partition. The diagrams for the 5 partitions of the number 4 are listed below:

{|
|- style="vertical-align:top; text-align:left;"
| [[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]] ||
| [[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]] ||
| [[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]] ||
| [[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]] ||
| [[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]]
|- style="vertical-align:top; text-align:center;"
| 4 || =
| 3 + 1 || =
| 2 + 2 || =
| 2 + 1 + 1 || =
| 1 + 1 + 1 + 1
|}

===Young diagram===
{{Main|Young diagram}}
An alternative visual representation of an integer partition is its ''Young diagram''.  Rather than representing a partition with dots, as in the Ferrers diagram, the Young diagram uses boxes or squares.  Thus, the Young diagram for the partition 5 + 4 + 1 is
:[[Image:Young diagram for 541 partition.svg|100px]]
while the Ferrers diagram for the same partition is
:{|
|- style="vertical-align:top; text-align:left;"
| [[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]]
|- style="vertical-align:top; text-align:center;"
|}

While this seemingly trivial variation doesn't appear worthy of separate mention, Young diagrams turn out to be extremely useful in the study of [[symmetric functions]] and [[group representation theory]]: in particular, filling the boxes of Young diagrams with numbers (or sometimes more complicated objects) obeying various rules leads to a family of objects called [[Young tableaux]], and these tableaux have combinatorial and representation-theoretic significance.{{sfn|Andrews|1976|p=199}} As a type of shape made by adjacent squares joined together, Young diagrams are a special kind of [[polyomino]].&lt;ref&gt;{{citation
 | last = Josuat-Vergès | first = Matthieu
 | arxiv = 0801.4928
 | doi = 10.1016/j.jcta.2010.03.006
 | issue = 8
 | journal = [[Journal of Combinatorial Theory]]
 | mr = 2677686
 | pages = 1218–1230
 | series = Series A
 | title = Bijections between pattern-avoiding fillings of Young diagrams
 | volume = 117
 | year = 2010}}.&lt;/ref&gt;

==Partition function==
In [[number theory]], the '''partition function''' ''p''(''n'') represents the [[number]] of possible partitions of a natural number ''n'', which is to say the number of distinct  ways of representing ''n'' as a [[summation|sum]] of natural numbers (with order irrelevant).  By convention ''p''(0) = 1, ''p''(''n'') = 0 for ''n'' negative.

The first few values of the partition function, starting with ''p''(0)&amp;nbsp;=&amp;nbsp;1, are:
:1, 1, 2, 3, 5, 7, 11, 15, 22, 30, 42, 56, 77, 101, 135, 176, 231, 297, 385, 490, 627, 792, 1002, 1255, 1575, 1958, 2436, 3010, 3718, 4565, 5604, … {{OEIS|id=A000041}}.

The exact value of ''p''(''n'') for larger values of ''n'', is for example ''p''(100) = 190,569,292, ''p''(1000) is 24,061,467,864,032,622,473,692,149,727,991 or approximately 2.40615{{e|31}},&lt;ref&gt;{{Cite OEIS|sequencenumber=A070177}}&lt;/ref&gt; and ''p''(10000) is 36,167,251,325,...,906,916,435,144 or approximately 3.61673{{e|106}}.

{{As of|2017|September}}, the largest known [[prime number]] that counts a number of partitions is ''p''(221444161), with 16569 decimal digits.&lt;ref&gt;{{cite web|url=http://primes.utm.edu/top20/page.php?id=54|first=Chris K.|last=Caldwell|title=Partitions|website=The Top Twenty|date=2017}}&lt;/ref&gt;

=== Generating function ===
{{main|Pentagonal number theorem}}
The [[generating function]] for ''p''(''n'') is given by{{sfn|Abramowitz|Stegun|1964|p=825}}

:&lt;math&gt;\sum_{n=0}^\infty p(n)x^n = \prod_{k=1}^\infty \left(\frac {1}{1-x^k} \right).&lt;/math&gt;

Expanding each factor on the right-hand side as a [[geometric series]], one can rewrite it as

:(1 + ''x'' + ''x''&lt;sup&gt;2&lt;/sup&gt; + ''x''&lt;sup&gt;3&lt;/sup&gt; + ...)(1 + ''x''&lt;sup&gt;2&lt;/sup&gt; + ''x''&lt;sup&gt;4&lt;/sup&gt; + ''x''&lt;sup&gt;6&lt;/sup&gt; + ...)(1 + ''x''&lt;sup&gt;3&lt;/sup&gt; + ''x''&lt;sup&gt;6&lt;/sup&gt; + ''x''&lt;sup&gt;9&lt;/sup&gt; + ...) ....

The ''x''&lt;sup&gt;''n''&lt;/sup&gt; term in this product counts the number of ways to write

:''n'' = ''a''&lt;sub&gt;1&lt;/sub&gt; + 2''a''&lt;sub&gt;2&lt;/sub&gt; + 3''a''&lt;sub&gt;3&lt;/sub&gt; + ... = (1 + 1 + ... + 1) + (2 + 2 + ... + 2) + (3 + 3 + ... + 3) + ...,

where each number ''i'' appears ''a''&lt;sub&gt;''i''&lt;/sub&gt; times. This is precisely the definition of a partition of ''n'', so our product is the desired generating function. More generally, the generating function for the partitions of ''n'' into numbers from a set ''A'' can be found by taking only those terms in the product where ''k'' is an element of ''A''. This result is due to [[Leonhard Euler|Euler]].

The formulation of Euler's generating function is a special case of a [[q-Pochhammer symbol|''q''-Pochhammer symbol]] and is similar to the product formulation of many [[modular form]]s, and specifically the [[Dedekind eta function]].

The denominator of the product is [[Euler's function]] and can be written, by the [[pentagonal number theorem]], as
:&lt;math&gt;(1-x)(1-x^2)(1-x^3) \cdots = \sum_{k=-\infty}^{\infty} (-1)^k x^{k(3k-1)/2} = 1 - x - x^2 + x^5 + x^7 - x^{12} - x^{15} + x^{22} + x^{26} - \cdots.&lt;/math&gt;
where the exponents of ''x'' on the right hand side are the [[pentagonal number|generalized pentagonal numbers]]; i.e., P&lt;sub&gt;k&lt;/sub&gt; = k(3k-1)/2 for ''k'' = 1, −1, 2, −2, 3, ... The signs in the summation alternate as &lt;math&gt;(-1)^{|k|-1}&lt;/math&gt;.  This theorem can be used to derive a recurrence for the partition function:
:&lt;math&gt;
p(n) = p(n-1) + p(n-2)-p(n-5)-p(n-7)+p(n-12)+p(n-15)-p(n-22)-\cdots 
&lt;/math&gt;
where ''p''(0) is taken to equal 1, and ''p''(''k'') is taken to be zero for negative&amp;nbsp;''k''.  (Thus, although the sum on the right side appears infinite, its terms are nonzero if and only if ''k'' is an integer in the (finite) range &lt;math&gt;-\frac{\sqrt{24n+1}-1}{6} \leq k \leq \frac{\sqrt{24n+1}+1}{6}&lt;/math&gt;.)

=== Congruences ===
{{Main|Ramanujan's congruences}}
[[Srinivasa Ramanujan]] is credited with discovering that congruences in the number of partitions exist for arguments that are integers ending in 4 and 9.{{sfn|Hardy|Wright|2008|p=380}}

:&lt;math&gt;p(5k+4)\equiv 0 \pmod 5&lt;/math&gt;

For instance, the number of partitions for the integer 4 is 5. For the integer 9, the number of partitions is 30; for 14 there are 135 partitions. This is implied by the identity

:&lt;math&gt;  \sum_{k=0}^\infty p(5k+4)x^k = 5~ \frac{ (x^5)^5_\infty } {(x)^6_\infty},&lt;/math&gt;

also by Ramanujan,&lt;ref&gt;{{cite web|author=Berndt|author2=Ono|title=Ramanujan's Unpublished Manuscript on the Partition and Tau Functions with Proofs and Commentary|url=http://www.math.wisc.edu/~ono/reprints/044.pdf|deadurl=yes|archiveurl=https://web.archive.org/web/20110927023150/http://www.math.wisc.edu/~ono/reprints/044.pdf|archivedate=2011-09-27|df=}}&lt;/ref&gt;{{sfn|Ono|2004|p=87}} where the series &lt;math&gt;(x)_\infty&lt;/math&gt; is defined by

:&lt;math&gt;(x)_\infty = \prod_{m=1}^\infty(1-x^m).&lt;/math&gt;

A short proof of this result is obtained from the partition function generating function [[generating function#Congruences for the partition function|here]].

He also discovered congruences related to 7 and 11:{{sfn|Hardy|Wright|2008|p=380}}

:&lt;math&gt;\begin{align}
 p(7k + 5) &amp;\equiv 0 \pmod 7,\\
 p(11k + 6) &amp;\equiv 0 \pmod {11},
\end{align}&lt;/math&gt;

and proved the identity{{sfn|Ono|2004|p=87}}

:&lt;math&gt;
  \sum_{k=0}^\infty p(7k+5)x^k =
   7~ \frac{ (x^7)^3_\infty} {(x)^4_\infty}
   +49x ~ \frac{ (x^7)^7_\infty } {(x)^8_\infty}.
&lt;/math&gt;

Since 5, 7, and 11 are consecutive [[prime number|primes]], one might think that there would be such a congruence for the next prime 13, &lt;math&gt;p(13k + a) \equiv 0 \pmod{13}&lt;/math&gt; for some ''a''.  This is, however, false. In fact, it can be shown that there is no congruence of the form &lt;math&gt;p(bk + a) \equiv 0 \pmod{b}&lt;/math&gt; for any prime ''b'' other than 5, 7, or 11.
&lt;!--
Is this a reference to Boylan &amp; Ahlgren [http://www.math.sc.edu/~boylan/reprints/nomoreramafinal.pdf]?
The article should probably at least mention the difference between the congruences that don't exist ''p''(''bk''+''a'') = 0 mod ''b'' vs. the ones that do, p(bck+a) = 0 (mod b) for clarity's sake.
--&gt;

In the 1960s, [[A. O. L. Atkin]] of the [[University of Illinois at Chicago]] discovered additional congruences for small prime moduli. For example:
:&lt;math&gt;p(11^3 \cdot 13 \cdot k + 237)\equiv 0 \pmod {13}.&lt;/math&gt;

{{harvtxt|Ono|2000}} proved that there are such congruences for every prime modulus greater than 3. Later, {{harvtxt|Ahlgren|Ono|2001}} showed there are partition congruences modulo every integer [[coprime integers|coprime]] to&amp;nbsp;6.

=== Partition function formulas ===
====Approximation formulas====

Approximation formulas exist that are faster to calculate than the exact formula given above.

An [[asymptotic analysis|asymptotic]] expression for ''p''(''n'') is given by

:&lt;math&gt;p(n) \sim \frac {1} {4n\sqrt3} \exp\left({\pi \sqrt {\frac{2n}{3}}}\right)&lt;/math&gt; as &lt;math&gt;n\rightarrow \infty&lt;/math&gt;.

This [[asymptotic formula]] was first obtained by [[G. H. Hardy]] and [[Ramanujan]] in 1918 and independently by [[J. V. Uspensky]] in 1920. Considering ''p''(1000), the asymptotic formula gives about 2.4402&amp;nbsp;&amp;times;&amp;nbsp;10&lt;sup&gt;31&lt;/sup&gt;, reasonably close to the exact answer given above (1.415% larger than the true value).

Hardy and Ramanujan obtained an [[asymptotic expansion]] with this approximation as the first term:
:&lt;math&gt;p(n) \sim \frac{1}{2\pi \sqrt{2}} \sum_{k=1}^v  A_k(n)\sqrt{k} \cdot
\frac{d}{dn} \left({\frac {1} {\sqrt{n-\frac{1}{24}}} \exp \left[ {\frac{\pi}{k}
    \sqrt{\frac{2}{3}\left(n-\frac{1}{24}\right)}}\,\,\,\right]}\right) ,
&lt;/math&gt;
where
:&lt;math&gt;A_k(n) = \sum_{0 \le m &lt; k, \; (m, k) = 1}
e^{ \pi i \left( s(m, k) - 2 nm/k \right) }.&lt;/math&gt;

Here, the notation (''m'',&amp;nbsp;''k'')&amp;nbsp;=&amp;nbsp;1 implies that the sum should occur only over the values of ''m'' that are [[relatively prime]] to ''k''. The function ''s''(''m'',&amp;nbsp;''k'') is a [[Dedekind sum]].

The error after ''v'' terms is of the order of the next term, and ''v'' may be taken to be of the order of &lt;math&gt;\sqrt n&lt;/math&gt;.  As an example, Hardy and Ramanujan showed that ''p''(200) is the nearest integer to the sum of the first ''v''=5 terms of the series.

In 1937, [[Hans Rademacher]] was able to improve on Hardy and Ramanujan's results by providing a [[convergent series]] expression for ''p''(''n''). It is{{sfn|Andrews|1976|p=69}}
:&lt;math&gt;p(n)=\frac{1}{\pi \sqrt{2}} \sum_{k=1}^\infty A_k(n)\sqrt{k} \cdot
\frac{d}{dn} \left({
    \frac {1} {\sqrt{n-\frac{1}{24}}}
    \sinh \left[ {\frac{\pi}{k}
    \sqrt{\frac{2}{3}\left(n-\frac{1}{24}\right)}}\,\,\,\right]
}\right) .
&lt;/math&gt;

The proof of Rademacher's formula involves [[Ford circle]]s, [[Farey sequence]]s, [[modular group|modular symmetry]] and the [[Dedekind eta function]] in a central way.

It may be shown that the ''k''-th term of Rademacher's series is of the order
:&lt;math&gt;\exp\left(\frac{\pi}{k}\sqrt\frac{2n}{3} \right) , &lt;/math&gt;
so that the first term gives the Hardy–Ramanujan asymptotic approximation.

[[Paul Erdős]] published an elementary proof of the asymptotic formula for ''p''(''n'') in 1942.&lt;ref name=erdos42&gt;{{cite journal | zbl=0061.07905 | last=Erdős | first=Pál | authorlink=Paul Erdős | title=On an elementary proof of some asymptotic formulas in the theory of partitions | journal=Ann. Math. | series=(2) | volume=43 | pages=437–450 | year=1942 | doi=10.2307/1968802}}&lt;/ref&gt;{{sfn|Nathanson|2000|p=456}}

Techniques for implementing the Hardy–Ramanujan–Rademacher formula efficiently on a computer are discussed in Johansson,&lt;ref&gt;{{cite journal|first=F.|last=Johansson|title=Efficient implementation of the Hardy–Ramanujan–Rademacher formula|journal=LMS Journal of Computation and Mathematics|volume=15|date=2012|pages=341–59|url=http://journals.cambridge.org/action/displayAbstract?fromPage=online&amp;aid=8710297}}&lt;/ref&gt; where it is shown that ''p''(''n'') can be computed in softly optimal time ''O''(''n''&lt;sup&gt;1/2+&amp;epsilon;&lt;/sup&gt;). The largest value of the partition function computed exactly is ''p''(10&lt;sup&gt;20&lt;/sup&gt;), which has slightly more than 11 billion digits.&lt;ref&gt;{{cite web|url=http://fredrikj.net/blog/2014/03/new-partition-function-record/|title=New partition function record: p(10&lt;sup&gt;20&lt;/sup&gt;) computed|date=March 2, 2014|first=Fredrik|last=Johansson}}&lt;/ref&gt;

====Other recurrence relations====
A recurrence relation for &lt;math&gt;p(n)&lt;/math&gt; can be given in terms of the [[divisor function|sum of divisors function]] {{math|''σ''}}:{{citation needed|date=April 2017}} 
:&lt;math&gt;
p(n)  = \frac{1}{n} \sum_{k=0}^{n-1} \sigma(n-k) p(k).
&lt;/math&gt;
If ''q''(''n'') denotes the number of partitions of ''n'' with no repeated parts then also{{citation needed|date=April 2017}}
:&lt;math&gt;p(n) = \sum_{k=0}^{\left\lfloor n/2 \right\rfloor} q(n-2k) p(k). 
&lt;/math&gt;

==Restricted partitions==
In both combinatorics and number theory, families of partitions subject to various restrictions are often studied.&lt;ref&gt;{{cite journal|last=Alder|first=Henry L.|title=Partition identities - from Euler to the present|journal=American Mathematical Monthly|volume=76|year=1969|pages=733–746|url=http://www.maa.org/programs/maa-awards/writing-awards/partition-identities-from-euler-to-the-present|doi=10.2307/2317861}}&lt;/ref&gt;  This section surveys a few such restrictions.

===Conjugate and self-conjugate partitions===
{{anchor|Conjugate partitions}}
If we flip the diagram of the partition 6 + 4 + 3 + 1 along its main diagonal, we obtain another partition of 14:

{|
|- style="vertical-align:top; text-align:left;"
| [[File:RedDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]][[File:RedDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:RedDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]]
| style="vertical-align:middle;"| ↔
| [[File:RedDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]][[File:RedDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:RedDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]]
|- style="vertical-align:top; text-align:center;"
| 6 + 4 + 3 + 1
| =
| 4 + 3 + 3 + 2 + 1 + 1
|}

By turning the rows into columns, we obtain the partition 4&amp;nbsp;+&amp;nbsp;3&amp;nbsp;+&amp;nbsp;3&amp;nbsp;+&amp;nbsp;2&amp;nbsp;+&amp;nbsp;1&amp;nbsp;+&amp;nbsp;1 of the number 14. Such partitions are said to be ''conjugate'' of one another.{{sfn|Hardy|Wright|2008|p=362}} In the case of the number 4, partitions 4 and 1&amp;nbsp;+&amp;nbsp;1&amp;nbsp;+&amp;nbsp;1&amp;nbsp;+&amp;nbsp;1 are conjugate pairs, and partitions 3&amp;nbsp;+&amp;nbsp;1 and 2&amp;nbsp;+&amp;nbsp;1&amp;nbsp;+&amp;nbsp;1 are conjugate of each other. Of particular interest is the partition 2&amp;nbsp;+&amp;nbsp;2, which has itself as conjugate. Such a partition is said to be ''self-conjugate''.{{sfn|Hardy|Wright|2008|p=368}}

'''Claim''': The number of self-conjugate partitions is the same as the number of partitions with distinct odd parts.

'''Proof (outline)''': The crucial observation is that every odd part can be "''folded''" in the middle to form a self-conjugate diagram:

{|
|-
| style="vertical-align:top;"| [[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:RedDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]
| style="vertical-align:top;"| &amp;nbsp; ↔ &amp;nbsp;
| style="vertical-align:top;"| [[File:RedDot.svg|16px|*]][[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]]
|}

One can then obtain a bijection between the set of partitions with distinct odd parts and the set of self-conjugate partitions, as illustrated by the following example:

{|
|-
| valign="top" | 
[[File:GrayDot.svg|16px|o]][[File:GrayDot.svg|16px|o]][[File:GrayDot.svg|16px|o]][[File:GrayDot.svg|16px|o]][[File:GrayDot.svg|16px|o]][[File:GrayDot.svg|16px|o]][[File:GrayDot.svg|16px|o]][[File:GrayDot.svg|16px|o]][[File:GrayDot.svg|16px|o]]
&lt;br /&gt;
[[File:RedDot.svg|16px|*]][[File:RedDot.svg|16px|*]][[File:RedDot.svg|16px|*]][[File:RedDot.svg|16px|*]][[File:RedDot.svg|16px|*]][[File:RedDot.svg|16px|*]][[File:RedDot.svg|16px|*]]
&lt;br /&gt;
[[File:BlackDot.svg|16px|x]][[File:BlackDot.svg|16px|x]][[File:BlackDot.svg|16px|x]]
| style="vertical-align:middle;"| ↔
| valign="top" | [[File:GrayDot.svg|16px|o]][[File:GrayDot.svg|16px|o]][[File:GrayDot.svg|16px|o]][[File:GrayDot.svg|16px|o]][[File:GrayDot.svg|16px|o]]&lt;br /&gt;[[File:GrayDot.svg|16px|o]][[File:RedDot.svg|16px|*]][[File:RedDot.svg|16px|*]][[File:RedDot.svg|16px|*]][[File:RedDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|o]][[File:RedDot.svg|16px|*]][[File:BlackDot.svg|16px|x]][[File:BlackDot.svg|16px|x]]&lt;br /&gt;[[File:GrayDot.svg|16px|o]][[File:RedDot.svg|16px|*]][[File:BlackDot.svg|16px|x]]&lt;br /&gt;[[File:GrayDot.svg|16px|o]][[File:RedDot.svg|16px|*]]
|- style="vertical-align:top; text-align:center;"
| 9 + 7 + 3
| =
| 5 + 5 + 4 + 3 + 2
|- style="vertical-align:top; text-align:center;"
| Dist. odd
|
| self-conjugate
|}

===Odd parts and distinct parts {{anchor|Euler's partition theorem}}===
Among the 22 partitions of the number 8, there are 6 that contain only ''odd parts'':
* 7 + 1
* 5 + 3
* 5 + 1 + 1 + 1
* 3 + 3 + 1 + 1
* 3 + 1 + 1 + 1 + 1 + 1
* 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1

Alternatively, we could count partitions in which no number occurs more than once. Such a partition is called a ''partition with distinct parts''. If we count the partitions of 8 with distinct parts, we also obtain 6:
* 8
* 7 + 1
* 6 + 2
* 5 + 3
* 5 + 2 + 1
* 4 + 3 + 1

For all positive numbers the number of partitions with odd parts equals the number of partitions with distinct parts.{{sfn|Hardy|Wright|2008|p=365}} This result was proved by [[Leonhard Euler]] in 1748&lt;ref&gt;{{cite book|author-link=George Andrews (mathematician)|last=Andrews|first=George E.|title=Number Theory|publisher=W. B. Saunders Company|location=Philadelphia|date=1971|edition=Dover|pp= 149–50}}&lt;/ref&gt; and is a special case of [[Glaisher's theorem]].

For every type of restricted partition there is a corresponding function for the number of partitions satisfying the given restriction. An important example is ''q''(''n''), the number of partitions of ''n'' into distinct parts.&lt;ref&gt;Notation follows {{harvnb|Abramowitz| Stegun|1964|p=825}}&lt;/ref&gt; The first few values of ''q''(''n'') are (starting with ''q''(0)=1):
:1, 1, 1, 2, 2, 3, 4, 5, 6, 8, 10, … {{OEIS|id=A000009}}.

The [[generating function]] for ''q''(''n'') (partitions into distinct parts) is given by&lt;ref&gt;{{harvnb|Abramowitz|Stegun|1964|p=825}}, 24.2.2 eq. I(B)&lt;/ref&gt; 
:&lt;math&gt;\sum_{n=0}^\infty q(n)x^n = \prod_{k=1}^\infty (1+x^k) = \prod_{k=1}^\infty \frac {1}{1-x^{2k-1}} .&lt;/math&gt;

The second product can be written ϕ(''x''&lt;sup&gt;2&lt;/sup&gt;) / ϕ(''x'') where ϕ is Euler's function; the pentagonal number theorem can be applied to this as well giving a recurrence for ''q'':&lt;ref&gt;{{harvnb|Abramowitz|Stegun|1964|p=826}}, 24.2.2 eq. II(A)&lt;/ref&gt; 
:''q''(''k'') = ''a''&lt;sub&gt;''k''&lt;/sub&gt; + ''q''(''k'' &amp;minus; 1) + ''q''(''k'' &amp;minus; 2) &amp;minus; ''q''(''k'' &amp;minus; 5) &amp;minus; ''q''(''k'' &amp;minus; 7) + ''q''(''k'' &amp;minus; 12) + ''q''(''k'' &amp;minus; 15) &amp;minus; ''q''(''k'' &amp;minus; 22) &amp;minus; ...
where ''a''&lt;sub&gt;''k''&lt;/sub&gt; is (&amp;minus;1)&lt;sup&gt;''m''&lt;/sup&gt; if ''k'' = 3''m''&lt;sup&gt;2&lt;/sup&gt; &amp;minus; ''m'' for some integer ''m'' and is 0 otherwise.

===Restricted part size or number of parts===
By taking conjugates, the number {{math|''p''&lt;sub&gt;''k''&lt;/sub&gt;(''n'')}} of partitions of {{math|''n''}} into exactly ''k'' parts is equal to the number of partitions of {{math|''n''}} in which the largest part has size {{math|''k''}}.&lt;ref&gt;Here the notation follows that of {{harvnb|Stanley|1999}}, Section 1.&lt;/ref&gt;  The function {{math|''p''&lt;sub&gt;''k''&lt;/sub&gt;(''n'')}} satisfies the recurrence
: {{math|1=''p''&lt;sub&gt;''k''&lt;/sub&gt;(''n'') = ''p''&lt;sub&gt;''k''&lt;/sub&gt;(''n'' − ''k'') + ''p''&lt;sub&gt;''k''−1&lt;/sub&gt;(''n'' − 1)}}
with initial values {{math|1=''p''&lt;sub&gt;0&lt;/sub&gt;(0) = 1}} and {{math|1=''p''&lt;sub&gt;''k''&lt;/sub&gt;(''n'') = 0}} if {{math|''n'' &amp;le; 0 or ''k'' &amp;le; 0}}. This recurrence is correct because {{math|1=''p''&lt;sub&gt;''k''&lt;/sub&gt;(''n'' − ''k'')}} counts the partitions of {{math|1=''n''}} where the smallest part is greater than ''1'' (remove {{math|1=''k''}} ''1'''s and add them to each partition) and {{math|1=''p''&lt;sub&gt;''k''−1&lt;/sub&gt;(''n'' − 1)}} counts the partitions where the smallest part is ''1''. One recovers the function ''p''(''n'') by
:&lt;math&gt;
p(n) = \sum_{k = 1}^n p_k(n).
&lt;/math&gt;

One possible generating function for such partitions, taking ''k'' fixed and ''n'' variable, is 
: &lt;math&gt; \sum_{n \geq 0} p_k(n) x^n = x^k \cdot \prod_{i = 1}^k \frac{1}{1 - x^i}.&lt;/math&gt;

More generally, if ''T'' is a set of positive integers then the number of partitions of ''n'', all of whose parts belong to ''T'', has [[generating function]] 
:&lt;math&gt;\prod_{t \in T}(1-x^t)^{-1}.&lt;/math&gt;
This can be used to solve [[change-making problem]]s (where the set ''T'' specifies the available coins).  As two particular cases, one has that the number of partitions of ''n'' in which all parts are 1 or 2 (or, equivalently, the number of partitions of ''n'' into 1 or 2 parts) is
:&lt;math&gt;\left \lfloor \frac {n}{2}+1 \right \rfloor ,&lt;/math&gt;
and the number of partitions of ''n'' in which all parts are 1, 2 or 3 (or, equivalently, the number of partitions of ''n'' into at most three parts) is the nearest integer to (''n'' + 3)&lt;sup&gt;2&lt;/sup&gt; / 12.&lt;ref&gt;{{cite book|last=Hardy|first=G.H.|title=Some Famous Problems of the Theory of Numbers|publisher=Clarendon Press|date=1920}}&lt;/ref&gt;

====Asymptotics====
The asymptotic expression for ''p''(''n'') implies that

:&lt;math&gt; \log p(n) \sim C \sqrt n \mbox { as } n\rightarrow \infty&lt;/math&gt;

where &lt;math&gt;C = \pi\sqrt\frac23&lt;/math&gt;.{{sfn|Andrews|1976|pp=70,97}}

If ''A'' is a set of natural numbers, we let ''p''&lt;sub&gt;''A''&lt;/sub&gt;(''n'') denote the number of partitions
of ''n'' into elements of ''A''.  If ''A'' possesses positive [[natural density]] α then

:&lt;math&gt; \log p_A(n) \sim C \sqrt{\alpha n}  &lt;/math&gt;

and conversely if this asymptotic property holds for ''p''&lt;sub&gt;''A''&lt;/sub&gt;(''n'') then ''A'' has natural density α.{{sfn|Nathanson|2000|pp=475-85}}  This result was stated, with a sketch of proof, by Erdős in 1942.&lt;ref name=erdos42/&gt;{{sfn|Nathanson|2000|p=495}}

If ''A'' is a finite set, this analysis does not apply (the density of a finite set is zero).  If ''A'' has ''k'' elements whose greatest common divisor is 1, then{{sfn|Nathanson|2000|pp=458-64}}

:&lt;math&gt; p_A(n) = \left(\prod_{a \in A} a^{-1}\right) \cdot \frac{n^{k-1}}{(k-1)!} + O(n^{k-2}) . &lt;/math&gt;

===Partitions in a rectangle and Gaussian binomial coefficients===
{{Main|Gaussian binomial coefficient}}
One may also simultaneously limit the number and size of the parts.  Let ''p''(''N'', ''M''; ''n'') denote the number of partitions of ''n'' with at most ''M'' parts, each of size at most ''N''.  Equivalently, these are the partitions whose Young diagram fits inside an ''M'' × ''N'' rectangle.  There is a recurrence relation

:&lt;math&gt;p(N,M;n) = p(N,M-1;n) + p(N-1,M;n-M) &lt;/math&gt;

obtained by observing that &lt;math&gt;p(N,M;n) - p(N,M-1;n)&lt;/math&gt; counts the partitions of ''n'' into exactly ''M'' parts of size at most ''N'', and subtracting 1 from each part of such a partitions yields a partition of ''n'' − ''M'' into at most ''M'' parts.{{sfn|Andrews|1976|pp=33–34}}

The [[Gaussian binomial coefficient]] is defined as:
:&lt;math&gt;{k+\ell \choose \ell}_q = {k+\ell \choose k}_q = \frac{\prod^{k+\ell}_{j=1}(1-q^j)}{\prod^{k}_{j=1}(1-q^j)\prod^{\ell}_{j=1}(1-q^j)}.&lt;/math&gt;
The Gaussian binomial coefficient is related to the [[generating function]] of ''p''(''N'', ''M''; ''n'') by the equality
:&lt;math&gt;\sum^{MN}_{n=0}p(N,M;n)q^n = {M+N \choose M}_q. &lt;/math&gt;

==Rank and Durfee square==
{{main|Durfee square}}
The ''rank'' of a partition is the largest number ''k'' such that the partition contains at least ''k'' parts of size at least ''k''.  For example, the partition&amp;nbsp;4&amp;nbsp;+&amp;nbsp;3&amp;nbsp;+&amp;nbsp;3&amp;nbsp;+&amp;nbsp;2&amp;nbsp;+&amp;nbsp;1&amp;nbsp;+&amp;nbsp;1 has rank 3 because it contains 3 parts that are ≥&amp;nbsp;3, but does not contain 4 parts that are&amp;nbsp;≥&amp;nbsp;4.  In the Ferrers diagram or Young diagram of a partition of rank ''r'', the ''r'' × ''r'' square of entries in the upper-left is known as the [[Durfee square]]:

:{|
|- style="vertical-align:top; text-align:left;"
| [[File:RedDot.svg|16px|*]][[File:RedDot.svg|16px|*]][[File:RedDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:RedDot.svg|16px|*]][[File:RedDot.svg|16px|*]][[File:RedDot.svg|16px|*]]&lt;br /&gt;[[File:RedDot.svg|16px|*]][[File:RedDot.svg|16px|*]][[File:RedDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]][[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]]&lt;br /&gt;[[File:GrayDot.svg|16px|*]]
|}

The Durfee square has applications within combinatorics in the proofs of various partition identities.&lt;ref&gt;see, e.g., {{harvnb|Stanley|1999|p=58}}&lt;/ref&gt;  It also has some practical significance in the form of the [[h-index]].

A different statistic is also sometimes called the [[rank of a partition]] (or Dyson rank), namely, the difference &lt;math&gt;\lambda_k - k&lt;/math&gt; for a partition of ''k'' parts with largest part &lt;math&gt;\lambda_k&lt;/math&gt;.  This statistic (which is unrelated to the one described above) appears in the study of [[Ramanujan congruences]].

==Young's lattice==
{{main|Young's lattice}}
There is a natural [[partial order]] on partitions given by inclusion of Young diagrams.  This partially ordered set is known as ''[[Young's lattice]]''.  The lattice was originally defined in the context of [[representation theory]], where it is used to describe of the [[irreducible representation]]s of [[symmetric group]]s ''S''&lt;sub&gt;''n''&lt;/sub&gt; for all ''n'', together with their branching properties, in characteristic zero.  It also has received significant study for its purely combinatorial properties; notably, it is the motivating example of a [[differential poset]].

== See also ==
{{Commons category|Integer partitions}}
{{div col|colwidth=30em}}
* [[Rank of a partition]], a different notion of ''rank''
* [[Crank of a partition]]
* [[Dominance order]]
* [[Factorization]]
* [[Integer factorization]]
* [[Partition of a set]]
* [[Stars and bars (combinatorics)]]
* [[Plane partition]]
* [[Polite number]], defined by partitions into consecutive integers
* [[Multiplicative partition]]
* [[Twelvefold way]]
* [[Ewens's sampling formula]]
* [[Faà di Bruno's formula]]
* [[Multipartition]]
* [[Newton's identities]]
* [[:File:Integer Partition Table.png|Leibniz's distribution table for integer partitions]]
* [[spt function|Smallest-parts function]]
* A Goldbach partition is the partition of an even number into primes (see [[Goldbach's conjecture]])
* [[Kostant's partition function]]
{{div col end}}

== Notes ==
{{reflist}}

== References ==
* {{cite book|title=[[Abramowitz and Stegun|Handbook of Mathematical Functions with Formulas, Graphs, and Mathematical Tables]]|first1=Milton|last1=Abramowitz|author1-link=Milton Abramowitz|first2=Irene|last2=Stegun|author2-link=Irene Stegun|publisher=United States Department of Commerce, National Bureau of Standards|isbn=0-486-61272-4|date=1964|ref=harv}}
* {{cite journal
 |doi         = 10.1073/pnas.191488598
 |last2       = Ono
 |first2      = Ken
 |author2link = Ken Ono
 |last1       = Ahlgren
 |first1      = Scott
 |year        = 2001
 |title       = Congruence properties for the partition function
 |journal     = [[Proceedings of the National Academy of Sciences]]
 |volume      = 98
 |issue       = 23
 |pages       = 12882–12884
 |url         = http://www.math.wisc.edu/~ono/reprints/061.pdf
 |mr          = 1862931
 |ref         = harv
 |deadurl     = yes
 |archiveurl  = https://web.archive.org/web/20110607123453/http://www.math.wisc.edu/~ono/reprints/061.pdf
 |archivedate = 2011-06-07
 |df          = 
|bibcode= 2001PNAS...9812882A
 }}
* {{cite book|first=George E.|last=Andrews|author-link=George E. Andrews|title=The Theory of Partitions|date=1976|publisher=Cambridge University Press|isbn=0-521-63766-X|ref=harv}}
* {{cite book |first=George E.|last=Andrews|first2=Kimmo|last2=Eriksson |title=Integer Partitions |publisher=Cambridge University Press |year=2004 |isbn=0-521-60090-1}}
* {{cite book | last=Apostol | first=Tom M. | authorlink=Tom M. Apostol | title=Modular functions and Dirichlet series in number theory | edition=2nd | series=[[Graduate Texts in Mathematics]] | volume=41 | location=New York etc. | publisher=[[Springer-Verlag]] | year=1990 | origyear=1976 | isbn=0-387-97127-0 | zbl=0697.10023 }}  ''(See chapter 5 for a modern pedagogical intro to Rademacher's formula)''.
* {{cite book |first=Miklós|last=Bóna | authorlink = Miklós Bóna |title=A Walk Through Combinatorics: An Introduction to Enumeration and Graph Theory |publisher=World Scientific Publishing |year=2002 |isbn=981-02-4900-4}} (an elementary introduction to the topic of integer partitions, including a discussion of Ferrers graphs)
* {{wikicite|reference={{Hardy and Wright|citation=cite book}}|ref={{harvid|Hardy|Wright|2008}}}}
* {{cite journal|first1=D. H.|last1=Lehmer|author1-link=D. H. Lehmer | title=On the remainder and convergence of the series for the partition function | journal=Trans. Amer. Math. Soc. | volume=46 | year=1939 | pages=362–373 | doi=10.1090/S0002-9947-1939-0000410-9 | mr=0000410 | zbl=0022.20401 }} Provides the main formula (no derivatives), remainder, and older form for ''A''&lt;sub&gt;''k''&lt;/sub&gt;(''n'').)
* {{cite book|first=Hansraj|last=Gupta|last2=Gwyther|first2=C.E.|last3=Miller|first3=J.C.P.|title=Royal Society of Math. Tables|volume=Volume 4, Tables of partitions|date=1962}} ''(Has text, nearly complete bibliography, but they (and Abramowitz) missed the Selberg formula for'' ''A''&lt;sub&gt;''k''&lt;/sub&gt;(''n''), ''which is in Whiteman.)''
* {{cite book | first=Ian G. | last=Macdonald | authorlink=Ian G. Macdonald | title=Symmetric functions and Hall polynomials | series=Oxford Mathematical Monographs | publisher=[[Oxford University Press]] | year=1979 | isbn=0-19-853530-9 | zbl=0487.20007  }} (See section I.1)
* {{cite book | title=Elementary Methods in Number Theory | volume=195 | series=Graduate Texts in Mathematics | first=M.B. | last=Nathanson | publisher=[[Springer-Verlag]] | year=2000 | isbn=0-387-98912-9 | zbl=0953.11002 |ref=harv}}
* {{cite journal | last=Ono | first=Ken | authorlink=Ken Ono | title=Distribution of the partition function modulo ''m'' | zbl=0984.11050 | journal=[[Ann. of Math.]] | volume=151 | number=1 | pages=293–307 | year=2000 | doi=10.2307/121118 | mr=1745012 | ref=harv| url=https://arxiv.org/pdf/math/0008140 | arxiv=math/0008140 }}
* {{cite book | last=Ono | first=Ken | authorlink=Ken Ono | title=The web of modularity: arithmetic of the coefficients of modular forms and q-series | zbl=1119.11026 | series=CBMS Regional Conference Series in Mathematics | volume=102 | location=Providence, RI | publisher=[[American Mathematical Society]] | isbn=0-8218-3368-5 | year=2004 |ref=harv}}
* {{cite book|author-link=Hans Rademacher|first=Hans|last=Rademacher|title=Collected Papers of Hans Rademacher|date=1974|publisher=MIT Press|volume=v II|pages= 100–07, 108–22, 460–75}}
* {{cite book|author-link=Marcus du Sautoy|last=Sautoy|first=Marcus Du.|title=The Music of the Primes|location=New York|publisher=Perennial-HarperCollins|date=2003}}
* {{cite book|author-link=Richard P. Stanley|first=Richard P.|last=Stanley|url=http://www-math.mit.edu/~rstan/ec/|title=Enumerative Combinatorics|volume=Volumes 1 and 2|publisher=Cambridge University Press|date=1999|isbn=0-521-56069-1|ref=harv}}
* {{cite book | first=A. L. | last=Whiteman | url=http://projecteuclid.org/Dienst/UI/1.0/Summarize/euclid.pjm/1103044252 | title=A sum connected with the series for the partition function | journal=Pacific Journal of Mathematics | volume=6 | number=1 | year=1956 | pages=159–176 | zbl=0071.04004 }} ''(Provides the Selberg formula. The older form is the finite Fourier expansion of Selberg.)''

== External links ==
* {{springer|title=Partition|id=p/p071740}}
* [http://www.se16.info/js/partitions.htm Partition and composition calculator]
* [http://www.numericana.com/data/partition.htm First 4096 values of the partition function ]
* [http://www.numericana.com/answer/numbers.htm#partitions An algorithm to compute the partition function]
* {{MathWorld | urlname=Partition | title=Partition }}
* [http://www.sciencenews.org/articles/20050618/bob9.asp Pieces of Number] from Science News Online
* [http://www.math.upenn.edu/%7Ewilf/PIMS/PIMSLectures.pdf Lectures on Integer Partitions] by Herbert S. Wilf
* [http://www.luschny.de/math/seq/CountingWithPartitions.html Counting with partitions] with reference tables to the On-Line Encyclopedia of Integer Sequences
* [http://www.findstat.org/IntegerPartitions Integer partitions] entry in the [http://www.findstat.org/ FindStat] database
* [http://metacpan.org/module/Integer::Partition Integer::Partition Perl module] from [[CPAN]]
* [https://web.archive.org/web/20090220004749/http://www.site.uottawa.ca/~ivan/F49-int-part.pdf Fast Algorithms For Generating Integer Partitions]
* [https://arxiv.org/abs/0909.2331 Generating All Partitions: A Comparison Of Two Encodings]
* Amanda Folsom, Zachary A. Kent, and Ken Ono, [http://www.aimath.org/news/partition/folsom-kent-ono.pdf ''l''-adic properties of the partition function]. In press.
* Jan Hendrik Bruinier and Ken Ono, [http://www.aimath.org/news/partition/brunier-ono.pdf An algebraic formula for the partition function]. In press.
* {{cite web|last1=Grime|first1=James|title=Partitions - Numberphile|url=https://www.youtube.com/watch?v=NjCIq58rZ8I|publisher=[[Brady Haran]]|accessdate=5 May 2016|format=video|date=April 28, 2016}}

{{DEFAULTSORT:Partition (Number Theory)}}
[[Category:Number theory]]
[[Category:Combinatorics]]
[[Category:Arithmetic functions]]
[[Category:Integer sequences]]</text>
      <sha1>rnj2885jjwapvc62r2f7ct1onjh60zt</sha1>
    </revision>
  </page>
  <page>
    <title>Permutable prime</title>
    <ns>0</ns>
    <id>421593</id>
    <revision>
      <id>832967708</id>
      <parentid>817411396</parentid>
      <timestamp>2018-03-28T23:13:31Z</timestamp>
      <contributor>
        <username>DePiep</username>
        <id>199625</id>
      </contributor>
      <minor/>
      <comment>(via [[WP:JWB]])</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="8924">{{Infobox integer sequence
| terms_number       = 20{{check|date=October 2017}}{{fact|date=October 2017}}
| con_number         = Infinite
| first_terms        = 2, 3, 5, 7, 11, 13, 17, 31, 37, 71, 73, 79, 97, 113, 131, 199
| largest_known_term = (10&lt;sup&gt;270343&lt;/sup&gt;-1)/9
| OEIS               = A258706
| OEIS_name          = Absolute primes: every permutation of digits is a prime (only the smallest representatives of the permutation classes are shown)
}}

A '''permutable prime''', also known as '''anagrammatic prime''', is a [[prime number]] which, in a given [[radix|base]], can have its digits' positions switched through any [[permutation]] and still be a prime number. [[H. E. Richert]], who is supposedly the first to study these primes, called them permutable primes,&lt;ref name="Richert"&gt;{{cite journal | last=Richert | first=Hans-Egon | zbl=0054.02305 | title=On permutable primtall | journal=Norsk Matematiske Tiddskrift | volume=33 | year=1951 | pages=50–54 }}&lt;/ref&gt; but later they were also called '''absolute primes'''.&lt;ref&gt;{{ cite journal | first1=T.N. | last1=Bhargava | first2=P.H. | last2=Doyle | title=On the existence of absolute primes | journal=Math. Mag. | volume=47 | year=1974 | page=233 | zbl=0293.10006 }}&lt;/ref&gt;

In [[base 10]], all the permutable primes with fewer than 49,081 digits are known
:[[2 (number)|2]], [[3 (number)|3]], [[5 (number)|5]], [[7 (number)|7]], [[11 (number)|11]], [[13 (number)|13]], [[17 (number)|17]], [[31 (number)|31]], [[37 (number)|37]], [[71 (number)|71]], [[73 (number)|73]], [[79 (number)|79]], [[97 (number)|97]], [[113 (number)|113]], [[131 (number)|131]], [[199 (number)|199]], 311, 337, 373, 733, 919, 991, R&lt;sub&gt;19&lt;/sub&gt; (1111111111111111111), R&lt;sub&gt;23&lt;/sub&gt;, R&lt;sub&gt;317&lt;/sub&gt;, R&lt;sub&gt;1031&lt;/sub&gt;, ... {{OEIS|id=A003459}}

Of the above, there are 16 unique permutation sets, with smallest elements
:2, 3, 5, 7, R&lt;sub&gt;2&lt;/sub&gt;, 13, 17, 37, 79, 113, 199, 337, R&lt;sub&gt;19&lt;/sub&gt;, R&lt;sub&gt;23&lt;/sub&gt;, R&lt;sub&gt;317&lt;/sub&gt;, R&lt;sub&gt;1031&lt;/sub&gt;, ... {{OEIS|id=A258706}}

Note R&lt;sub&gt;''n''&lt;/sub&gt; = &lt;math&gt;\tfrac{10^n-1}{9}&lt;/math&gt; is a [[repunit]], a number consisting only of ''n'' ones (in [[base 10]]). Any [[repunit prime]] is a permutable prime with the above definition, but some definitions require at least two distinct digits.&lt;ref&gt;Chris Caldwell, [http://primes.utm.edu/glossary/page.php?sort=PermutablePrime The Prime Glossary: permutable prime] at The [[Prime Pages]].&lt;/ref&gt;

All permutable primes of two or more digits are composed from the digits 1, 3, 7, 9, because no prime number except 2 is even, and no prime number besides 5 is divisible by 5.  It is proven&lt;ref&gt;A.W. Johnson, "Absolute primes," ''Mathematics Magazine'' '''50''' (1977), 100–103.&lt;/ref&gt; that no permutable prime exists which contains three different of the four digits 1, 3, 7, 9, as well as that there exists no permutable prime composed of two or more of each of two digits selected from 1, 3, 7, 9.

There is no ''n''-digit permutable prime for 3 &lt; ''n'' &lt; 6·10&lt;sup&gt;175&lt;/sup&gt; which is not a repunit.&lt;ref name="Richert"/&gt; It is [[conjecture]]d that there are no non-repunit permutable primes other than those listed above.

In base 2, only repunits can be permutable primes, because any 0 permuted to the ones place results in an even number. Therefore, the base 2 permutable primes are the [[Mersenne prime]]s. The generalization can safely be made that for any [[positional number system]], permutable primes with more than one digit can only have digits that are [[coprime]] with the [[radix]] of the number system. One-digit primes, meaning any prime below the radix, are always trivially permutable.

In [[duodecimal|base 12]], the smallest elements of the unique permutation sets of the permutable primes with fewer than 9,739 digits are known (using inverted two and three for ten and eleven, respectively)
:2, 3, 5, 7, Ɛ, R&lt;sub&gt;2&lt;/sub&gt;, 15, 57, 5Ɛ, R&lt;sub&gt;3&lt;/sub&gt;, 117, 11Ɛ, 555Ɛ, R&lt;sub&gt;5&lt;/sub&gt;, R&lt;sub&gt;17&lt;/sub&gt;, R&lt;sub&gt;81&lt;/sub&gt;, R&lt;sub&gt;91&lt;/sub&gt;, R&lt;sub&gt;225&lt;/sub&gt;, R&lt;sub&gt;255&lt;/sub&gt;, R&lt;sub&gt;4ᘔ5&lt;/sub&gt;, ...

There is no ''n''-digit permutable prime in base 12 for 4 &lt; ''n'' &lt; 12&lt;sup&gt;144&lt;/sup&gt; which is not a repunit. It is conjectured that there are no non-repunit permutable primes in base 12 other than those listed above.

In base 10 and base 12, every permutable prime is a repunit or a near-repdigit, that is, it is a permutation of the integer 
''P''(''b'', ''n'', ''x'', ''y'') = ''xxxx''...''xxxy''&lt;sub&gt;''b''&lt;/sub&gt; (''n'' digits, in base ''b'')
where ''x'' and ''y'' are digits which is coprime to ''b''. Besides, ''x'' and ''y'' must be also coprime (since if there is a prime ''p'' divides both ''x'' and ''y'', then ''p'' also divides the number), so if ''x'' = ''y'', then ''x'' = ''y'' = 1. (This is not true in all bases, but exceptions are rare and could be finite in any given base; the only exceptions below 10&lt;sup&gt;9&lt;/sup&gt; in bases up to 20 are: 139&lt;sub&gt;11&lt;/sub&gt;, 36A&lt;sub&gt;11&lt;/sub&gt;, 247&lt;sub&gt;13&lt;/sub&gt;, 78A&lt;sub&gt;13&lt;/sub&gt;, 29E&lt;sub&gt;19&lt;/sub&gt; (M. Fiorentini, 2015).)

Let ''P''(''b'', ''n'', ''x'', ''y'') be a permutable prime in base ''b'' and let ''p'' be a prime such that ''n'' ≥ ''p''. If ''b'' is a [[primitive root modulo n|primitive root]] of ''p'', and ''p'' does not divide ''x'' or |''x'' - ''y''|, then ''n'' is a multiple of ''p'' - 1. (Since ''b'' is a primitive root mod ''p'' and ''p'' does not divide |''x'' − ''y''|, the ''p'' numbers ''xxxx''...''xxxy'', ''xxxx''...''xxyx'', ''xxxx''...''xyxx'', ..., ''xxxx''...''xyxx''...''xxxx'' (only the ''b''&lt;sup&gt;''p''−2&lt;/sup&gt; digit is ''y'', others are all ''x''), ''xxxx''...''yxxx''...''xxxx'' (only the ''b''&lt;sup&gt;''p''−1&lt;/sup&gt; digit is ''y'', others are all ''x''), ''xxxx''...''xxxx'' (the [[repdigit]] with ''n'' ''x''s) mod ''p'' are all different. That is, one is 0, another is 1, another is 2, ..., the other is ''p'' − 1. Thus, since the first ''p'' − 1 numbers are all primes, the last number (the repdigit with ''n'' ''x''s) must be divisible by ''p''. Since ''p'' does not divide ''x'', so ''p'' must divide the repunit with ''n'' 1s. Since ''b'' is a primitive root mod ''p'', the multiplicative order of ''n'' mod ''p'' is ''p'' − 1. Thus, ''n'' must be divisible by ''p'' − 1)

Thus, if ''b'' = 10, the digits coprime to 10 are {1, 3, 7, 9}. Since 10 is a primitive root mod 7, so if ''n'' ≥ 7, then either 7 divides ''x'' (in this case, ''x'' = 7, since ''x'' ∈ {1, 3, 7, 9}) or |''x'' − ''y''| (in this case, ''x'' = ''y'' = 1, since ''x'', ''y'' ∈ {1, 3, 7, 9}. That is, the prime is a repunit) or ''n'' is a multiple of 7 − 1 = 6. Similarly, since 10 is a primitive root mod 17, so if ''n'' ≥ 17, then either 17 divides ''x'' (not possible, since ''x'' ∈ {1, 3, 7, 9}) or |''x'' − ''y''| (in this case, ''x'' = ''y'' = 1, since ''x'', ''y'' ∈ {1, 3, 7, 9}. That is, the prime is a repunit) or ''n'' is a multiple of 17 − 1 = 16. Besides, 10 is also a primitive root mod 19, 23, 29, 47, 59, 61, 97, 109, 113, 131, 149, 167, 179, 181, 193, ..., so ''n'' ≥ 17 is very impossible (since for this primes ''p'', if ''n'' ≥ ''p'', then ''n'' is divisible by ''p'' − 1), and if 7 ≤ ''n'' &lt; 17, then ''x'' = 7, or ''n'' is divisible by 6 (the only possible ''n'' is 12). If ''b'' = 12, the digits coprime to 12 are {1, 5, 7, 11}. Since 12 is a primitive root mod 5, so if ''n'' ≥ 5, then either 5 divides ''x'' (in this case, ''x'' = 5, since ''x'' ∈ {1, 5, 7, 11}) or |''x'' − ''y''| (in this case, either ''x'' = ''y'' = 1 (That is, the prime is a repunit) or ''x'' = 1, ''y'' = 11 or ''x'' = 11, ''y'' = 1, since ''x'', ''y'' ∈ {1, 5, 7, 11}.) or ''n'' is a multiple of 5 − 1 = 4. Similarly, since 12 is a primitive root mod 7, so if ''n'' ≥ 7, then either 7 divides ''x'' (in this case, ''x'' = 7, since ''x'' ∈ {1, 5, 7, 11}) or |''x'' − ''y''| (in this case, ''x'' = ''y'' = 1, since ''x'', ''y'' ∈ {1, 5, 7, 11}. That is, the prime is a repunit) or ''n'' is a multiple of 7 − 1 = 6. Similarly, since 12 is a primitive root mod 17, so if ''n'' ≥ 17, then either 17 divides ''x'' (not possible, since ''x'' ∈ {1, 5, 7, 11}) or |''x'' − ''y''| (in this case, ''x'' = ''y'' = 1, since ''x'', ''y'' ∈ {1, 5, 7, 11}. That is, the prime is a repunit) or ''n'' is a multiple of 17 − 1 = 16. Besides, 12 is also a primitive root mod 31, 41, 43, 53, 67, 101, 103, 113, 127, 137, 139, 149, 151, 163, 173, 197, ..., so ''n'' ≥ 17 is very impossible (since for this primes ''p'', if ''n'' ≥ ''p'', then ''n'' is divisible by ''p'' − 1), and if 7 ≤ ''n'' &lt; 17, then ''x'' = 7 (in this case, since 5 does not divide ''x'' or ''x'' − ''y'', so ''n'' must be divisible by 4) or ''n'' is divisible by 6 (the only possible ''n'' is 12).

== References ==
&lt;references /&gt;

{{Prime number classes}}

{{DEFAULTSORT:Permutable Prime}}
[[Category:Base-dependent integer sequences]]
[[Category:Classes of prime numbers]]
[[Category:Permutations]]</text>
      <sha1>2y2whlfv5cmv8w4qvpjuormnb2in1kw</sha1>
    </revision>
  </page>
  <page>
    <title>Peter M. Neumann</title>
    <ns>0</ns>
    <id>7151472</id>
    <revision>
      <id>851722788</id>
      <parentid>828914603</parentid>
      <timestamp>2018-07-24T05:21:49Z</timestamp>
      <contributor>
        <username>MikeAtkinson</username>
        <id>706835</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="5067">{{Use dmy dates|date=May 2012}}
{{Use British English|date=May 2012}}
{{Infobox scientist
|name              = Peter Neumann
|image             = Peter-Neumann.JPG
|caption           = Peter Neumann, 2013
|birth_date        = {{birth date and age|1940|12|28|df=y}}
|birth_place       = [[Oxford]],&lt;ref name="qb"&gt;{{cite web | url = http://www.queens.ox.ac.uk/academics/neumann/ | title = Dr Peter M Neumann, O.B.E. | publisher = The Queen’s College, Oxford | accessdate = 2009-06-26}}&lt;/ref&gt; [[Oxfordshire, England]]
|residence         = Oxford
|nationality       = [[United Kingdom|British]]
|fields            = [[Algebra]] and [[history of algebra]]
|workplaces        = [[University of Oxford]]
|alma_mater        = [[The Queen's College, Oxford]]
|doctoral_advisor  = [[Graham Higman]]
|doctoral_students = {{plainlist|1=
*Amato, Daniela	
*Atkinson, J. Graham
*Atkinson, Michael
*Audu, Muhammed
*Bamblett, Jane	
*Behrendt, Gerhard	
*Bhattacharjee, Meenaxi
*Bhattacharya, Prabir
*Blackburn, Simon
*Britnell, John	
*Bruyns, Peter
*Brydon, Duncan
*[[Peter Cameron (mathematician)|Peter Cameron]]
*Cook, John
*Cooper, David	
*Cretney, Rosanna
*David Evans
*[[Catherine Greenhill]]
*Huang, Jia Lun
*Jones, Gareth
*Langworthy, Alan
*Liebeck, Martin
*McIsaac, Anthony
*McIver, Annabelle
*McKay, Susan
*[[Colin McNab]]
*Möller, Rögnvaldur
*Pantelidakis, Ioannis
*[[Cheryl Praeger]]
*Ramsay, Denise
*Ronse, Christian
*Saxl, Jan
*Sharp, Graham
*Smith, Simon
*Spencer, Andrew
*Tompson, Julia
*Tyrer-Jones, J. Mary
*Vaughan-Lee, Michael
*Venkataraman, Geetha
}}
|awards            = [[Senior Whitehead Prize]] &lt;small&gt;(2003)&lt;/small&gt;
[[David Crighton Medal]] &lt;small&gt;(2012)&lt;/small&gt; 
}}

'''Peter Michael Neumann''' [[Order of the British Empire|OBE]] (born 28 December 1940) is a [[United Kingdom|British]] [[mathematician]]. He is a son of the mathematicians [[Bernhard Neumann]] and [[Hanna Neumann]] and, after gaining a [[Bachelor of Arts|B.A.]] from [[The Queen's College, Oxford]] in 1963, obtained his [[Doctor of Philosophy|D.Phil]] from [[Oxford University]] in 1966.

He was a Tutorial Fellow at the Queen's College, Oxford and a lecturer at Oxford University.&lt;ref&gt;{{cite web
  | title =Enumeration of Finite Groups (Cambridge Tracts in Mathematics) — About the Author| publisher =Amazon.com| url =https://www.amazon.com/Enumeration-Finite-Groups-Cambridge-Mathematics/dp/0521882176
  | accessdate =2007-12-30 }}&lt;/ref&gt; After retiring in 2008, he became an Emeritus Fellow at the Queen's College. His work has been in the field of [[group theory]]. He is also known for solving [[Alhazen's problem]] in 1997.&lt;ref&gt;{{Cite journal
 |last=Highfield
 |first=Roger
 |date=1 April 1997
 |title=Don solves the last puzzle left by ancient Greeks
 |journal=[[Electronic Telegraph]]
 |volume=676
 |url=http://www-history.mcs.st-and.ac.uk/Obits2/Al-Haytham_Telegraph.html
 |accessdate=2012-11-19
 |postscript=&lt;!--None--&gt;
 }}&lt;/ref&gt;

In 1987, he won the [[Lester R. Ford]] Award of the [[Mathematical Association of America]] for his review of [[Harold Edwards (mathematician)|Harold Edwards']] book ''Galois Theory''.&lt;ref&gt;[http://www.maa.org/awards/ford.html The Lester R. Ford Award], MAA, retrieved 2010-02-01.&lt;/ref&gt;&lt;ref&gt;{{cite journal|title=Book Review of ''Galois Theory'' by Harold M. Edwards|journal=Amer. Math. Monthly|year=1986|volume=93|pages=407–411|url=http://www.maa.org/programs/maa-awards/writing-awards/book-review-of-galois-theory-by-harold-m-edwards|doi=10.2307/2323619}}&lt;/ref&gt;
In 2003, the [[London Mathematical Society]] awarded him the [[Senior Whitehead Prize]].&lt;ref&gt;{{cite web
|url = http://www.lms.ac.uk/activities/prizes_com/pastwinners.html#swhitehead
|title = List of Prizewinners
|author = London Mathematical Society
|accessdate = 2007-07-08}}&lt;/ref&gt; He was the first Chairman of the [[United Kingdom Mathematics Trust]], from October 1996 to April 2004, succeeded by [[Bernard Silverman]].&lt;ref&gt;{{cite book | title = The UK Mathematics Trust Yearbook 2003–2004 | author = United Kingdom Mathematics Trust | year = 2004 | isbn = 0953682358}}&lt;/ref&gt; He was appointed [[Officer of the Order of the British Empire]] (OBE) in the [[New Year Honours 2008|2008 New Year Honours]].&lt;ref&gt;{{cite web|url=http://news.bbc.co.uk/1/shared/bsp/hi/pdfs/29_12_07_hons_queen.pdf|title=Officers of the Order of the British Empire|publisher=BBC|pages=32|accessdate=27 January 2010}}&lt;/ref&gt;

==References==
{{reflist}}

{{commons category|Peter Neumann}}

== External links ==
* {{MathGenealogy|id=28732}}

{{Authority control}}

{{DEFAULTSORT:Neumann, Peter}}
[[Category:1940 births]]
[[Category:Living people]]
[[Category:People from Oxford]]
[[Category:Alumni of The Queen's College, Oxford]]
[[Category:20th-century English mathematicians]]
[[Category:21st-century English mathematicians]]
[[Category:Group theorists]]
[[Category:Historians of mathematics]]
[[Category:Fellows of The Queen's College, Oxford]]
[[Category:Officers of the Order of the British Empire]]
[[Category:David Crighton medalists]]
[[Category:English male writers]]


{{UK-mathematician-stub}}</text>
      <sha1>pfhew8n2id623ogro92w6h0renujcxn</sha1>
    </revision>
  </page>
  <page>
    <title>Primitive semiperfect number</title>
    <ns>0</ns>
    <id>321920</id>
    <redirect title="Semiperfect number" />
    <revision>
      <id>504440542</id>
      <parentid>504440466</parentid>
      <timestamp>2012-07-27T15:12:40Z</timestamp>
      <contributor>
        <username>Deltahedron</username>
        <id>16759019</id>
      </contributor>
      <minor/>
      <comment>typo</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="273">#REDIRECT [[Semiperfect number]]

[[Category:Integer sequences]]

[[eo:Primitiva duonperfekta nombro]]
[[fr:Nombre semi-parfait primitif]]
[[it:Numero semiperfetto primitivo]]
[[ru:Примитивное полусовершенное число]]
[[zh:本原半完全数]]</text>
      <sha1>8nz0wwn0wyk813vf2l0zq2wj7mx2q72</sha1>
    </revision>
  </page>
  <page>
    <title>Rectilinear minimum spanning tree</title>
    <ns>0</ns>
    <id>28153829</id>
    <revision>
      <id>775150091</id>
      <parentid>775149470</parentid>
      <timestamp>2017-04-13T00:11:12Z</timestamp>
      <contributor>
        <username>SuprDewd</username>
        <id>29054351</id>
      </contributor>
      <minor/>
      <comment>/* Planar case */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2685">[[File:Rectilinear minimum spanning tree.svg|right|300px|thumb|Example of rectilinear minimum spanning tree from random points.]]

In [[graph theory]], the '''rectilinear minimum spanning tree''' ('''RMST''') of a set of ''n'' points in the [[plane (mathematics)|plane]] (or more generally, in ℝ&lt;sup&gt;''d''&lt;/sup&gt;) is a [[minimum spanning tree]] of that set, where the weight of the edge between each pair of points is the [[rectilinear distance]] between those two points.

==Properties and algorithms==

By explicitly constructing the [[complete graph]] on ''n'' vertices, which has ''n''(''n''-1)/2 edges, a rectilinear minimum spanning tree can be found using existing algorithms for finding a minimum spanning tree. In particular, using [[Prim's algorithm]] with an [[adjacency matrix]] yields time complexity O(''n''&lt;sup&gt;2&lt;/sup&gt;).

===Planar case===

In the planar case, more efficient algorithms exist. They are based on the idea that connections may only happen with the nearest neighbour of a point in each octant - that is, each of the eight regions of the plane delimited by the coordinate axis from this point and their bisectors.

The resulting graph has only a linear number of edges and can be constructed in O(''n'' log ''n'') using a [[divide and conquer algorithm]]&lt;ref&gt;L.J. Guibas and J. Stolfi, "On computing all northeast nearest neighbors in the L1 metric", Information Processing Letters, 17 (1983), pp. 219--223&lt;/ref&gt; or a [[sweep line algorithm]].&lt;ref&gt;Hai Zhou, Narendra Shenoy, William Nicholls, "Efficient minimum spanning tree construction without Delaunay triangulation", Information Processing Letters 81 (2002) 271–276&lt;/ref&gt;

==Applications==

===Electronic design===
The problem commonly arises in [[physical design (electronics)|physical design]] of [[electronic circuits]]. In modern high-density [[integrated circuit]]s wire [[routing (EDA)|routing]] is performed by wires which consist of segments running horizontally in one layer of metal and vertically in another metal layer. As a result, the wire length between two points is naturally measured with rectilinear distance. Although the routing of a whole net with multiple nodes is better represented by the [[rectilinear Steiner tree]], the RMST provides a reasonable approximation and wire length estimate.&lt;ref&gt;F. K. Hwang. "On Steiner minimal trees with rectilinear distance." ''[[SIAM Journal of Applied Mathematics]]'', 30:104–114, 1976.&lt;/ref&gt;

==See also==
*[[Euclidean minimum spanning tree]]
==References==
{{reflist}}

{{DEFAULTSORT:Rectilinear Minimum Spanning Tree}}
[[Category:Computational geometry]]
[[Category:Geometric graphs]]
[[Category:Spanning tree]]


{{algorithm-stub}}</text>
      <sha1>ojbt5dzqoyfp1e66xeug6sk5lo09he1</sha1>
    </revision>
  </page>
  <page>
    <title>Riesz sequence</title>
    <ns>0</ns>
    <id>4795751</id>
    <revision>
      <id>805764065</id>
      <parentid>685906385</parentid>
      <timestamp>2017-10-17T13:56:30Z</timestamp>
      <contributor>
        <username>Matthewgeleta</username>
        <id>17614565</id>
      </contributor>
      <minor/>
      <comment>/* Theorems */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2189">In [[mathematics]], a [[sequence]] of [[vector space|vector]]s (''x''&lt;sub&gt;''n''&lt;/sub&gt;) in a [[Hilbert space]] &lt;math&gt;(H,\langle\cdot,\cdot\rangle)&lt;/math&gt; is called a '''Riesz sequence''' if there exist [[constant (mathematics)|constants]] &lt;math&gt;0&lt;c\le C&lt;+\infty&lt;/math&gt; such that

:&lt;math&gt; c\left( \sum_n | a_n|^2 \right) \leq \left\Vert \sum_n a_n x_n \right\Vert^2 \leq C \left( \sum_n | a_n|^2 \right) &lt;/math&gt;

for all sequences of [[scalar (mathematics)|scalar]]s  (''a''&lt;sub&gt;''n''&lt;/sub&gt;) in the [[Lp space|ℓ&lt;sup&gt;''p''&lt;/sup&gt; space]] ℓ&lt;sup&gt;2&lt;/sup&gt;.  A Riesz sequence is called a '''Riesz [[orthonormal basis|basis]]''' if

:&lt;math&gt;\overline{\mathop{\rm span} (x_n)} = H&lt;/math&gt; .

==Theorems==
If ''H'' is a [[dimension (vector space)|finite-dimensional]] space, then every basis of ''H'' is a Riesz basis.

Let &lt;math&gt;\varphi&lt;/math&gt; be in the [[Lp space|''L''&lt;sup&gt;''p''&lt;/sup&gt; space]] ''L''&lt;sup&gt;2&lt;/sup&gt;('''R'''), let

:&lt;math&gt;\varphi_n(x) = \varphi(x-n)&lt;/math&gt;

and let &lt;math&gt;\hat{\varphi}&lt;/math&gt; denote the [[Fourier transform]] of &lt;math&gt;{\varphi}&lt;/math&gt;.  Define constants ''c'' and ''C'' with &lt;math&gt;0&lt;c\le C&lt;+\infty&lt;/math&gt;.  Then the following are equivalent:

:&lt;math&gt;1. \quad \forall (a_n) \in \ell^2,\ \ c\left( \sum_n | a_n|^2 \right) \leq \left\Vert \sum_n a_n \varphi_n \right\Vert^2 \leq C \left( \sum_n | a_n|^2 \right)&lt;/math&gt;

:&lt;math&gt;2. \quad c\leq\sum_{n}\left|\hat{\varphi}(\omega + 2\pi n)\right|^2\leq C&lt;/math&gt;

The first of the above conditions is the definition for (&lt;math&gt;{\varphi_n}&lt;/math&gt;) to form a Riesz basis for the space it [[linear span|span]]s.

==See also==
* [[Orthonormal basis]]
* [[Hilbert space]]
* [[Frame of a vector space]]

==References==
* {{Citation | last1=Christensen | first1=Ole | author1-link=Ole Christensen | title=Frames, Riesz bases, and Discrete Gabor/Wavelet expansions | url=http://www.ams.org/journals/bull/2001-38-03/S0273-0979-01-00903-X/S0273-0979-01-00903-X.pdf | year=2001 | journal=[[Bulletin (New Series) of the American Mathematical Society]] | volume=38 | issue=3 | pages=273–291 }}

{{PlanetMath attribution|id=5963|title=Riesz sequence}}
{{PlanetMath attribution|id=7152|title=Riesz basis}}

[[Category:Functional analysis]]</text>
      <sha1>34rwssn599atmocof83scoxfurifh1l</sha1>
    </revision>
  </page>
  <page>
    <title>Ruth Aaronson Bari</title>
    <ns>0</ns>
    <id>7097464</id>
    <revision>
      <id>836313485</id>
      <parentid>836313353</parentid>
      <timestamp>2018-04-14T00:04:56Z</timestamp>
      <contributor>
        <username>Zaslav</username>
        <id>88809</id>
      </contributor>
      <minor/>
      <comment>/* Career */ Ce.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="4701">[[Image:Ruthbari.jpg|thumb|Ruth Bari]]

'''Ruth Aaronson Bari''' (November 17, 1917 – August 25, 2005) was an American mathematician known for her work in [[graph theory]] and algebraic [[homomorphism]]s. The daughter of [[Polish-Jewish]] immigrants to the United States, she was a professor at [[George Washington University]] beginning in 1966. She was the mother of environmental activist [[Judi Bari]], science reporter [[Gina Kolata]] and art historian Martha Bari.

==Career==
Bari grew up in Brooklyn and attended [[Brooklyn College]], earning her bachelor's degree in mathematics in 1939. She earned her MA at [[Johns Hopkins University]] in 1943, but had originally enrolled in the doctoral program. When the university suggested that women in the graduate program should give up their fellowships so that men returning from World War II could study, Bari acceded.&lt;ref name="Kolata"&gt;Kolata&lt;/ref&gt; After marrying Arthur Bari she spent the next two decades devoted to family. She returned to Johns Hopkins, where she completed her dissertation on "absolute reducibility of maps of at most 19 regions" in 1966 at the age of 47.

Bari’s dissertation explored [[chromatic polynomial]]s and the [[Birkhoff-Lewis conjecture]]. She determined that “Because of the fact that all other cubic maps with fewer than 20 regions contain at least one absolutely reducible configuration, it follows that the Birkhoff-Lewis conjecture holds for all maps with fewer than 20 regions.”&lt;ref&gt;Bari, Ruth. Abstract: “Absolute Reducibility of Maps of at Most 19 Regions.” Biographies of Women Mathematicians&lt;/ref&gt; Her Ph.D. advisor was Daniel Lewis, Jr.&lt;ref&gt;Mathematics Genealogy Project&lt;/ref&gt; After she received her degree, mathematician [[William Tutte]] invited Bari to spend two weeks lecturing on her work in Canada at the [[University of Waterloo]]. Bari's work in the areas of graph theory and homomorphisms—and especially chromatic polynomials—has been recognized as influential. In 1976, two professors relied on computer work to solve the perennial problem of Bari’s dissertation, involving the [[Four Colour Theorem|four-color conjecture]]. When her daughter Martha asked her if she felt cheated by the technological solution, Bari replied, “I’m just grateful that it was solved within my lifetime and that I had the privilege to witness it.”&lt;ref name="Kolata"/&gt;

During her teaching career, Bari participated in a class-action lawsuit against George Washington University which protested inequalities in promotion and pay for female faculty members. The protests were successful.  Bari retired at the legally mandated age of 70 in 1988 with the distinction of [[professor emeritus]].

==Community and Family Life==
Bari was active in the Washington, DC community. In the early 1970s, Bari used a grant from the [[National Science Foundation]] to start a master's degree program in teaching mathematics. She felt that math teachers in DC public schools were not as well prepared as they needed to be.&lt;ref name="Washington Post"&gt;''Washington Post''&lt;/ref&gt;

Her daughters also became influential in their fields. [[Gina Kolata]] is a mathematics, health and science journalist for the ''[[New York Times]]''. [[Judi Bari]] (1949 – 1997) was a leading labor and environmental activist and feminist, who survived an assassination attempt. Dr. Martha Bari is an art historian at [[Hood College]]

Bari died on August 25, 2005. She was survived by her husband of 64 years of marriage, Arthur (1913-2006). Besides their three daughters, they had two grandchildren each by both Judi and Gina.  She had lived in [[Silver Spring, Maryland]] since 1963 and was 87 years old at the time of her death.&lt;ref name="Washington Post"/&gt;

==References==
{{Reflist}}

==External links==
* [http://www.agnesscott.edu/lriddle/women/bariruth.htm "Ruth Aaronson Bari", Biographies of Women Mathematicians], [[Agnes Scott College]]
* [https://www.washingtonpost.com/wp-dyn/content/article/2005/08/29/AR2005082901950.html "Dr. Ruth Aaronson Bari, 87, Dies; Professor of Mathematics at GWU"], ''[[Washington Post]]'', August 30, 2005.
* [http://www.genealogy.math.ndsu.nodak.edu/id.php?id=25154 “Ruth Aaronson Bari.”] ''The Mathematics Genealogy Project.''

{{Authority control}}

{{DEFAULTSORT:Bari, Ruth}}
[[Category:1917 births]]
[[Category:2005 deaths]]
[[Category:Women mathematicians]]
[[Category:Jewish American scientists]]
[[Category:American people of Polish-Jewish descent]]
[[Category:20th-century American mathematicians]]
[[Category:21st-century American mathematicians]]
[[Category:George Washington University faculty]]
[[Category:Graph theorists]]
[[Category:20th-century women scientists]]</text>
      <sha1>gwu16e2lgtna80vk0ngc24zznburq8q</sha1>
    </revision>
  </page>
  <page>
    <title>Sage Manifolds</title>
    <ns>0</ns>
    <id>52796478</id>
    <revision>
      <id>815592767</id>
      <parentid>807672458</parentid>
      <timestamp>2017-12-15T20:10:36Z</timestamp>
      <contributor>
        <username>Tambora1815</username>
        <id>2780009</id>
      </contributor>
      <comment>Versions 1.0.1 (25 March), 1.0.2 (21 July), and 1.1 (7 December 2017): http://sagemanifolds.obspm.fr/changelog.html</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="13166">{{unreferenced|date=June 2017}}

SageManifolds (following styling of SageMath) is an extension fully integrated into [[SageMath]], to be used as a [[Package (package management system)|package]] for [[differential geometry]] and [[tensor calculus]]. The official page for the project is [http://sagemanifolds.obspm.fr/ sagemanifolds.obspm.fr]. It can be used on [[CoCalc]].

SageManifolds deals with ''[[differentiable manifold]]s'' of arbitrary dimension. The basic objects are ''[[tensor field]]s'' and not [[tensor components]] in a given vector frame or coordinate chart. In other words, various charts and frames can be introduced on the manifold and a given tensor field can have representations in each of them.

An important class of treated manifolds is that of ''[[pseudo-Riemannian manifold]]s'', among which ''[[Riemannian manifold]]s'' and ''[[Lorentzian manifolds]]'', with applications to [[General relativity|General Relativity]]. In particular, SageManifolds implements the computation of the [[Riemann curvature tensor]] and associated objects ([[Ricci tensor]], [[Weyl tensor]]). SageManifolds can also deal with ''generic [[affine connection]]s'', not necessarily [[Levi-Civita connection|Levi-Civita]] ones.

== Functionalities ==
{| class="wikitable"
!Version
!Date
!Description (From [http://sagemanifolds.obspm.fr/changelog.html Changelog])
|-
|0.1
|7 July 2013
|First released
|-
|0.2
|12 September 2013
|Defined six classes, and "many doctests changed to comply with Sage 5.11. New methods in each class.
|-
|0.3
|24 November 2013
|Development repository moved from [[Apache Subversion|svn]] to [[git]]. New example worksheets. More classes and methods (some inherited from Sage).
|-
|0.4
|10 February 2014
|New classes, members, and methods.
|-
|0.5
|12 July 2014
|This is a major release, involving the introduction of algebraic structures to describe tensor fields, namely modules over the algebra of scalar fields, among which free modules of finite rank. This is achieved via Sage &lt;code&gt;Parent&lt;/code&gt;/&lt;code&gt;Element&lt;/code&gt; scheme and coercion model.
|-
|0.6
|28 September 2014
|
* Graphical output for charts (method &lt;code&gt;Chart.plot()&lt;/code&gt;) and points (method &lt;code&gt;Point.plot()&lt;/code&gt;); here are some examples.
* Introduction of index notation to denote tensor contractions and tensor symmetrizations (new class &lt;code&gt;TensorWithIndices&lt;/code&gt;); see these links: [http://sagemanifolds.obspm.fr/doc/reference/tensor_free_modules/sage/tensor/modules/tensor_with_indices.html 1], [http://sagemanifolds.obspm.fr/doc/reference/tensor_free_modules/sage/tensor/modules/free_module_tensor.html#sage.tensor.modules.free_module_tensor.FreeModuleTensor.contract 2].
* The argument of methods &lt;code&gt;symmetrize()&lt;/code&gt; and &lt;code&gt;antisymmetrize()&lt;/code&gt; in tensor classes is now directly a sequence of index positions (and no longer a single list/tuple encapsulating such a sequence).
* Method &lt;code&gt;self_contract()&lt;/code&gt; of tensor classes renamed &lt;code&gt;trace()&lt;/code&gt;.
* The code for tensor contractions has been optimized; moreover multiple tensor contractions are now allowed.
* The documentation (reference manuals [http://sagemanifolds.obspm.fr/doc/reference/manifolds/index.html 4] and [http://sagemanifolds.obspm.fr/doc/reference/tensor_free_modules/index.html 5]) has been improved.
|-
|0.7
|12 March 2015
|For the end user, new features are
* the introduction of curves in manifolds (with some plotting capabilities)
* improvements in differential mappings between manifolds, including mapping composition and mapping differential
* the introduction of homomorphisms between free modules
|-
|0.8
|16 May 2015
|Changes for the end user:
* Plot of vector fields: new method &lt;code&gt;VectorField.plot()&lt;/code&gt;
* Possibility of parallelizing heavy computations: parallelization is implemented for basic tensor calculus (arithmetics, contractions) and for calculus regarding affine connections (connection coefficients, action on a tensor field, Riemann curvature tensor)
* Nice display of partial derivatives
* Standard math functions exp, cos, sin, etc. on scalar fields
* Display of tensor components as a list, one per line: new methods &lt;code&gt;TensorField.display_comp()&lt;/code&gt; and &lt;code&gt;FreeModuleTensor.display_comp()&lt;/code&gt;
* Nice display of connection coefficients: new method &lt;code&gt;AffConnection.display()&lt;/code&gt;
* Nice display of Christoffel symbols: new method &lt;code&gt;Metric.christoffel_symbols_display()&lt;/code&gt;
* Nice display of chart transition maps: new method &lt;code&gt;CoordChange.display()&lt;/code&gt;
|-
|0.9
|10 December 2015
|This is a major release, resulting from an important refactoring of the code, in view of a full integration of SageManifolds into SageMath (cf. the metaticket [https://trac.sagemath.org/ticket/18528 #18528] on the SageMath developer trac). The major changes are
* Topological properties have been separated from differential ones, by implementing topological manifolds (new class&lt;code&gt;TopologicalManifold&lt;/code&gt;) and making the class for differentiable manifolds (&lt;code&gt;DifferentiableManifold&lt;/code&gt;) inherit from &lt;code&gt;TopologicalManifold&lt;/code&gt;.
* The base field over which manifolds are defined is no longer assumed to be the real field: it can be any topological field (non-discrete to define differentiability for diff. manifolds). This allows to define easily complex manifolds, by setting the field to '''C'''.
* The class &lt;code&gt;ManifoldOpenSubset&lt;/code&gt; has been suppressed: open subsets of manifolds are now instances of &lt;code&gt;TopologicalManifold&lt;/code&gt; or &lt;code&gt;DifferentiableManifold&lt;/code&gt; (since an open subset of a top/diff manifold is a top/diff manifold by itself)
* Functions defined on a coordinate patch are no longer necessarily symbolic functions of the coordinates: they now pertain to the generic class &lt;code&gt;CoordFunction&lt;/code&gt;, symbolic functions being described by a subclass of it (&lt;code&gt;CoordFunctionSymb&lt;/code&gt;). This opens the way for "numerical" manifolds, like spacetimes generated by numerical relativity codes.
* Better parallelization, governed by the new singleton class &lt;code&gt;Parallelism&lt;/code&gt; and the global function &lt;code&gt;use_multiproc&lt;/code&gt;.
|-
|0.9.1
|19 September 2016
|*The full change is now listed for the Wikipedia (this) page*

This release propagates further code changes related to the integration of SageManifolds into SageMath (cf. the metaticket#18528); it also adds a few new functionalities.

New functionalities:
* Computation of the Schouten tensor, the Cotton conformal tensor and the Cotton-York conformal tensor associated to a given pseudo-Riemannian metric
* Add structure of Lie algebroid to modules of vector fields (classes &lt;code&gt;VectorFieldModule&lt;/code&gt; and &lt;code&gt;VectorFieldFreeModule&lt;/code&gt;): new method &lt;code&gt;VectorField.bracket&lt;/code&gt;
* Parallelization of vector field plots
* Parallelization of arithmetics of fully antisymmetric tensor components
* Improved rendering of variables in partial derivatives, using LaTeX display of symbols (class &lt;code&gt;ExpressionNice&lt;/code&gt;)
* Add comparison operator for transition maps (class &lt;code&gt;CoordChange&lt;/code&gt;)
* Add list functionalities for bases (methods &lt;code&gt;__len__&lt;/code&gt; and &lt;code&gt;__iter__&lt;/code&gt; in classes &lt;code&gt;FreeModuleBasis&lt;/code&gt; and &lt;code&gt;FreeModuleCoBasis&lt;/code&gt;)
Syntactic changes:
* Method &lt;code&gt;CoordChange.set_inverse&lt;/code&gt;: replace the keyword &lt;code&gt;check&lt;/code&gt; by &lt;code&gt;verbose&lt;/code&gt;, the default being now &lt;code&gt;verbose=False&lt;/code&gt;
* Introduction of &lt;code&gt;Manifold.options&lt;/code&gt; to control the display of mathematical expressions instead of the global functions &lt;code&gt;nice_derivatives&lt;/code&gt; and &lt;code&gt;omit_function_args&lt;/code&gt;, which have been suppressed
* Function &lt;code&gt;set_axes_labels&lt;/code&gt; (to set labels on 3D plots) no longer imported at the startup time; if required, one has to type &lt;code&gt;from sage.manifolds.utilities import set_axes_labels&lt;/code&gt;
* Function &lt;code&gt;xder&lt;/code&gt; (exterior derivative) no longer imported at the startup time; if required, one has to type &lt;code&gt;from sage.manifolds.utilities import xder&lt;/code&gt;
* Class &lt;code&gt;DiffForm&lt;/code&gt;: method &lt;code&gt;exterior_der&lt;/code&gt; renamed &lt;code&gt;exterior_derivative&lt;/code&gt;
* Classes &lt;code&gt;DiffScalarField&lt;/code&gt;, &lt;code&gt;TensorField&lt;/code&gt; and &lt;code&gt;TensorFieldParal&lt;/code&gt;: method &lt;code&gt;lie_der&lt;/code&gt; renamed &lt;code&gt;lie_derivative&lt;/code&gt;, with &lt;code&gt;lie_der&lt;/code&gt; kept as an alias of the latter
More internal changes:
* Manifold structure now described via specific singleton classes: &lt;code&gt;TopologicalStructure&lt;/code&gt;, &lt;code&gt;RealTopologicalStructure&lt;/code&gt;, &lt;code&gt;DifferentialStructure&lt;/code&gt; and &lt;code&gt;RealDifferentialStructure&lt;/code&gt;
* Class &lt;code&gt;TopologicalManifoldSubset&lt;/code&gt; renamed &lt;code&gt;ManifoldSubset&lt;/code&gt;
* Class &lt;code&gt;TopologicalManifoldPoint&lt;/code&gt; renamed &lt;code&gt;ManifoldPoint&lt;/code&gt;
* Manifold subsets are no longer facade parents
* Class &lt;code&gt;ManifoldSubset&lt;/code&gt;: new methods &lt;code&gt;lift&lt;/code&gt; and &lt;code&gt;retract&lt;/code&gt;
* Introduction of the commutative algebra of all symbolic coordinate functions on a given chart: new class &lt;code&gt;CoordFunctionSymbRing&lt;/code&gt; and class &lt;code&gt;CoordFunction&lt;/code&gt; now inheritates from &lt;code&gt;AlgebraElement&lt;/code&gt;
* Class &lt;code&gt;FiniteRankFreeModule&lt;/code&gt;: category changed from &lt;code&gt;Modules(ring)&lt;/code&gt; to &lt;code&gt;Modules(ring).FiniteDimensional()&lt;/code&gt;
* Some changes to prepare the migration to Python 3 (e.g. &lt;code&gt;print&lt;/code&gt; replaced by &lt;code&gt;print()&lt;/code&gt;)
|-
|1.0
|11 January 2017
|Besides the full integration in SageMath 7.5, there are only minor changes with respect to v0.9.1:

Syntactic changes:
* Method &lt;code&gt;plot&lt;/code&gt; of classes &lt;code&gt;RealChart&lt;/code&gt; and &lt;code&gt;VectorField&lt;/code&gt;: keyword argument &lt;code&gt;nb_values&lt;/code&gt; renamed &lt;code&gt;number_values&lt;/code&gt;
* Method &lt;code&gt;structure_coef&lt;/code&gt; of class &lt;code&gt;VectorFrame&lt;/code&gt; renamed &lt;code&gt;structure_coeff&lt;/code&gt;
* Class &lt;code&gt;OpenInterval&lt;/code&gt;: argument &lt;code&gt;subinterval_of&lt;/code&gt; renamed &lt;code&gt;ambient&lt;/code&gt; in the constructor
* Class &lt;code&gt;RealLine&lt;/code&gt;: LateX name changed from &lt;code&gt;\RR&lt;/code&gt; to &lt;code&gt;\Bold{R}&lt;/code&gt;
Internal changes:
* Systematic use of Python3-compatible syntax (to prepare the migration of SageMath to Python3); in particular:
** All occurrences of &lt;code&gt;iteritems()&lt;/code&gt; changed to &lt;code&gt;items()&lt;/code&gt;
** All occurrences of &lt;code&gt;itervalues()&lt;/code&gt; changed to &lt;code&gt;values()&lt;/code&gt;
** Classes &lt;code&gt;ScalarField&lt;/code&gt; and &lt;code&gt;TensorField&lt;/code&gt;: method &lt;code&gt;__nonzero__&lt;/code&gt; renamed &lt;code&gt;__bool__&lt;/code&gt;
** Class &lt;code&gt;TensorField&lt;/code&gt;: method &lt;code&gt;__div__&lt;/code&gt; renamed &lt;code&gt;__truediv__&lt;/code&gt;
* Classes &lt;code&gt;TensorFieldModule&lt;/code&gt;, &lt;code&gt;VectorFieldModule&lt;/code&gt; and &lt;code&gt;DiffFormModule&lt;/code&gt;: add cached method &lt;code&gt;zero&lt;/code&gt;
* Classes &lt;code&gt;DiffForm&lt;/code&gt; and &lt;code&gt;DiffFormParal&lt;/code&gt;: method &lt;code&gt;exterior_derivative&lt;/code&gt; is cached (via the decorator &lt;code&gt;@cached_method&lt;/code&gt;)
* Class &lt;code&gt;VectorFrame&lt;/code&gt;: method &lt;code&gt;structure_coeff&lt;/code&gt; is cached (via the decorator &lt;code&gt;@cached_method&lt;/code&gt;)
Other changes:
* Improvements in the documentation; in particular 3D graphics have been added to the reference manual for illustrating the use of some &lt;code&gt;plot&lt;/code&gt; methods
* Values set by the user to some keyword arguments of &lt;code&gt;plot&lt;/code&gt; methods become the new default values until further explicit change (this behavior is provided by the decorator &lt;code&gt;@options&lt;/code&gt;):
** &lt;code&gt;TangentVector.plot&lt;/code&gt;: argument &lt;code&gt;scale&lt;/code&gt;
** &lt;code&gt;VectorField.plot&lt;/code&gt;: arguments &lt;code&gt;max_range&lt;/code&gt;, &lt;code&gt;scale&lt;/code&gt; and &lt;code&gt;color&lt;/code&gt;
** &lt;code&gt;DifferentiableCurve.plot&lt;/code&gt;: arguments &lt;code&gt;thickness&lt;/code&gt;, &lt;code&gt;plot_points&lt;/code&gt;, &lt;code&gt;max_range&lt;/code&gt; and &lt;code&gt;aspect_ratio&lt;/code&gt;
|-
|1.0.1
|25 March 2017
|
|-
|1.0.2
|21 July 2017
|
|-
|1.1
|7 December 2017
|
|}
More documentation is on [https://doc.sagemath.org/html/en/reference/manifolds/index.html doc.sagemath.org/html/en/reference/manifolds/].

== Free &amp; Open Software ==
As SageMath is, SageManifolds is a [[Free software|free]] and [[Open-source software|open source]] software based on the [[Python (programming language)|Python]] programming language. It is released under the [[GNU General Public License]]. To download and install SageManifolds, see [http://sagemanifolds.obspm.fr/download.html here]. It is more specifically [https://www.gnu.org/licenses/gpl.html GPL v2+] (meaning that a user may elect to use a licence higher than GPL version 2.)

== Development ==
Much of the source is on tickets at [http://trac.sagemath.org trac.sagemath.org].

There are Github repositories at [https://github.com/sagemanifolds/SageManifolds github.com/sagemanifolds/SageManifolds].

Other links are provided at [http://sagemanifolds.obspm.fr/contact.html sagemanifolds.obspm.fr/contact.html].

[[Category:Free mathematics software]]
[[Category:Python scientific libraries]]
[[Category:Free software programmed in Python]]
[[Category:Free educational software]]
[[Category:Mathematical software]]
[[Category:Free computer algebra systems]]
[[Category:Computer algebra system software for Linux]]
[[Category:Computer algebra system software for MacOS]]
[[Category:Computer algebra system software for Windows]]</text>
      <sha1>8sx3f7rsn8umrus0inpgwbf3022l34x</sha1>
    </revision>
  </page>
  <page>
    <title>Several complex variables</title>
    <ns>0</ns>
    <id>360243</id>
    <revision>
      <id>860563199</id>
      <parentid>860559609</parentid>
      <timestamp>2018-09-21T14:38:00Z</timestamp>
      <contributor>
        <username>Purgy Purgatorio</username>
        <id>22035051</id>
      </contributor>
      <comment>/* Holomorphic functions */ less generous notation</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="15192">{{Technical|date=January 2015}}

{{Functions}}
The theory of [[function (mathematics)|function]]s of '''several complex variables''' is the branch of [[mathematics]] dealing with [[complex number|complex valued]] functions

:&lt;math&gt;f(z_1,z_2, \ldots, z_n)&lt;/math&gt;

on the [[#The Cn space|space {{math|'''C'''&lt;sup&gt;''n''&lt;/sup&gt;}} of {{mvar|n}}-tuples]] of complex numbers. As in [[complex analysis]], which is the case {{math|1=''n'' = 1}} but of a distinct character, these are not just any functions: they are supposed to be '''[[holomorphic function|holomorphic]]''' or '''complex analytic''', so that locally speaking they are [[power series]] in the variables {{mvar|z&lt;sub&gt;i&lt;/sub&gt;}}.

Equivalently, as it turns out, they are locally [[uniform convergence|uniform limits]] of [[polynomial]]s; or local&lt;!--ly [[Lp space|square-intgrable]]{{citation needed|date=July 2013|reason=It is plausible, but the fact that any L² solution is differentiable in the sense of mathematical analysis needs a citation}}--&gt; solutions to the {{mvar|n}}-dimensional [[Several complex variables#Holomorphic functions|Cauchy–Riemann equations]].

== Historical perspective ==

Many examples of such functions were familiar in nineteenth-century mathematics: [[abelian variety|abelian functions]], [[theta function]]s, and some [[hypergeometric series]]. Naturally also any function of one variable that depends on some complex [[parameter]] is a candidate. The theory, however, for many years didn't become a full-fledged area in [[mathematical analysis]], since its characteristic phenomena weren't uncovered.  The [[Weierstrass preparation theorem]] would now be classed as [[commutative algebra]]; it did justify the local picture, [[Ramification (mathematics)|ramification]], that addresses the generalisation of the [[branch point]]s of [[Riemann surface]] theory.

With work of [[Friedrich Hartogs]], and of [[Kiyoshi Oka]] in the 1930s, a general theory began to emerge; others working in the area at the time were [[Heinrich Behnke]], [[Peter Thullen]] and [[Karl Stein (mathematician)|Karl Stein]].  Hartogs proved some basic results, such as every [[isolated singularity]] is [[removable singularity|removable]], for any analytic function 
:&lt;math&gt;f:\mathbf{C}^n\longrightarrow\mathbf{C}&lt;/math&gt; 
whenever {{math|1=''n'' &gt; 1}}.  Naturally the analogues of [[Line integral|contour integrals]] will be harder to handle: when {{math|1=''n'' = 2}} an integral surrounding a point should be over a three-dimensional [[manifold]] (since we are in four real dimensions), while iterating contour (line) integrals over two separate complex variables should come to a [[double integral]] over a two-dimensional surface. This means that the [[residue calculus]] will have to take a very different character.

After 1945 important work in France, in the seminar of [[Henri Cartan]], and Germany with [[Hans Grauert]] and [[Reinhold Remmert]], quickly changed the picture of the theory. A number of issues were clarified, in particular that of [[analytic continuation]]. Here a major difference is evident from the one-variable theory: while for any open connected set {{mvar|D}} in {{math|'''C'''}} we can find a function that will nowhere continue analytically over the boundary, that cannot be said for {{math|''n'' &gt; 1}}. In fact the {{mvar|D}} of that kind are rather special in nature (a condition called ''[[pseudoconvexity]]''). The natural domains of definition of functions, continued to the limit, are called ''[[Stein manifold]]s'' and their nature was to make [[sheaf cohomology]] groups vanish. In fact it was the need to put (in particular) the work of Oka on a clearer basis that led quickly to the consistent use of sheaves for the formulation of the theory (with major repercussions for [[algebraic geometry]], in particular from Grauert's work).

From this point onwards there was a foundational theory, which could be applied to ''analytic geometry'' (a name adopted, confusingly, for the geometry of zeroes of analytic functions: this is not the [[analytic geometry]] learned at school), [[automorphic form]]s of several variables, and [[partial differential equation]]s. The [[complex structure deformation|deformation theory of complex structures]] and [[complex manifold]]s was described in general terms by [[Kunihiko Kodaira]] and [[D. C. Spencer]]. The celebrated paper ''[[GAGA]]'' of [[Jean-Pierre Serre|Serre]] pinned down the crossover point from ''géometrie analytique'' to ''géometrie algébrique''.

[[C. L. Siegel]] was heard to complain that the new ''theory of functions of several complex variables'' had few ''functions'' in it, meaning that the [[special function]] side of the theory was subordinated to sheaves. The interest for [[number theory]], certainly, is in specific generalisations of [[modular form]]s. The classical candidates are the [[Hilbert modular form]]s and [[Siegel modular form]]s. These days these are associated to [[algebraic group]]s (respectively the [[Weil restriction]] from a [[totally real number field]] of {{math|[[general linear group|GL]](2)}}, and the [[symplectic group]]), for which it happens that [[automorphic representation]]s can be derived from analytic functions. In a sense this doesn't contradict Siegel; the modern theory has its own, different directions.

Subsequent developments included the [[hyperfunction]] theory, and the [[edge-of-the-wedge theorem]], both of which had some inspiration from [[quantum field theory]]. There are a number of other fields, such as [[Banach algebra]] theory, that draw on several complex variables.

== Holomorphic functions ==
A function &lt;math&gt;f(z)&lt;/math&gt; defined on a domain &lt;math&gt;U \subset \mathbb{C}^n&lt;/math&gt; is called holomorphic if &lt;math&gt;f(z)&lt;/math&gt; satisfies one of the following two conditions.

:(i) For each point &lt;math&gt;a=(a^1,\dots,a^n)\in U\subset\mathbb{C}^n&lt;/math&gt; , &lt;math&gt;f(z)&lt;/math&gt; is expressed as a power series expansion that is convergent on &lt;math&gt;U&lt;/math&gt; :
::::{{NumBlk|:|&lt;math&gt;f(z)=\sum c_{k_1,\dots,k_n}(z^1-a^1)^{k_1}\cdots(z^n-a^n)^{k_n}\ ,&lt;/math&gt;|{{EquationRef|1}}}}
:which was the origin of Weierstrass' analytic methods.

:(ii) If &lt;math&gt;f(z)&lt;/math&gt; is continuous on &lt;math&gt;U&lt;/math&gt;, and for each variable &lt;math&gt;z^\lambda&lt;/math&gt; , &lt;math&gt;f(z)&lt;/math&gt; is holomorphic, namely,
::::{{NumBlk|:|&lt;math&gt;\frac{\partial f}{\partial\bar{z}^\lambda}=0&lt;/math&gt;|{{EquationRef|2}}}}
:which is a generalization of the [[Cauchy–Riemann equations]] (using a partial [[Wirtinger derivative]]), and has the origin of Riemann's differential equation methods. (Using [[Hartogs' extension theorem]], continuity in (ii) is not necessary.)

For each index λ let
:&lt;math&gt;z^\lambda=x^\lambda+iy^\lambda,\quad f(z^1,\dots z^n)=u(x^1,\dots x^n,y^1\dots y^n) +iv(x^1,\dots x^n,y^1,\dots y^n),&lt;/math&gt;

and generalize the usual Cauchy–Riemann equation for one variable for each index λ, then we obtain
:{{NumBlk|:|&lt;math&gt;\frac{\partial u}{\partial x^\lambda}=\frac{\partial v}{\partial y^\lambda},\ \ \ \ \frac{\partial u}{\partial y^\lambda}=-\frac{\partial v}{\partial x^\lambda}&lt;/math&gt;.|{{EquationRef|3}}}}
Let
:&lt;math&gt;\begin{align}dz^\lambda &amp; =dx^\lambda+idy^\lambda,&amp; d\bar{z}^\lambda &amp; =dx^\lambda-idy^\lambda \\
\frac{\partial}{\partial z^\lambda} &amp; =\frac{1}{2}\biggl(\frac{\partial}{\partial x^\lambda}-i\frac{\partial}{\partial y^\lambda}\biggr), &amp; \frac{\partial}{\partial\bar{z}^\lambda} &amp; =\frac{1}{2}\biggl(\frac{\partial}{\partial x^\lambda}+i\frac{\partial}{\partial y^\lambda}\biggr)\end{align}&lt;/math&gt;
through
:&lt;math&gt;\text{Re}\biggl(\frac{\partial f}{\partial\bar{z}^\lambda}\biggr)=\frac{\partial u}{\partial x^\lambda}-\frac{\partial v}{\partial y^\lambda}=0,\ \ \ \ \text{Im}\biggl(\frac{\partial f}{\partial\bar{z}^\lambda}\biggr)=\frac{\partial u}{\partial y^\lambda}+\frac{\partial v}{\partial x^\lambda}=0&lt;/math&gt;
the above equations (2) and (3) turn to be equivalent. 

To show that above two conditions (i) and (ii) are equivalent, it is easy to prove (i) → (ii). To prove (ii) → (i) one uses [[Cauchy's integral formula]] on the n-multiple disc for several complex variables
:{{NumBlk|:|&lt;math&gt;f(z^1,\dots,z^n)=\biggl(\frac{1}{2\pi i}\biggr)^n\int_{|a^1-w^1|=r_1}\cdots\int_{|a^n-w^n|=r_n}\frac{f(w^1,\dots,w^n)dw^1\cdots dw^n}{(w^1-z^1)\cdots(w^n-z^n)}&lt;/math&gt;|{{EquationRef|4}}}}
and then estimates the coefficients of the power series expansion &lt;math&gt;c_{k_1,\dots,k_n}&lt;/math&gt;  in (1). While in one variable case the Cauchy's integral formula is an integral over the circumference of a disc with some radius r, in several variables case over the surface of a [[polydisc|multiple disc]] with radii &lt;math&gt;r_i&lt;/math&gt; 's as in (4).

As same as the one variable case, the [[identity theorem]] holds due to the properties of [[Laurent series]] that hold in several variable case.
:Let &lt;math&gt;G_1, G_2\subset\mathbb{C}&lt;/math&gt; be some domains, &lt;math&gt;G_1\cap G_2&lt;/math&gt; [[connected space|connected]], &lt;math&gt;f_1&lt;/math&gt; and &lt;math&gt;f_2&lt;/math&gt; holomorphic functions on &lt;math&gt;G_1, G_2&lt;/math&gt; respectively, and &lt;math&gt;z^0=x^0+iy^0 \in G_1\cap G_2&lt;/math&gt; .
:If &lt;math&gt;f_1=f_2&lt;/math&gt; on &lt;math&gt;\{z\bigl||z_j-z_j^0|&lt;r_j,y=y^0,1\le j\le n\}&lt;/math&gt; there is then a unique holomorphic function &lt;math&gt;f&lt;/math&gt; on &lt;math&gt;G_1\cup G_2&lt;/math&gt; such that &lt;math&gt;f=f_1&lt;/math&gt; on &lt;math&gt;G_1&lt;/math&gt; and &lt;math&gt;f=f_2&lt;/math&gt; on &lt;math&gt;G_2&lt;/math&gt; .  

Therefore, [[Liouville's theorem (complex analysis)|Liouville's theorem]] for entire functions, and the [[maximal principle]] hold for several variables. Also, the [[inverse function theorem]] and [[implicit function theorem]] hold as in the one variable case.

== An example on analytic continuation ==
As described in [[#holomorphic function|the previous]] there are similar results in several variables case as one variable case. However, there are very different aspects in several variable case. For example, [[Riemann mapping theorem]], [[Mittag-Leffler's theorem]], [[Weierstrass factorization theorem|Weierstrass theorem]], [[Runge's theorem]] and so on can not apply to the several variables case as it is in one variable case. The following example of analytic continuation in two variables shows these differences, which was one of motivations to complex analysis in several variables.

In several variables [[analytic continuation]] is defined in the same way as in one variable case. Namely, let &lt;math&gt;U, V&lt;/math&gt; be open subsets in &lt;math&gt;\mathbb{C}^n&lt;/math&gt;, &lt;math&gt;f \in \mathcal{O}(U)&lt;/math&gt; and &lt;math&gt;g \in \mathcal{O}(V)&lt;/math&gt;. Assume that &lt;math&gt;U \cap V \ne \varnothing&lt;/math&gt; and &lt;math&gt;W&lt;/math&gt; is a [[connected component (topology)|connected component]] of &lt;math&gt;U \cap V&lt;/math&gt;. If &lt;math&gt;f|_W =g|_W&lt;/math&gt; then &lt;math&gt;h&lt;/math&gt; is defined as
:&lt;math&gt;h(z) = \begin{cases} f(z) &amp; z\in U, \\ g(z) &amp; z\in V. \end{cases}&lt;/math&gt;
The above &lt;math&gt;h&lt;/math&gt; is called analytic continuation of &lt;math&gt;f&lt;/math&gt; or &lt;math&gt;g&lt;/math&gt;. Note that &lt;math&gt;h&lt;/math&gt; is uniquely determined by the [[identity theorem]] but may be [[multi-valued function|multi-valued]].

In one variable case, &lt;math&gt;n=1&lt;/math&gt;, for any open domain &lt;math&gt;U \varsubsetneqq \mathbb{C}&lt;/math&gt; there is a holomorphic function &lt;math&gt;f&lt;/math&gt; on &lt;math&gt;U&lt;/math&gt; that cannot be analytically continued beyond &lt;math&gt;U&lt;/math&gt;. This is because for any &lt;math&gt;a\in\partial U&lt;/math&gt;, &lt;math&gt;f=\frac{1}{z-a}&lt;/math&gt; cannot be analytically continued beyond
&lt;math&gt;a&lt;/math&gt;. However, in case of several variables  &lt;math&gt;n\ge 2&lt;/math&gt;, it can occur that there exists a strictly larger open domain &lt;math&gt;\widetilde{U} \varsupsetneqq U&lt;/math&gt; such that all &lt;math&gt;f\in\mathcal{O}(U)&lt;/math&gt; can be analytically continued to &lt;math&gt;\tilde{f} \in\widetilde{U}&lt;/math&gt;. This phenomenon is called '''[[Hartogs' phenomenon]]'''.

== The '''C'''&lt;sup&gt;''n''&lt;/sup&gt; space ==
The simplest Stein manifold is the space {{math|'''C'''&lt;sup&gt;''n''&lt;/sup&gt;}} (the [[complex number|complex]] {{mvar|n}}-space), which consists of {{mvar|n}}-[[tuple]]s of complex numbers. It can be considered as an {{mvar|n}}-[[dimension (mathematics)|dimensional]] [[vector space]] over [[complex number]]s, which gives its dimension {{math|2''n''}} over [[real number|{{math|'''R'''}}]].&lt;ref&gt;The field of complex numbers is a 2-dimensional vector space over real numbers.&lt;/ref&gt; Hence, as a set, and as [[topological space]], {{math|'''C'''&lt;sup&gt;''n''&lt;/sup&gt;}} is identical to [[real coordinate space|{{math|'''R'''&lt;sup&gt;2''n''&lt;/sup&gt;}}]]&lt;!-- explain the x1/y1/x2/y2 order of the standard basis --&gt; and its [[topological dimension]] is {{math|2''n''}}.

In coordinate-free language, any vector space over complex numbers may be thought of as a real vector space of twice dimensions, where [[almost complex manifold|a complex structure]] is specified with a [[linear operator]] {{mvar|J}} (such that {{math|1=''J''&lt;sup&gt; 2&lt;/sup&gt; = [[reflection through the origin|−''I'']]}}) which defines the [[scalar multiplication|multiplication]] to the [[imaginary unit]] {{math|''i''}}.

Any such space, as a real space, is [[orientation (vector space)|oriented]]. On the [[complex plane]] thought of as the [[Cartesian plane]], [[multiplication]] to a complex number {{math|1=''w'' = ''u'' + ''iv''}} has the real [[matrix (mathematics)|matrix]]
:&lt;math&gt;\begin{pmatrix}
u &amp;&amp;-v \\
v &amp;&amp; u
\end{pmatrix},&lt;/math&gt;

a [[2&amp;#8239;×&amp;#8239;2 real matrix]] that has the [[determinant]]

:&lt;math&gt;u^2 + v^2 = |w|^2\,.&lt;/math&gt;

Likewise, if one expresses any finite-dimensional complex linear operator as a real matrix (which will be [[block matrix|composed from 2&amp;#8239;×&amp;#8239;2 blocks]] of the aforementioned form), then its determinant equals to the [[square (algebra)#In complex analysis|square of absolute value]] of the corresponding complex determinant. It is a non-negative number, which implies that [[real coordinate space#Orientation|the (real) orientation of the space is never reversed]] by a complex operator. The same applies to [[Jacobian matrix and determinant|Jacobians]] of [[holomorphic function]]s from {{math|'''C'''&lt;sup&gt;''n''&lt;/sup&gt;}} to {{math|'''C'''&lt;sup&gt;''n''&lt;/sup&gt;}}.
{{expand section|date=April 2013}}

==See also==

*[[Coherent sheaf]]
*[[Cartan's theorems A and B]]
*[[Cousin problems]]
*[[Hartogs' lemma]]
*[[Hartogs' theorem]]
*[[Biholomorphism]]
*[[Domain of holomorphy]]
*[[Complex geometry]]
*[[Complex projective space]]
*[[Several real variables]]
*[[Harmonic map]]s
*[[Harmonic morphism]]s

==Footnotes==
{{reflist}}

==References==

*H. Behnke and P. Thullen, ''Theorie der Funktionen mehrerer komplexer Veränderlichen'' (1934)
*[[Salomon Bochner]] and W. T. Martin ''Several Complex Variables'' (1948)
*[[Lars Hörmander]], ''An Introduction to Complex Analysis in Several Variables'' (1966) and later editions
*Steven G. Krantz, ''Function Theory of Several Complex Variables'' (1992)

*R. Michael Range, ''Holomorphic Functions and Integral Representations in Several Complex Variables'', Springer 1986, 1998
*Volker Scheidemann, ''Introduction to complex analysis in several variables'', Birkhäuser, 2005, {{isbn|3-7643-7490-X}}
==External links==

* [http://www.jirka.org/scv/ Tasty Bits of Several Complex Variables] open source book by Jiří Lebl
[[Category:Several complex variables| ]]
[[Category:Multivariable calculus]]</text>
      <sha1>tv6oryjeh3wvr6ov9hrx9hi6vmb1ezc</sha1>
    </revision>
  </page>
  <page>
    <title>Shuffle algebra</title>
    <ns>0</ns>
    <id>32234404</id>
    <revision>
      <id>841357861</id>
      <parentid>841031240</parentid>
      <timestamp>2018-05-15T10:45:29Z</timestamp>
      <contributor>
        <username>Rjwilmsi</username>
        <id>203434</id>
      </contributor>
      <minor/>
      <comment>/* References */Journal cites, added 2 DOIs</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="4941">In mathematics, a '''shuffle algebra''' is a [[Hopf algebra]] with a basis corresponding to words on some set, whose product is given by the '''shuffle product''' ''X'' ⧢ ''Y'' of two words ''X'', ''Y'': the sum of all ways of interlacing them.  The interlacing is given by the [[riffle shuffle permutation]].

The shuffle algebra on a finite set is the graded dual of the [[universal enveloping algebra]] of the [[free Lie algebra]] on the set.

Over the rational numbers, the shuffle algebra is isomorphic to the [[polynomial algebra]] in the [[Lyndon word]]s.

==Shuffle product==
The shuffle product of words of lengths ''m'' and ''n'' is a sum over the {{sfrac|(''m''+''n'')!|''m''!''n''!}} ways of interleaving the two words, as shown in the following examples:
:''ab'' ⧢ ''xy'' = ''abxy'' + ''axby'' + ''xaby'' + ''axyb'' + ''xayb'' + ''xyab''
:''aaa'' ⧢ ''aa'' = 10''aaaaa''

It may be defined inductively by&lt;ref&gt;Lothaire (1997) pp.101,126&lt;/ref&gt;
:''ua'' ⧢ ''vb'' = (''u'' ⧢ ''vb'')''a'' + (''ua'' ⧢ ''v'')''b''

The shuffle product was introduced by {{harvtxt|Eilenberg|Mac Lane|1953}}. The name "shuffle product" refers to the fact that the product can be thought of as a sum over all ways of [[riffle shuffle|riffle shuffling]] two words together: this is the [[riffle shuffle permutation]].  The product is [[Commutative property|commutative]] and [[Associative property|associative]].&lt;ref name=L126&gt;Lothaire (1997) p.126&lt;/ref&gt;

The shuffle product of two words in some alphabet is often denoted by the '''shuffle product symbol''' ⧢ ([[Unicode]] character U+2932 {{sc|shuffle product}}, derived from the [[Cyrillic]] letter {{angbr|ш}} [[Sha (Cyrillic)|sha]]).

==Infiltration product==
The closely related '''infiltration product''' was introduced by {{harvtxt|Chen|Fox|Lyndon|1958}}.  It is defined inductively on words over an alphabet ''A'' by

:''fa'' ↑ ''ga'' = (''f'' ↑ ''ga'')''a'' + (''fa'' ↑ ''g'')''a'' + (''f'' ↑ ''g'')''a''
:''fa'' ↑ ''gb'' = (''f'' ↑ ''gb'')''a'' + (''fa'' ↑ ''g'')''b''

For example:
:''ab'' ↑ ''ab'' = ''ab'' + 2''aab'' + 2''abb'' + 4 ''aabb'' + 2''abab''
:''ab'' ↑ ''ba'' = ''aba'' + ''bab'' + ''abab'' + 2''abba'' + 2''baab'' + ''baba''

The infiltration product is also commutative and associative.&lt;ref name=L128&gt;Lothaire (1997) p.128&lt;/ref&gt;

==See also==
* [[Hopf algebra of permutations]]
* [[Zinbiel algebra]]

==References==
{{reflist}}
*{{Citation | last1=Chen | first1=Kuo-Tsai | last2=Fox | first2=Ralph H. | author2-link=Ralph Fox | last3=Lyndon | first3=Roger C. | author3-link=Roger Lyndon | title=Free differential calculus. IV. The quotient groups of the lower central series | jstor=1970044 | mr=0102539 | zbl=0142.22304  |year=1958 | journal=[[Annals of Mathematics]] |series=Second Series | issn=0003-486X | volume=68 | pages=81–95 | issue=1 | doi=10.2307/1970044}}
*{{Citation | last1=Eilenberg | first1=Samuel | author1-link=Samuel Eilenberg | last2=Mac Lane | first2=Saunders | author2-link=Saunders Mac Lane | title=On the groups of H(Π,n). I | jstor=1969820 | mr=0056295 | zbl=0050.39304  | year=1953 | journal=[[Annals of Mathematics]] |series=Second Series | issn=0003-486X | volume=58 | pages=55–106 | doi=10.2307/1969820}}
*{{Citation | last1=Green | first1=J. A. | title=Shuffle algebras, Lie algebras and quantum groups | url=https://books.google.com/books?id=jxvvAAAAMAAJ | publisher=Universidade de Coimbra Departamento de Matemática | location=Coimbra | series=Textos de Matemática. Série B  | mr=1399082 | year=1995 | volume=9}}
*{{eom|id=S/s110110|first=M. |last=Hazewinkel}}
*{{citation | mr=2724822 | zbl=1211.16023
|last=Hazewinkel|first= Michiel|last2= Gubareni|first2= Nadiya|last3= Kirichenko|first3= V. V.
|title=Algebras, rings and modules. Lie algebras and Hopf algebras|series= Mathematical Surveys and Monographs|volume= 168|publisher= American Mathematical Society|place= Providence, RI|year= 2010|ISBN= 978-0-8218-5262-0|doi=10.1090/surv/168}}
*{{Citation | last=Lothaire | first=M. | authorlink=M. Lothaire | others=Perrin, D.; Reutenauer, C.; Berstel, J.; Pin, J. E.; Pirillo, G.; Foata, D.; Sakarovitch, J.; Simon, I.; Schützenberger, M. P.; Choffrut, C.; Cori, R.; Lyndon, Roger; Rota, Gian-Carlo. Foreword by Roger Lyndon | title=Combinatorics on words | edition=2nd | series=Encyclopedia of Mathematics and Its Applications | volume=17 | publisher=[[Cambridge University Press]] | year=1997 | isbn=0-521-59924-5 | zbl=0874.20040 }}
*{{Citation | last1=Reutenauer | first1=Christophe | title=Free Lie algebras | url=https://books.google.com/books?id=cBvvAAAAMAAJ | publisher=The Clarendon Press Oxford University Press | series=London Mathematical Society Monographs. New Series | isbn=978-0-19-853679-6 | mr=1231799 | zbl=0798.17001 | year=1993 | volume=7}}

==External links==
* [http://mirror.ctan.org/fonts/shuffle/shuffle.pdf Shuffle product symbol]

[[Category:Combinatorics]]
[[Category:Algebra]]</text>
      <sha1>ri1q1u2ghxki39afnpdh76rp3j4aj3l</sha1>
    </revision>
  </page>
  <page>
    <title>Simple precedence grammar</title>
    <ns>0</ns>
    <id>2001331</id>
    <revision>
      <id>599806167</id>
      <parentid>546515668</parentid>
      <timestamp>2014-03-16T02:07:59Z</timestamp>
      <contributor>
        <username>Michael Hardy</username>
        <id>4626</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2802">A '''simple precedence grammar''' is a [[context-free]] [[formal grammar]] that can be parsed with a [[simple precedence parser]].&lt;ref&gt;
The Theory of Parsing, Translation, and Compiling: Compiling, Alfred V. Aho, Jeffrey D. Ullman, Prentice–Hall, 1972.&lt;/ref&gt;  The concept was first developed by [[Niklaus Wirth]] and [[Helmut Weber]] from the ideas of [[Robert Floyd]] in their paper, ''EULER: a generalization of ALGOL, and its formal definition'', in the [[Communications of the ACM]] in 1966.&lt;ref&gt;{{citation |title=Machines, Languages, and Computation |publisher=[[Prentice–Hall]] |year=1978 |isbn=9780135422588 |quote=Wirth and Weber [1966] generalized Floyd's precedence grammars, obtaining the simple precedence grammars.}}&lt;/ref&gt;

==Formal definition==

G = (''N'', Σ, ''P'', ''S'') is a simple precedence grammar if all the production rules in ''P'' comply with the following constraints:

* There are no [[erasing rule]]s (ε-productions)
* There are no [[Useless Rules|useless rules]] (unreachable symbols or unproductive rules)
* For each pair of symbols ''X'', ''Y'' (''X'', ''Y'' &lt;math&gt;\in&lt;/math&gt; (''N'' ∪ Σ)) there is only one [[Wirth–Weber precedence relationship|Wirth–Weber precedence relation]].
* G is [[Uniquely Inversible Grammar|uniquely inversible]]

==Examples==
&lt;math&gt;S \to aSSb | c&lt;/math&gt;

precedence table:
{|class="wikitable" cellpadding="2" style="background-color:white"
| ||S||a||b||c||$
|-
|S||&lt;math&gt;\dot =&lt;/math&gt;|| &lt;math&gt;\lessdot&lt;/math&gt; || &lt;math&gt;\dot =&lt;/math&gt; || &lt;math&gt;\lessdot&lt;/math&gt;||
|-
|a||&lt;math&gt;\dot =&lt;/math&gt;||&lt;math&gt;\lessdot&lt;/math&gt;||  ||&lt;math&gt;\lessdot&lt;/math&gt;||
|-
|b||  ||&lt;math&gt;\gtrdot&lt;/math&gt;||  ||&lt;math&gt;\gtrdot&lt;/math&gt;||&lt;math&gt;\gtrdot&lt;/math&gt;
|-
|c||  ||&lt;math&gt;\gtrdot&lt;/math&gt;||&lt;math&gt;\gtrdot&lt;/math&gt;||&lt;math&gt;\gtrdot&lt;/math&gt;||&lt;math&gt;\gtrdot&lt;/math&gt;
|-
|$|| ||&lt;math&gt;\lessdot&lt;/math&gt;||  ||&lt;math&gt;\lessdot&lt;/math&gt;||
|}
&lt;!--
===Example number 2===
:&lt;math&gt;E \to E + E | id&lt;/math&gt;
:precedence table:
:{|border="1" cellpadding="2"
| ||E||+||id|
|-
|E||   ||&lt;math&gt;\dot =&lt;/math&gt; &lt;math&gt;\grdot&lt;/math&gt; &lt;math&gt;\lessdot&lt;/math&gt;||  
|-
|+||&lt;math&gt;\dot =&lt;/math&gt;||  ||&lt;math&gt;\lessdot&lt;/math&gt;  
|-
|id||   ||&lt;math&gt;\gtrdot&lt;/math&gt;||  
|}
--&gt;

==Notes==
{{reflist}}

==References==
* Alfred V. Aho, Jeffrey D. Ullman (1977). ''Principles of Compiler Design''. 1st Edition. Addison–Wesley.
* William A. Barrett, John D. Couch (1979). ''Compiler construction: Theory and Practice''. Science Research Associate.
* Jean-Paul Tremblay, P. G. Sorenson (1985). ''The Theory and Practice of Compiler Writing''. McGraw–Hill.

==External links==
* [http://www.cs.clemson.edu/course/cpsc827/material/Simple%20Precedence/Relations.pdf "Simple Precedence Relations"] at Clemson University

{{DEFAULTSORT:Simple Precedence Grammar}}
[[Category:Formal languages]]


{{comp-sci-stub}}
{{Compu-lang-stub}}</text>
      <sha1>3urqk6esmg8ds923g9p7vxgfxhg1xdq</sha1>
    </revision>
  </page>
  <page>
    <title>Spintronics</title>
    <ns>0</ns>
    <id>61220</id>
    <revision>
      <id>870502207</id>
      <parentid>863397625</parentid>
      <timestamp>2018-11-25T06:48:31Z</timestamp>
      <contributor>
        <username>Emergingtech1</username>
        <id>34983860</id>
      </contributor>
      <comment>remove minor typo, add example of use of spintronics in neuromorphic computing</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="28417">{{Use dmy dates|date=October 2013}}
'''Spintronics''' (a [[portmanteau]] meaning '''spin transport electronics'''&lt;ref&gt;{{Cite journal | last1 = Wolf | first1 = S. A. | last2 = Chtchelkanova | first2 = A. Y. | last3 = Treger | first3 = D. M. | title = Spintronics—A retrospective and perspective | doi = 10.1147/rd.501.0101 | journal = IBM Journal of Research and Development | volume = 50 | pages = 101 | year = 2006 | pmid =  | pmc = }}&lt;/ref&gt;&lt;ref&gt;[http://video.google.com/videoplay?docid=2927943907685656536&amp;q=LevyResearch&amp;ei=dxd1SNCtOqj2rAKxzf1p Physics Profile: "Stu Wolf: True D! Hollywood Story"] {{dead link|date=June 2016|bot=medic}}{{cbignore|bot=medic}}&lt;/ref&gt;&lt;ref&gt;[http://www.sciencemag.org/content/294/5546/1488.short Spintronics: A Spin-Based Electronics Vision for the Future]. Sciencemag.org (16 November 2001). Retrieved on 21 October 2013.&lt;/ref&gt;), also known as '''spin electronics''', is the study of the intrinsic [[spin (physics)|spin]] of the [[electron]] and its associated [[magnetic moment]], in addition to its fundamental electronic charge, in [[Solid-state electronics|solid-state devices]].&lt;ref&gt;S. Bhatti, et al., Mater. Today (2017), https://dx.doi.org/10.1016/j.mattod.2017.07.007&lt;/ref&gt;

Spintronics fundamentally differs from traditional electronics in that, in addition to charge state, electron spins are exploited as a further degree of freedom, with implications in the efficiency of data storage and transfer. Spintronic systems are most often realised in [[Magnetic semiconductor|dilute magnetic semiconductors (DMS)]] and [[Heusler alloy]]s and are of particular interest in the field of [[quantum computing]] and neuromorphic computing.&lt;ref&gt;"[https://www.academia.edu/37832670/A_Survey_of_Spintronic_Architectures_for_Processing-in-Memory_and_Neural_Networks A Survey of Spintronic Architectures for Processing-in-Memory and Neural Networks]", Journal of Systems Architecture, 2018&lt;/ref&gt;

==History==
Spintronics emerged from discoveries in the 1980s concerning spin-dependent electron transport phenomena in solid-state devices. This includes the observation of spin-polarized electron injection from a ferromagnetic metal to a normal metal by Johnson and Silsbee (1985)&lt;ref&gt;{{Cite journal | last1 = Johnson | first1 = M. | last2 = Silsbee | first2 = R. H. | doi = 10.1103/PhysRevLett.55.1790 | title = Interfacial charge-spin coupling: Injection and detection of spin magnetization in metals | journal = Physical Review Letters | volume = 55 | issue = 17 | pages = 1790–1793 | year = 1985 | pmid =  10031924| pmc = |bibcode = 1985PhRvL..55.1790J }}&lt;/ref&gt; and the discovery of [[giant magnetoresistance]] independently by [[Albert Fert]] et al.&lt;ref&gt;{{Cite journal | last1 = Baibich | first1 = M. N. | last2 = Broto | first2 = J. M. | last3 = Fert | first3 = A. | last4 = Nguyen Van Dau | first4 = F. N. | last5 = Petroff | first5 = F. | last6 = Etienne | first6 = P. | last7 = Creuzet | first7 = G. | last8 = Friederich | first8 = A. | last9 = Chazelas | first9 = J. | doi = 10.1103/PhysRevLett.61.2472 | title = Giant Magnetoresistance of (001)Fe/(001)Cr Magnetic Superlattices | journal = Physical Review Letters | volume = 61 | issue = 21 | pages = 2472–2475 | year = 1988 | pmid =  10039127| pmc = |bibcode = 1988PhRvL..61.2472B | url = http://www.lume.ufrgs.br/bitstream/10183/99075/1/000014840.pdf }}&lt;/ref&gt; and [[Peter Grünberg]] et al. (1988).&lt;ref&gt;{{Cite journal | last1 = Binasch | first1 = G. | last2 = Grünberg | first2 = P. | last3 = Saurenbach | first3 = F. | last4 = Zinn | first4 = W. | title = Enhanced magnetoresistance in layered magnetic structures with antiferromagnetic interlayer exchange | doi = 10.1103/PhysRevB.39.4828 | journal = Physical Review B | volume = 39 | issue = 7 | pages = 4828 | year = 1989 | pmid =  | pmc = |bibcode = 1989PhRvB..39.4828B }}&lt;/ref&gt; The origin of spintronics can be traced to the ferromagnet/superconductor tunneling experiments pioneered by Meservey and Tedrow and initial experiments on magnetic tunnel junctions by Julliere in the 1970s.&lt;ref&gt;{{Cite journal | last1 = Julliere | first1 = M. | title = Tunneling between ferromagnetic films | doi = 10.1016/0375-9601(75)90174-7 | journal = Physics Letters A | volume = 54 | issue = 3 | pages = 225–226| year = 1975 | pmid =  | pmc = |bibcode = 1975PhLA...54..225J }}&lt;/ref&gt; The use of semiconductors for spintronics began with the theoretical proposal of a spin field-effect-transistor by [[Supriyo Datta|Datta]] and Das in 1990&lt;ref&gt;{{cite journal| doi =  10.1063/1.102730| author =  Datta, S.| author2 =  Das, B.| last-author-amp =  yes |title = Electronic analog of the electrooptic modulator|journal = Applied Physics Letters| volume = 56| pages = 665–667|date = 1990|bibcode = 1990ApPhL..56..665D| issue =  7 }}&lt;/ref&gt; and of the [[electric dipole spin resonance]] by [[Emmanuel Rashba|Rashba]] in 1960.&lt;ref&gt;E. I. Rashba,  Cyclotron and combined resonances in a perpendicular field, Sov. Phys. Solid State  '''2''', 1109 -1122 (1960)&lt;/ref&gt;

== Theory ==
{{main|Spin (physics)}}

The [[Spin (physics)|spin]] of the electron is an intrinsic [[angular momentum]] that is separate from the angular momentum due to its orbital motion. The magnitude of the projection of the electron's spin along an arbitrary axis is &lt;math&gt;\tfrac{1}{2}\hbar&lt;/math&gt;, implying that the electron acts as a [[Fermion]] by the [[spin-statistics theorem]]. Like orbital angular momentum, the spin has an associated [[magnetic moment]], the magnitude of which is expressed as

:&lt;math&gt;\mu=\tfrac{\sqrt{3}}{2}\frac{q}{m_e}\hbar&lt;/math&gt;.

In a solid, the spins of many electrons can act together to affect the magnetic and electronic properties of a material, for example endowing it with a permanent magnetic moment as in a [[ferromagnet]].

In many materials, electron spins are equally present in both the up and the down state, and no transport properties are dependent on spin. A spintronic device requires generation or manipulation of a spin-polarized population of electrons, resulting in an excess of spin up or spin down electrons. The polarization of any spin dependent property X can be written as

:&lt;math&gt;P_X=\frac{X_{\uparrow}-X_{\downarrow}}{X_{\uparrow}+X_{\downarrow}}&lt;/math&gt;.

A net spin polarization can be achieved either through creating an equilibrium energy split between spin up and spin down. Methods include putting a material in a large magnetic field ([[Zeeman effect]]), the exchange energy present in a ferromagnet or forcing the system out of equilibrium. The period of time that such a non-equilibrium population can be maintained is known as the spin lifetime, &lt;math&gt;\tau&lt;/math&gt;.

In a diffusive conductor, a [[spin diffusion]] length &lt;math&gt;\lambda&lt;/math&gt; can be defined as the distance over which a non-equilibrium spin population can propagate. Spin lifetimes of conduction electrons in metals are relatively short (typically less than 1 nanosecond). An important research area is devoted to extending this lifetime to technologically relevant timescales.

[[File:Spin Injection.jpg|right|thumb|A plot showing a spin up, spin down, and the resulting spin polarized population of electrons. Inside a spin injector, the polarization is constant, while outside the injector, the polarization decays exponentially to zero as the spin up and down populations go to equilibrium.]]

The mechanisms of decay for a spin polarized population can be broadly classified as spin-flip scattering and spin dephasing. Spin-flip scattering is a process inside a solid that does not conserve spin, and can therefore switch an incoming spin up state into an outgoing spin down state. Spin dephasing is the process wherein a population of electrons with a common spin state becomes less polarized over time due to different rates of electron spin [[precession]]. In confined structures, spin dephasing can be suppressed, leading to spin lifetimes of milliseconds in semiconductor [[quantum dots]] at low temperatures.

[[Superconductors]] can enhance central effects in spintronics such as magnetoresistance effects, spin lifetimes and dissipationless spin-currents.&lt;ref&gt;{{cite journal|last1=Linder|first1=Jacob|last2=Robinson|first2=Jason W. A.|title=Superconducting spintronics|journal=Nature Physics|date=2 April 2015|volume=11|issue=4|pages=307–315|issn=1745-2473|doi=10.1038/nphys3242|arxiv = 1510.00713 |bibcode = 2015NatPh..11..307L }}&lt;/ref&gt;&lt;ref&gt;M. Eschrig, [http://scitation.aip.org/content/aip/magazine/physicstoday/article/64/1/10.1063/1.3541944 "Spin-polarized supercurrents for spintronics"] Physics Today 64(1), 43 (2011)&lt;/ref&gt;

The simplest method of generating a spin-polarised current in a metal is to pass the current through a [[ferromagnetic]] material. The most common applications of this effect involve giant magnetoresistance (GMR) devices. A typical GMR device consists of at least two layers of ferromagnetic materials separated by a spacer layer. When the two magnetization vectors of the ferromagnetic layers are aligned, the electrical resistance will be lower (so a higher current flows at constant voltage) than if the ferromagnetic layers are anti-aligned. This constitutes a magnetic field sensor.

Two variants of GMR have been applied in devices: (1) current-in-plane (CIP), where the electric current flows parallel to the layers and (2) current-perpendicular-to-plane (CPP), where the electric current flows in a direction perpendicular to the layers.

Other metal-based spintronics devices:
* [[Tunnel magnetoresistance]] (TMR), where CPP transport is achieved by using quantum-mechanical tunneling of electrons through a thin insulator separating ferromagnetic layers.
* [[Spin-transfer torque]], where a current of spin-polarized electrons is used to control the magnetization direction of ferromagnetic electrodes in the device.
* Spin-wave logic devices carry information in the phase. Interference and spin-wave scattering can perform logic operations.

==Spintronic-logic devices==
Non-volatile spin-logic devices to enable scaling are being extensively studied.&lt;ref&gt;[[International Technology Roadmap for Semiconductors]]&lt;/ref&gt; Spin-transfer, torque-based logic devices that use spins and magnets for information processing have been proposed.&lt;ref&gt;{{Cite journal | last1 = Behin-Aein | first1 = B. | last2 = Datta | first2 = D. | last3 = Salahuddin | first3 = S. | last4 = Datta | first4 = S. | title = Proposal for an all-spin logic device with built-in memory | doi = 10.1038/nnano.2010.31 | journal = Nature Nanotechnology | volume = 5 | issue = 4 | pages = 266–270 | year = 2010 | pmid =  20190748| pmc = |bibcode = 2010NatNa...5..266B }}&lt;/ref&gt;&lt;ref&gt;Manipatruni, Sasikanth; Nikonov, Dmitri E. and Young, Ian A. (2011) [https://arxiv.org/abs/1112.2746 [1112.2746&amp;#93; Circuit Theory for SPICE of Spintronic Integrated Circuits]. Arxiv.org. Retrieved on 21 October 2013.&lt;/ref&gt; These devices are part of the [[International Technology Roadmap for Semiconductors|ITRS]] exploratory road map. Logic-in memory applications are already in the development stage.&lt;ref&gt;[https://archive.is/20120420160205/http://crocus-technology.com/pr-12-08-11.html Crocus Partners With Starchip To Develop System-On-Chip Solutions Based on Magnetic-Logic-Unit™ (MLU) Technology]. crocus-technology.com. 8 December 2011&lt;/ref&gt;&lt;ref&gt;[http://www.nec.com/en/press/201206/global_20120611_02.html Groundbreaking New Technology for Improving the Reliability of Spintronics Logic Integrated Circuits]. Nec.com. 11 June 2012.&lt;/ref&gt; A 2017 review article can be found in ''Materials Today''.&lt;ref&gt;S. Bhatti, et al., Mater.Today (2017), https://dx.doi.org/10.1016/j.mattod.2017.07.007&lt;/ref&gt;

===Applications===
[[Disk read-and-write head|Read heads]] of magnetic [[hard drive]]s are based on the GMR or TMR effect.

Motorola developed a first-generation 256&amp;nbsp;[[kilobit|kb]] [[magnetoresistive random-access memory]] (MRAM) based on a single magnetic tunnel junction and a single transistor that has a read/write cycle of under 50 nanoseconds.&lt;ref&gt;[http://www.sigmaaldrich.com/materials-science/alternative-energy-materials/magnetic-materials/tutorial/spintronics.html Spintronics]. Sigma-Aldrich. Retrieved on 21 October 2013.&lt;/ref&gt; [[Everspin]] has since developed a 4&amp;nbsp;[[Megabit|Mb]] version.&lt;ref&gt;[http://www.everspin.com/technology.php Everspin] {{webarchive |url=https://web.archive.org/web/20120630001137/http://www.everspin.com/technology.php |date=30 June 2012 }}. Everspin. Retrieved on 21 October 2013.&lt;/ref&gt; Two second-generation MRAM techniques are in development: [[thermal-assisted switching]] (TAS)&lt;ref&gt;Hoberman, Barry. [http://www.crocustechnology.com/pdf/BH%20GSA%20Article.pdf The Emergence of Practical MRAM] {{webarchive|url=https://web.archive.org/web/20131021115241/http://www.crocustechnology.com/pdf/BH%20GSA%20Article.pdf |date=21 October 2013 }}. crocustechnology.com&lt;/ref&gt; and [[spin-transfer torque]] (STT).&lt;ref&gt;LaPedus, Mark (18 June 2009) [http://www.eetimes.com/document.asp?doc_id=1171188 Tower invests in Crocus, tips MRAM foundry deal]. eetimes.com&lt;/ref&gt;

Another design, [[racetrack memory]], encodes information in the direction of magnetization between domain walls of a ferromagnetic wire.

Magnetic [[sensor]]s can use the GMR effect.{{Citation needed|date = April 2015}}

In 2012, persistent spin helices of synchronized electrons were made to persist for more than a nanosecond, a 30-fold increase, longer than the duration of a modern processor clock cycle.&lt;ref&gt;{{cite journal|author=Walser, M.|author2=Reichl, C.|author3=Wegscheider, W.|author4=Salis, G.|last-author-amp=yes |title=Direct mapping of the formation of a persistent spin helix|journal=Nature Physics|doi=10.1038/nphys2383|bibcode = 2012NatPh...8..757W|date=2012|volume=8|issue=10|pages=757 |url=https://arxiv.org/pdf/1209.4857}}&lt;/ref&gt;

==Semiconductor-based spintronic devices==

Doped semiconductor materials display dilute ferromagnetism. In recent years, dilute magnetic oxides (DMOs) including [[ZnO-based diluted magnetic semiconductors|ZnO based DMOs]] and [[Anatase|TiO&lt;sub&gt;2&lt;/sub&gt;]]-based DMOs have been the subject of numerous experimental and computational investigations.&lt;ref&gt;{{cite journal| last1=Assadi| first1=M.H.N| last2=Hanaor| first2=D.A.H| title= Theoretical study on copper's energetics and magnetism in TiO&lt;sub&gt;2&lt;/sub&gt; polymorphs| journal= Journal of Applied Physics| date=2013| volume=113| issue=23| pages= 233913| url=https://arxiv.org/ftp/arxiv/papers/1304/1304.1854.pdf| doi=10.1063/1.4811539|arxiv = 1304.1854 |bibcode = 2013JAP...113w3913A }}&lt;/ref&gt;&lt;ref&gt;{{cite journal| last1=Ogale| first1=S.B| title= Dilute doping, defects, and ferromagnetism in metal oxide systems| journal= Advanced Materials| date=2010| volume=22| issue=29| pages= 3125–3155| doi=10.1002/adma.200903891| pmid=20535732}}&lt;/ref&gt; Non-oxide ferromagnetic semiconductor sources (like manganese-doped gallium arsenide [[GaMnAs]]),&lt;ref&gt;{{Cite journal | last1 = Jonker | first1 = B. | last2 = Park | first2 = Y. | last3 = Bennett | first3 = B. | last4 = Cheong | first4 = H. | last5 = Kioseoglou | first5 = G. | last6 = Petrou | first6 = A. | doi = 10.1103/PhysRevB.62.8180 | title = Robust electrical spin injection into a semiconductor heterostructure | journal = Physical Review B | volume = 62 | issue = 12 | pages = 8180 | year = 2000 | pmid =  | pmc = |bibcode = 2000PhRvB..62.8180J }}&lt;/ref&gt; increase the interface resistance with a tunnel barrier,&lt;ref&gt;{{Cite journal | last1 = Hanbicki | first1 = A. T. | last2 = Jonker | first2 = B. T. | last3 = Itskos | first3 = G. | last4 = Kioseoglou | first4 = G. | last5 = Petrou | first5 = A. | title = Efficient electrical spin injection from a magnetic metal/tunnel barrier contact into a semiconductor | doi = 10.1063/1.1449530 | journal = Applied Physics Letters | volume = 80 | issue = 7 | pages = 1240 | year = 2002 | pmid =  | pmc = |arxiv = cond-mat/0110059 |bibcode = 2002ApPhL..80.1240H }}&lt;/ref&gt; or using hot-electron injection.&lt;ref&gt;{{Cite journal | last1 = Jiang | first1 = X. | last2 = Wang | first2 = R. | last3 = Van Dijken | first3 = S. | last4 = Shelby | first4 = R. | last5 = MacFarlane | first5 = R. | last6 = Solomon | first6 = G. | last7 = Harris | first7 = J. | last8 = Parkin | first8 = S. | doi = 10.1103/PhysRevLett.90.256603 | title = Optical Detection of Hot-Electron Spin Injection into GaAs from a Magnetic Tunnel Transistor Source | journal = Physical Review Letters | volume = 90 | issue = 25 | year = 2003 | pmid =  12857153| pmc = |bibcode = 2003PhRvL..90y6603J | page=256603}}&lt;/ref&gt;

Spin detection in semiconductors has been addressed with multiple techniques:
* Faraday/Kerr rotation of transmitted/reflected photons&lt;ref&gt;{{Cite journal | last1 = Kikkawa | first1 = J. | last2 = Awschalom | first2 = D. | doi = 10.1103/PhysRevLett.80.4313 | title = Resonant Spin Amplification in n-Type GaAs | journal = Physical Review Letters | volume = 80 | issue = 19 | pages = 4313 | year = 1998 | pmid =  | pmc = |bibcode = 1998PhRvL..80.4313K }}&lt;/ref&gt;
* Circular polarization analysis of electroluminescence&lt;ref&gt;Jonker, Berend T. [http://www.patentstorm.us/patents/5874749.html Polarized optical emission due to decay or recombination of spin-polarized injected carriers – US Patent 5874749] {{webarchive |url=https://web.archive.org/web/20091212102246/http://www.patentstorm.us/patents/5874749.html |date=12 December 2009 }}. Issued on 23 February 1999.&lt;/ref&gt;
* Nonlocal spin valve (adapted from Johnson and Silsbee's work with metals)&lt;ref&gt;{{Cite journal | last1 = Lou | first1 = X. | last2 = Adelmann | first2 = C. | last3 = Crooker | first3 = S. A. | last4 = Garlid | first4 = E. S. | last5 = Zhang | first5 = J. | last6 = Reddy | first6 = K. S. M. | last7 = Flexner | first7 = S. D. | last8 = Palmstrøm | first8 = C. J. | last9 = Crowell | first9 = P. A. | doi = 10.1038/nphys543 | title = Electrical detection of spin transport in lateral ferromagnet–semiconductor devices | journal = Nature Physics | volume = 3 | issue = 3 | pages = 197 | year = 2007 | pmid =  | pmc = |bibcode = 2007NatPh...3..197L | arxiv = cond-mat/0701021 }}&lt;/ref&gt;
* Ballistic spin filtering&lt;ref&gt;{{Cite journal | last1 = Appelbaum | first1 = I. | last2 = Huang | first2 = B. | last3 = Monsma | first3 = D. J. | doi = 10.1038/nature05803 | title = Electronic measurement and control of spin transport in silicon | journal = Nature | volume = 447 | issue = 7142 | pages = 295–298 | year = 2007 | pmid =  17507978| pmc = |arxiv = cond-mat/0703025 |bibcode = 2007Natur.447..295A }}&lt;/ref&gt;

The latter technique was used to overcome the lack of spin-orbit interaction and materials issues to achieve spin transport in [[silicon]].&lt;ref&gt;{{Cite journal | last1 = Žutić | first1 = I. | last2 = Fabian | first2 = J. | doi = 10.1038/447269a | title = Spintronics: Silicon twists | journal = Nature | volume = 447 | issue = 7142 | pages = 268–269 | year = 2007 | pmid =  17507969| pmc = |bibcode = 2007Natur.447..268Z }}&lt;/ref&gt;

Because external magnetic fields (and stray fields from magnetic contacts) can cause large [[Hall effect]]s and [[magnetoresistance]] in semiconductors (which mimic [[spin-valve]] effects), the only conclusive evidence of spin transport in semiconductors is demonstration of spin [[precession]] and [[dephasing]] in a magnetic field non-collinear to the injected spin orientation, called the [[Hanle effect]].

===Applications===
Applications using spin-polarized electrical injection have shown threshold current reduction and controllable circularly polarized coherent light output.&lt;ref&gt;{{Cite journal | last1 = Holub | first1 = M. | last2 = Shin | first2 = J. | last3 = Saha | first3 = D. | last4 = Bhattacharya | first4 = P. | title = Electrical Spin Injection and Threshold Reduction in a Semiconductor Laser | doi = 10.1103/PhysRevLett.98.146603 | journal = Physical Review Letters | volume = 98 | issue = 14 | year = 2007 | pmid =  17501298| pmc = |bibcode = 2007PhRvL..98n6603H | page=146603}}&lt;/ref&gt; Examples include semiconductor lasers. Future applications may include a spin-based [[transistor]] having advantages over [[MOSFET]] devices such as steeper sub-threshold slope.

'''Magnetic-tunnel transistor''': The magnetic-tunnel transistor with a single base layer&lt;ref name="dijken"&gt;{{Cite journal | last1 = Van Dijken | first1 = S. | last2 = Jiang | first2 = X. | last3 = Parkin | first3 = S. S. P. | doi = 10.1063/1.1474610 | title = Room temperature operation of a high output current magnetic tunnel transistor | journal = Applied Physics Letters | volume = 80 | issue = 18 | pages = 3364 | year = 2002 | pmid =  | pmc = |bibcode = 2002ApPhL..80.3364V }}&lt;/ref&gt; has the following terminals:
* Emitter (FM1): Injects spin-polarized hot electrons into the base.
* Base (FM2): Spin-dependent scattering takes place in the base. It also serves as a spin filter.
* Collector (GaAs): A [[Schottky barrier]] is formed at the interface. It only collects electrons that have enough energy to overcome the Schottky barrier, and when states are available in the semiconductor.

The magnetocurrent (MC) is given as:

:&lt;math&gt;MC = \frac{I_{c,p}-I_{c,ap}}{I_{c,ap}}&lt;/math&gt;

And the transfer ratio (TR) is

:&lt;math&gt;TR = \frac{I_C}{I_E}&lt;/math&gt;

MTT promises a highly spin-polarized electron source at room temperature.

=== Storage media ===

[[Antiferromagnetism|Antiferromagnetic]] storage media have been studied as an alternative to [[ferromagnetism]],&lt;ref&gt;See, e.g.: Jungwirth, T.,  announcement of a colloqium talk at the physics faculty of a bavarian university, 28 April 2014: ''Relativistic Approaches to Spintronics with Antiferromagnets''. [http://www.physik.uni-regensburg.de/aktuell/KollSS14/Kolloquium-Jungwirth.pdf]&lt;/ref&gt; especially since with antiferromagnetic material the bits can be stored as well as with ferromagnetic material. Instead of the usual definition 0&amp;nbsp;-&gt; 'magnetisation upwards', 1&amp;nbsp;-&gt; 'magnetisation downwards', the states can be, e.g., 0&amp;nbsp;-&gt; 'vertically-alternating spin configuration' and 1&amp;nbsp;-&gt; 'horizontally-alternating spin configuration'.&lt;ref&gt;This corresponds mathematically to the transition from the rotation group SO(3) to its relativistic covering,  the "double group" SU(2)&lt;/ref&gt;).

The main advantages of antiferromagnetic material are:

* non-sensitivity against data-damaging perturbations by stray fields due to zero net external magnetization;&lt;ref name = "netzero"&gt;Jungwirth, T., Marti, X., Wadley, P. and Wunderlich, J. (2016). Antiferromagnetic spintronics. Nature Nanotechnology, 11(3), pp.231-241.&lt;/ref&gt; 
* no effect on near particles, implying that antiferromagnetic device elements would not magnetically disturb its neighboring elements;&lt;ref name = "netzero" /&gt;
* far shorter switching times (antiferromagnetic resonance frequency is in the THz range compared to GHz ferromagnetic resonance frequency);&lt;ref name = "adv"&gt;Gomonay, O., Jungwirth, T. and Sinova, J. (2017). Concepts of antiferromagnetic spintronics (Phys. Status Solidi RRL 4/2017). Physica Status Solidi RRL - Rapid Research Letters, 11(4), p.1770319.&lt;/ref&gt;
* broad range of commonly available antiferromagnetic materials including insulators, semiconductors, semimetals, metals, and superconductors.&lt;ref name = "adv" /&gt;

Research is being done into how to read and write information to antiferromagnetic spintronics as their net zero magnetization makes this difficult compared to conventional ferromagnetic spintronics. In modern MRAM, detection and manipulation of ferromagnetic order by magnetic fields has largely been done away with in favor of more efficient and scalable reading and writing by electrical current. Methods of reading and writing information by current rather than fields are also being investigated in antiferromagnets as fields are ineffective anyways. Writing methods currently being investigated in antiferromagnets are through [[spin-transfer torque]] and [[Spin–orbit interaction|spin-orbit torque]] from the [[spin Hall effect]] and the [[Rashba effect]]. Reading information in antiferromagnets via magnetoresistance effects such as [[tunnel magnetoresistance]] is also being explored.&lt;ref&gt;Chappert, C., Fert, A. and Van Dau, F. (2007). The emergence of spin electronics in data storage. Nature Materials, 6(11), pp.813-823.&lt;/ref&gt;

== See also ==
* [[Electric dipole spin resonance]]
* [[Magnonics]]
* [[Rashba effect]]
* [[Spin pumping]]
* [[Spin-transfer torque]]
* [[Spinhenge@Home]]
* [[Spinplasmonics]]
* [[Valleytronics]]
* [[List of emerging technologies]]

==References==
{{reflist|35em}}

== Further reading ==
* "Introduction to Spintronics". Marc Cahay, Supriyo Bandyopadhyay, CRC Press, {{ISBN|0-8493-3133-1}}
* {{cite journal|title=Ultrafast Manipulation of Electron Spin Coherence|journal=Science|date=29 June 2001|volume=292|issue=5526|pages=2458–2461|doi=10.1126/science.1061169|author=J. A. Gupta|author2=R. Knobel|author3=N. Samarth|author4=D. D. Awschalom|bibcode = 2001Sci...292.2458G|pmid=11431559 }}
* {{cite journal|last=Wolf|first=S. A.|title=Spintronics: A Spin-Based Electronics Vision for the Future|journal=Science|date=16 November 2001|volume=294|issue=5546|pages=1488–1495|doi=10.1126/science.1065389|bibcode = 2001Sci...294.1488W|pmid=11711666|first2=DD|last3=Buhrman|first3=RA|last4=Daughton|first4=JM|last5=von Molnár|first5=S|last6=Roukes|first6=ML|last7=Chtchelkanova|first7=AY|last8=Treger|first8=DM |last2=Awschalom}}
* {{cite journal|last=Sharma|first=P.|title=How to Create a Spin Current|journal=Science|date=28 January 2005|volume=307|issue=5709|pages=531–533|doi=10.1126/science.1099388|pmid=15681374}}
* {{cite book|editor1=Tomasz Dietl |editor2=David D. Awschalom |editor3=Maria Kaminska |display-editors = 3 |editor4=Hideo Ohno |date=2009 |url=https://books.google.ca/books?id=kHmM9Hz_kLIC |title=Spintronics |publisher=[[Academic Press]] |isbn=9780080914213}}
* {{Cite journal | last1 = Žutić | first1 = I. | last2 = Das Sarma | first2 = S. | doi = 10.1103/RevModPhys.76.323 | title = Spintronics: Fundamentals and applications | journal = Reviews of Modern Physics | volume = 76 | issue = 2 | pages = 323 | year = 2004 |arxiv = cond-mat/0405528 |bibcode = 2004RvMP...76..323Z }}
* {{cite journal |title=SPIN |url=http://www.worldscinet.com/spin/spin.shtml
 |editor=Parkin, Stuart
 |editor2=Ching-Ray, Chang
 |editor3=Chantrell, Roy
 |date=2011 |publisher=World Scientific |issn=2010-3247}}
* [http://arquivo.pt/wayback/20160517200502/http://news.usf.edu/article/templates/?a=4449&amp;z=123 "Spintronics Steps Forward."], [[University of South Florida]] News
* {{Cite journal | last1 = Bader | first1 = S. D. | last2 = Parkin | first2 = S. S. P. | doi = 10.1146/annurev-conmatphys-070909-104123 | title = Spintronics | journal = Annual Review of Condensed Matter Physics | volume = 1 | pages = 71 | year = 2010 | pmid =  | pmc = |bibcode = 2010ARCMP...1...71B }}
* {{cite journal |title=Overview of Spintronics |url=http://www.ijert.org/browse/volume-2-2013/june-2013-edition?download=3672%3Aoverview-of-spintronics |author= Mukesh D. Patil |author2= Jitendra S. Pingale |author3= Umar I. Masumdar |date=2013 |publisher=ESRSA Publications |issn=2278-0181}}
* {{cite journal |title=Utilization of Spintronics |url=http://www.ijsrp.org/research-paper-0613.php?rp=P181346 |author= Jitendra S. Pingale |author2= Mukesh D. Patil |author3= Umar I. Masumdar |date=2013 |issn=2250-3153}}

==External links==
* [http://www.nature.com/milestones/milespin/timeline.html 23 milestones in the history of spin compiled by ''Nature'']
* {{cite journal
|url=http://www.sciam.com/article.cfm?articleID=0007A735-759A-1CDD-B4A8809EC588EEDF
|title=Spintronics
|journal=Scientific American
|date=June 2002}}
* [http://www.spintronics-info.com/ Spintronics portal with news and resources]
* [http://www.informationweek.com/news/internet/showArticle.jhtml?articleID=207200184 RaceTrack:InformationWeek (April 11, 2008)]
* [http://www.eetimes.com/news/semi/showArticle.jhtml?articleID=191504070 Spintronics research targets [[GaAs]].]
* [http://www.sigmaaldrich.com/materials-science/alternative-energy-materials/magnetic-materials/tutorial/spintronics.html Spintronics Tutorial ]
* Lecture on Spin transport by S. Datta (from Datta Das transistor)—[http://nanohub.org/resources/5269 Part 1] and [http://nanohub.org/resources/5270 Part 2]

{{Emerging technologies}}
{{Authority control}}

[[Category:Spintronics| ]]
[[Category:Emerging technologies]]
[[Category:Theoretical computer science]]</text>
      <sha1>g8b057fy9zmsgsahok3j8f0cwf8sv7x</sha1>
    </revision>
  </page>
  <page>
    <title>Surreal number</title>
    <ns>0</ns>
    <id>51432</id>
    <revision>
      <id>867918621</id>
      <parentid>860551184</parentid>
      <timestamp>2018-11-08T20:35:44Z</timestamp>
      <contributor>
        <ip>129.236.214.245</ip>
      </contributor>
      <comment>/* Overview */The usage of the phrase "either ... or" implies an exclusive or, which clearly isn't the case.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="74343">[[File:Surreal number tree.svg|thumb|A visualization of the surreal number tree.]]
In [[mathematics]], the '''surreal number''' system is a [[total order|totally ordered]] [[proper class]] containing the [[real number]]s as well as [[Infinity|infinite]] and [[infinitesimal|infinitesimal numbers]], respectively larger or smaller in [[absolute value]] than any positive real number.  The surreals share many properties with the reals, including the usual arithmetic operations (addition, subtraction, multiplication, and division); as such, they form an [[ordered field]].{{efn|In the original formulation using [[von Neumann–Bernays–Gödel set theory]], the surreals form a proper class, rather than a set, so the term [[field (mathematics)|field]] is not precisely correct; where this distinction is important, some authors use Field or FIELD to refer to a proper class that has the arithmetic properties of a field.  One can obtain a true field by limiting the construction to a [[Grothendieck universe]], yielding a set with the cardinality of some [[strongly inaccessible cardinal]], or by using a form of set theory in which constructions by [[transfinite recursion]] stop at some countable ordinal such as [[Epsilon numbers (mathematics)|epsilon nought]].}} If formulated in [[Von Neumann–Bernays–Gödel set theory]], the surreal numbers are a universal ordered field in the sense that all other ordered fields, such as the rationals, the reals, the [[rational function]]s, the [[Levi-Civita field]], the [[superreal number]]s, and the [[hyperreal number]]s, can be realized as subfields of the surreals.&lt;ref name=bajnok&gt;{{cite book|last=Bajnok|first=Béla|title=An Invitation to Abstract Mathematics|year=2013|quote=Theorem 24.29. The surreal number system is the largest ordered field}}&lt;/ref&gt; The surreals also contain all [[transfinite number|transfinite]] [[ordinal number]]s; the arithmetic on them is given by the [[Ordinal arithmetic#Natural operations|natural operations]]. It has also been shown (in Von Neumann–Bernays–Gödel set theory) that the maximal class hyperreal field is isomorphic to the maximal class surreal field; in theories without the [[axiom of global choice]], this need not be the case, and in such theories it is not necessarily true that the surreals are a universal ordered field. 

== History of the concept ==
In 1907 [[Hans Hahn (mathematician)|Hans Hahn]] introduced [[Hahn series]] as a generalization of [[formal power series]], and [[Felix Hausdorff|Hausdorff]] introduced certain ordered sets called [[η set|η&lt;sub&gt;α&lt;/sub&gt;-sets]] for ordinals α and asked if it was possible to find a compatible ordered group or field structure. In 1962 Alling used a modified form of Hahn series to construct such ordered fields associated to certain ordinals α, and taking α to be the class of all ordinals in his construction gives a class that is an ordered field isomorphic to the surreal numbers.&lt;ref&gt;{{citation|title=On the existence of real-closed fields that are  η&lt;sub&gt;α&lt;/sub&gt;-sets of power ℵ&lt;sub&gt;α&lt;/sub&gt;.
|first= Norman L.|last= Alling 
|journal= Trans. Amer. Math. Soc.|volume= 103 |year=1962|pages= 341–352 
|mr= 0146089|doi=10.1090/S0002-9947-1962-0146089-X}}&lt;/ref&gt; 
Research on the [[go (game)|go]] [[go endgame|endgame]] by [[John Horton Conway]] led to another definition and construction of the surreal numbers.&lt;ref name="O'Connor"&gt;{{citation | url = http://www-history.mcs.st-andrews.ac.uk/Biographies/Conway.html | title = Conway Biography | last = O'Connor | first = J.J. | last2 = Robertson | first2 = E.F. | accessdate = 2008-01-24 }}&lt;/ref&gt;  Conway's construction was introduced in [[Donald Knuth]]'s 1974 book ''Surreal Numbers: How Two Ex-Students Turned on to Pure Mathematics and Found Total Happiness''. In his book, which takes the form of a dialogue, Knuth coined the term ''surreal numbers'' for what Conway had called simply ''numbers''.  Conway later adopted Knuth's term, and used surreals for analyzing games in his 1976 book ''[[On Numbers and Games]]''.

==Overview==

In the Conway construction,&lt;ref name="Con01"&gt;{{Cite book|url=https://books.google.com/books?id=tXiVo8qA5PQC|title=On Numbers and Games|edition=2|last=Conway|first=John H.|date=2000-12-11|orig-year=1976|publisher=CRC Press|isbn=9781568811277|language=en}}&lt;/ref&gt; the surreal numbers are constructed in stages, along with an ordering ≤ such that for any two surreal numbers ''a'' and ''b'', ''a'' ≤ ''b'' or ''b'' ≤ ''a''.  (Both may hold, in which case ''a'' and ''b'' are equivalent and denote the same number.)  Numbers are formed by pairing subsets of numbers already constructed:  given subsets ''L'' and ''R'' of numbers such that all the members of ''L'' are strictly less than all the members of ''R'', then the pair {{nowrap begin}}{ ''L'' | ''R'' }{{nowrap end}} represents a number intermediate in value between all the members of ''L'' and all the members of ''R''.

Different subsets may end up defining the same number:  {{nowrap begin}}{ ''L'' | ''R'' }{{nowrap end}} and {{nowrap begin}}{ ''L&amp;prime;'' | ''R&amp;prime;'' }{{nowrap end}} may define the same number even if ''L'' ≠ ''L&amp;prime;'' and ''R'' ≠ ''R&amp;prime;''.  (A similar phenomenon occurs when [[rational numbers]] are defined as quotients of integers:  1/2 and 2/4 are different representations of the same rational number.)  So strictly speaking, the surreal numbers are [[equivalence class]]es of representations of form {{nowrap begin}}{ ''L'' | ''R'' }{{nowrap end}} that designate the same number.

In the first stage of construction, there are no previously existing numbers so the only representation must use the empty set:  {{nowrap begin}}{ | }{{nowrap end}}.  This representation, where ''L'' and ''R'' are both empty, is called 0.  Subsequent stages yield forms like

:{{nowrap begin}}{ 0 | }{{nowrap end}} = 1

:{{nowrap begin}}{ 1 | }{{nowrap end}} = 2

:{{nowrap begin}}{ 2 | }{{nowrap end}} = 3

and

:{{nowrap begin}}{ | 0 }{{nowrap end}} = &amp;minus;1

:{{nowrap begin}}{ | &amp;minus;1 }{{nowrap end}} = &amp;minus;2

:{{nowrap begin}}{ | &amp;minus;2 }{{nowrap end}} = &amp;minus;3

The integers are thus contained within the surreal numbers.  (The above identities are definitions, in the sense that the right-hand side is a name for the left-hand side. That the names are actually appropriate will be evident when the arithmetic operations on surreal numbers are defined, as in the section below). Similarly, representations such as

:{{nowrap begin}}{ 0 | 1 }{{nowrap end}} = 1/2

:{{nowrap begin}}{ 0 | 1/2 }{{nowrap end}} = 1/4

:{{nowrap begin}}{ 1/2 | 1 }{{nowrap end}} = 3/4

arise, so that the [[dyadic rational]]s (rational numbers whose denominators are powers of 2) are contained within the surreal numbers.

After an infinite number of stages, infinite subsets become available, so that any [[real number]] ''a'' can be represented by {{nowrap begin}}{ ''L&lt;sub&gt;a&lt;/sub&gt;'' | ''R&lt;sub&gt;a&lt;/sub&gt;'' },{{nowrap end}}
where ''L&lt;sub&gt;a&lt;/sub&gt;'' is the set of all dyadic rationals less than ''a'' and 
''R&lt;sub&gt;a&lt;/sub&gt;'' is the set of all dyadic rationals greater than ''a'' (reminiscent of a [[Dedekind cut]]).  Thus the real numbers are also embedded within the surreals.

There are also representations like

:{{nowrap begin}}{ 0, 1, 2, 3, &amp;hellip; |  }{{nowrap end}} = &amp;omega;

:{{nowrap begin}}{ 0 | 1, 1/2, 1/4, 1/8, &amp;hellip; }{{nowrap end}} = &amp;epsilon;

where ω is a transfinite number greater than all integers and ε is an infinitesimal greater than 0 but less than any positive real number.  Moreover, the standard arithmetic operations (addition, subtraction, multiplication, and division) can be extended to these non-real numbers in a manner that turns the collection of surreal numbers into an ordered field, so that one can talk about 2ω or ω &amp;minus; 1 and so forth.

==Construction==

Surreal numbers are [[inductive definition|constructed inductively]] as [[equivalence class]]es of [[ordered pair|pair]]s of sets of surreal numbers, restricted by the condition that each element of the first set is smaller than each element of the second set. The construction consists of three interdependent parts: the construction rule, the comparison rule and the equivalence rule.

===Forms===
A ''form'' is a pair of sets of surreal numbers, called its ''left set'' and its ''right set''. A form with left set ''L'' and right set ''R'' is written {{nowrap begin}}{ ''L'' | ''R'' }{{nowrap end}}.  When ''L'' and ''R'' are given as lists of elements, the braces around them are omitted.

Either or both of the left and right set of a form may be the empty set. The form {{nowrap begin}}{ { } | { } }{{nowrap end}} with both left and right set empty is also written {{nowrap begin}}{ | }{{nowrap end}}.

===Numeric forms===

'''Construction Rule'''
:A form { ''L'' | ''R'' } is ''numeric'' if the intersection of ''L'' and ''R'' is the empty set and each element of ''R'' is greater than every element of ''L'', according to the [[order theory|order relation]] ≤ given by the comparison rule below.

===Equivalence classes of numeric forms===

The numeric forms are placed in equivalence classes; each such equivalence class is a ''surreal number''. The elements of the left and right set of a form are drawn from the universe of the surreal numbers (not of ''forms'', but of their ''equivalence classes'').

'''Equivalence Rule'''
: Two numeric forms ''x'' and ''y'' are forms of the same number (lie in the same equivalence class) if and only if both ''x'' ≤ ''y'' and ''y'' ≤ ''x''.

An [[Order theory|ordering relationship]] must be [[antisymmetric relation|antisymmetric]], i.e., it must have the property that ''x'' = ''y'' (i. e., ''x'' ≤ ''y'' and ''y'' ≤ ''x'' are both true) only when ''x'' and ''y'' are the same object.  This is not the case for surreal number ''forms'', but is true by construction for surreal ''numbers'' (equivalence classes).

The equivalence class containing {{nowrap begin}}{ | }{{nowrap end}} is labeled 0; in other words, {{nowrap begin}}{ | }{{nowrap end}} is a form of the surreal number 0.

===Order===

The recursive definition of surreal numbers is completed by defining comparison:

Given numeric forms ''x'' = { ''X&lt;sub&gt;L&lt;/sub&gt;'' | ''X&lt;sub&gt;R&lt;/sub&gt;'' } and ''y'' = { ''Y&lt;sub&gt;L&lt;/sub&gt;'' | ''Y&lt;sub&gt;R&lt;/sub&gt;'' }, ''x'' ≤ ''y'' if and only if:
*there is no ''x&lt;sub&gt;L&lt;/sub&gt;'' ∈ ''X&lt;sub&gt;L&lt;/sub&gt;'' such that ''y'' ≤ ''x&lt;sub&gt;L&lt;/sub&gt;'' (every element in the left part of ''x'' is smaller than ''y''), and
*there is no ''y&lt;sub&gt;R&lt;/sub&gt;'' ∈ ''Y&lt;sub&gt;R&lt;/sub&gt;'' such that ''y&lt;sub&gt;R&lt;/sub&gt;'' ≤ ''x'' (every element in the right part of ''y'' is bigger than ''x'').
A comparison ''y'' ≤ ''c'' between a form ''y'' and a surreal number ''c'' is performed by choosing a form ''z'' from the equivalence class ''c'' and evaluating ''y'' ≤ ''z''; and likewise for ''c'' ≤ ''x'' and for comparison ''b'' ≤ ''c'' between two surreal numbers.

===Induction===

This group of definitions is [[recursion|recursive]], and requires some form of [[mathematical induction]] to define the universe of objects (forms and numbers) that occur in them.  The only surreal numbers reachable via ''finite induction'' are the [[Dyadic rational|dyadic fractions]]; a wider universe is reachable given some form of [[transfinite induction]].

'''Induction Rule'''
* There is a generation ''S''&lt;sub&gt;0&lt;/sub&gt; = { 0 }, in which 0 consists of the single form { | }.
* Given any [[ordinal number]] ''n'', the generation ''S''&lt;sub&gt;''n''&lt;/sub&gt; is the set of all surreal numbers that are generated by the construction rule from subsets of &lt;math&gt;\cup_{i &lt; n} S_i&lt;/math&gt;.

The base case is actually a special case of the induction rule, with 0 taken as a label for the "least ordinal".  Since there exists no ''S&lt;sub&gt;i&lt;/sub&gt;'' with ''i'' &lt; 0, the expression &lt;math&gt;\cup_{i &lt; 0} S_i&lt;/math&gt; is the empty set; the only subset of the empty set is the empty set, and therefore ''S''&lt;sub&gt;0&lt;/sub&gt; consists of a single surreal form { | } lying in a single equivalence class 0.

For every finite ordinal number ''n'', ''S&lt;sub&gt;n&lt;/sub&gt;'' is [[well-order]]ed by the ordering induced by the comparison rule on the surreal numbers.

The first iteration of the induction rule produces the three numeric forms { | 0 } &lt; { | } &lt; { 0 | } (the form  { 0 | 0 } is non-numeric because 0≤0).  The equivalence class containing { 0 | } is labeled 1 and the equivalence class containing { | 0 } is labeled −1.  These three labels have a special significance in the axioms that define a [[ring (mathematics)|ring]]; they are the additive identity (0), the multiplicative identity (1), and the additive inverse of 1 (−1).  The arithmetic operations defined below are consistent with these labels.

For every ''i'' &lt; ''n'', since every valid form in ''S''&lt;sub&gt;''i''&lt;/sub&gt; is also a valid form in ''S''&lt;sub&gt;''n''&lt;/sub&gt;, all of the numbers in ''S&lt;sub&gt;i&lt;/sub&gt;'' also appear in ''S&lt;sub&gt;n&lt;/sub&gt;'' (as supersets of their representation in ''S&lt;sub&gt;i&lt;/sub&gt;'').  (The set union expression appears in our construction rule, rather than the simpler form ''S&lt;sub&gt;n-1&lt;/sub&gt;'', so that the definition also makes sense when ''n'' is a [[limit ordinal]].)  Numbers in ''S&lt;sub&gt;n&lt;/sub&gt;'' that are a superset of some number in ''S&lt;sub&gt;i&lt;/sub&gt;'' are said to have been ''inherited'' from generation ''i''.  The smallest value of α for which a given surreal number appears in ''S''&lt;sub&gt;α&lt;/sub&gt; is called its ''birthday''.  For example, the birthday of 0 is 0, and the birthday of −1 is 1.

A second iteration of the construction rule yields the following ordering of equivalence classes:

: { | −1 } = { | −1, 0 } = { | −1, 1 } = { | −1, 0, 1 }
: &lt; { | 0 } = { | 0, 1 }
: &lt; { −1 | 0 } = { −1 | 0, 1 }
: &lt; { | } = { −1 | } = { | 1 } = { −1 | 1 }
: &lt; { 0 | 1 } = { −1, 0 | 1 }
: &lt; { 0 | } = { −1, 0 | }
: &lt; { 1 | } = { 0, 1 | } = { −1, 1 | } = { −1, 0, 1 | }

Comparison of these equivalence classes is consistent, irrespective of the choice of form.  Three observations follow:
# ''S''&lt;sub&gt;2&lt;/sub&gt; contains four new surreal numbers.  Two contain extremal forms: { | −1, 0, 1 } contains all numbers from previous generations in its right set, and { −1, 0, 1 | } contains all numbers from previous generations in its left set.  The others have a form that partitions all numbers from previous generations into two non-empty sets.
# Every surreal number ''x'' that existed in the previous "generation" exists also in this generation, and includes at least one new form: a partition of all numbers ''other than'' ''x'' from previous generations into a left set (all numbers less than ''x'') and a right set (all numbers greater than ''x'').
# The equivalence class of a number depends only on the maximal element of its left set and the minimal element of the right set.

The informal interpretations of { 1 | } and { | −1 } are "the number just after 1" and "the number just before −1" respectively; their equivalence classes are labeled 2 and −2.  The informal interpretations of { 0 | 1 } and { −1 | 0 } are "the number halfway between 0 and 1" and "the number halfway between −1 and 0" respectively; their equivalence classes are labeled &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt; and −&lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt;.  These labels will also be justified by the rules for surreal addition and multiplication below.

The equivalence classes at each stage ''n'' of induction may be characterized by their ''n''-''complete forms'' (each containing as many elements as possible of previous generations in its left and right sets).  Either this complete form contains ''every'' number from previous generations in its left or right set, in which case this is the first generation in which this number occurs; or it contains all numbers from previous generations but one, in which case it is a new form of this one number.  We retain the labels from the previous generation for these "old" numbers, and write the ordering above using the old and new labels:
: −2 &lt; −1 &lt; −&lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt; &lt; 0 &lt; &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt; &lt; 1 &lt; 2.

The third observation extends to all surreal numbers with finite left and right sets.  (For infinite left or right sets, this is valid in an altered form, since infinite sets might not contain a maximal or minimal element.)  The number { 1, 2 | 5, 8 } is therefore equivalent to { 2 | 5 }; one can establish that these are forms of 3 by using the ''birthday property'', which is a consequence of the rules above.

'''Birthday property'''
: A form ''x'' = { ''L'' | ''R'' } occurring in generation ''n'' represents a number inherited from an earlier generation ''i'' &lt; ''n'' if and only if there is some number in ''S&lt;sub&gt;i&lt;/sub&gt;'' that is greater than all elements of ''L'' and less than all elements of the ''R''.  (In other words, if ''L'' and ''R'' are already separated by a number created at an earlier stage, then ''x'' does not represent a new number but one already constructed.)  If ''x'' represents a number from any generation earlier than ''n'', there is a least such generation ''i'', and exactly one number ''c'' with this least ''i'' as its birthday lies between ''L'' and ''R''.  ''x'' is a form of this ''c'', i. e., it lies in the equivalence class in ''S&lt;sub&gt;n&lt;/sub&gt;'' that is a superset of the representation of ''c'' in generation ''i''.

==Arithmetic==

The addition, negation (additive inverse), and multiplication of surreal number ''forms'' ''x'' = { ''X&lt;sub&gt;L&lt;/sub&gt;'' | ''X&lt;sub&gt;R&lt;/sub&gt;'' } and ''y'' = { ''Y&lt;sub&gt;L&lt;/sub&gt;'' | ''Y&lt;sub&gt;R&lt;/sub&gt;'' } are defined by three recursive formulas.

===Negation===

Negation of a given number {{nowrap begin}}''x'' = { ''X&lt;sub&gt;L&lt;/sub&gt;'' | ''X&lt;sub&gt;R&lt;/sub&gt;'' }{{nowrap end}} is defined by
:&lt;math&gt;-x = - \{ X_L | X_R \} = \{ -X_R | -X_L \}&lt;/math&gt;,
where the negation of a set ''S'' of numbers is given by the set of the negated elements of ''S'':
:&lt;math&gt;-S = \{ -s: s \in S \}&lt;/math&gt;.

This formula involves the negation of the surreal ''numbers'' appearing in the left and right sets of ''x'', which is to be understood as the result of choosing a form of the number, evaluating the negation of this form, and taking the equivalence class of the resulting form.  This only makes sense if the result is the same, irrespective of the choice of form of the operand.  This can be proven inductively using the fact that the numbers occurring in ''X&lt;sub&gt;L&lt;/sub&gt;'' and ''X&lt;sub&gt;R&lt;/sub&gt;'' are drawn from generations earlier than that in which the form ''x'' first occurs, and observing the special case:
: -0 = - { | } = { | } = 0.

===Addition===
The definition of addition is also a recursive formula:
: &lt;math&gt;x + y = \{ X_L | X_R \} + \{ Y_L | Y_R \} = \{ X_L + y, x + Y_L | X_R + y, x + Y_R \}&lt;/math&gt;,
where

:&lt;math&gt;X + y = \{ x + y: x \in X \} , x + Y = \{ x + y: y \in Y \}&lt;/math&gt;.

This formula involves sums of one of the original operands and a surreal ''number'' drawn from the left or right set of the other.  These are to be understood as the result of choosing a form of the numeric operand, performing the sum of the two forms, and taking the equivalence class of the resulting form.  This only makes sense if the result is the same, irrespective of the choice of form of the numeric operand.  This can also be proven inductively with the special cases:
: 0 + 0 = { | } + { | } = { | } = 0
: ''x'' + 0 = x + { | } = { ''X&lt;sub&gt;L&lt;/sub&gt;'' + 0 | ''X&lt;sub&gt;R&lt;/sub&gt;'' + 0 } = { ''X&lt;sub&gt;L&lt;/sub&gt;'' | ''X&lt;sub&gt;R&lt;/sub&gt;'' } = ''x''
: 0 + ''y'' = { | } + ''y'' = { 0 + ''Y&lt;sub&gt;L&lt;/sub&gt;'' | 0 + ''Y&lt;sub&gt;R&lt;/sub&gt;'' } = { ''Y&lt;sub&gt;L&lt;/sub&gt;'' | ''Y&lt;sub&gt;R&lt;/sub&gt;'' } = ''y''
(The latter two cases are themselves proven inductively.)

===Multiplication===

The recursive formula for multiplication contains arithmetic expressions involving the operands and their left and right sets, such as the expression &lt;math&gt;X_R y + x Y_R - X_R Y_R&lt;/math&gt; that appears in the left set of the product of ''x'' and ''y''.  This is to be understood as the set of surreal numbers resulting from choosing one number from each set that appears in the expression and evaluating the expression on these numbers.  (In each individual evaluation of the expression, only one number is chosen from each set, and is substituted in each place where that set appears in the expression.)

This depends, in turn, on the ability to (a) multiply pairs of surreal ''numbers'' drawn from the left and right sets of ''x'' and ''y'' to get a surreal number, and negate the result; (b) multiply the surreal number ''form'' ''x'' or ''y'' and a surreal ''number'' drawn from the left or right set of the other operand to get a surreal number; and (c) add the resulting surreal numbers.  This again involves special cases, this time containing 0 = { | }, the multiplicative identity 1 = { 0 | }, and its additive inverse -1 = { | 0 }.

: &lt;math&gt;\begin{align}
xy &amp; = \{ X_L | X_R \} \{ Y_L | Y_R \} \\
   &amp; = \left\{ X_L y + x Y_L - X_L Y_L, X_R y + x Y_R - X_R Y_R | X_L y + x Y_R - X_L Y_R, x Y_L + X_R y - X_R Y_L \right\} \\
\end{align}&lt;/math&gt;

=== Division ===
The definition of division is done in terms of the reciprocal and multiplication:

&lt;math&gt;\frac xy = x \left( \frac 1y \right)&lt;/math&gt;

where

&lt;math&gt;\frac 1y = \Bigg \{0, \frac{1+(y^R-y)(\frac1y)^L}{y^R}, \frac{1+(y^L-y)(\frac1y)^R}{y^L} \Bigg | \frac{1+(y^L-y)(\frac1y)^L}{y^L}, \frac{1+(y^R-y)(\frac1y)^R}{y^R} \Bigg \}&lt;/math&gt;&lt;ref name="Con01" /&gt;{{rp|21}}

for positive &lt;math display="inline"&gt;y&lt;/math&gt;. Only positive &lt;math display="inline"&gt;y^L&lt;/math&gt; are permitted in the formula, with any nonpositive terms being ignored (and &lt;math display="inline"&gt;y^R&lt;/math&gt; are always positive). This formula involves not only recursion in terms of being able to divide by numbers from the left and right sets of &lt;math display="inline"&gt;y&lt;/math&gt;, but also recursion in that the members of the left and right sets of &lt;math display="inline"&gt;\frac 1y&lt;/math&gt; itself. &lt;math display="inline"&gt;0&lt;/math&gt; is always a member of the left set of &lt;math display="inline"&gt;\frac 1y&lt;/math&gt;, and that can be used to find more terms in a recursive fashion. For example, if &lt;math display="inline"&gt;y = 3 = \{2|\}&lt;/math&gt;, then we know a left term of &lt;math display="inline"&gt;\frac 13&lt;/math&gt; will be &lt;math display="inline"&gt;0&lt;/math&gt;. This in turn means &lt;math display="inline"&gt;\frac{1+(2-3)0}2=1/2&lt;/math&gt; is a right term. This means &lt;math display="inline"&gt;\frac{1+(2-3)\left(\frac12\right)}2=\frac14&lt;/math&gt; is a left term. This means &lt;math display="inline"&gt;\frac{1+(2-3)\left(\frac14\right)}2 = \frac 38&lt;/math&gt; will be a right term. Continuing, this gives &lt;math display="inline"&gt;\frac13 = \{0, \frac14, \frac5{16}, \ldots | \frac12, \frac38, \ldots\}&lt;/math&gt;.

For negative &lt;math display="inline"&gt;y&lt;/math&gt;, &lt;math display="inline"&gt;\frac 1y&lt;/math&gt; is given by &lt;math display="inline"&gt;\frac1y=-\left(\frac1{-y}\right)&lt;/math&gt;. If &lt;math&gt;y=0&lt;/math&gt;, then &lt;math&gt;\frac 1y&lt;/math&gt; is undefined.

===Consistency===

It can be shown that the definitions of negation, addition and multiplication are consistent, in the sense that:
* addition and negation are defined recursively in terms of "simpler" addition and negation steps, so that operations on numbers with birthday ''n'' will eventually be expressed entirely in terms of operations on numbers with birthdays less than ''n'';
* multiplication is defined recursively in terms of additions, negations, and "simpler" multiplication steps, so that the product of numbers with birthday ''n'' will eventually be expressed entirely in terms of sums and differences of products of numbers with birthdays less than ''n'';
* as long as the operands are well-defined surreal number forms (each element of the left set is less than each element of the right set), the results are again well-defined surreal number forms;
* the operations can be extended to ''numbers'' (equivalence classes of forms): the result of negating ''x'' or adding or multiplying ''x'' and ''y'' will represent the same number regardless of the choice of form of ''x'' and ''y''; and
* these operations obey the associativity, commutativity, additive inverse, and distributivity axioms in the definition of a [[field (mathematics)|field]], with additive identity 0 = { | } and multiplicative identity 1 = { 0 | }.

With these rules one can now verify that the numbers found in the first few generations were properly labeled.  The construction rule is repeated to obtain more generations of surreals:

: ''S&lt;sub&gt;0&lt;/sub&gt;'' = { 0 }
: ''S&lt;sub&gt;1&lt;/sub&gt;'' = { −1 &lt; 0 &lt; 1 }
: ''S&lt;sub&gt;2&lt;/sub&gt;'' = { −2 &lt; −1 &lt; −&lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt; &lt; 0 &lt; &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt; &lt; 1 &lt; 2}
: ''S&lt;sub&gt;3&lt;/sub&gt;'' = { −3 &lt; −2 &lt; −&lt;sup&gt;3&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt; &lt; −1 &lt; −&lt;sup&gt;3&lt;/sup&gt;/&lt;sub&gt;4&lt;/sub&gt; &lt; −&lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt; &lt; −&lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;4&lt;/sub&gt; &lt; 0 &lt; &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;4&lt;/sub&gt; &lt; &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt; &lt; &lt;sup&gt;3&lt;/sup&gt;/&lt;sub&gt;4&lt;/sub&gt; &lt; 1 &lt; &lt;sup&gt;3&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt; &lt; 2 &lt; 3 }
: ''S&lt;sub&gt;4&lt;/sub&gt;'' = { −4 &lt; −3 &lt; ... &lt; −&lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;8&lt;/sub&gt; &lt; 0 &lt; &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;8&lt;/sub&gt; &lt; &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;4&lt;/sub&gt; &lt; &lt;sup&gt;3&lt;/sup&gt;/&lt;sub&gt;8&lt;/sub&gt; &lt; &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt; &lt; &lt;sup&gt;5&lt;/sup&gt;/&lt;sub&gt;8&lt;/sub&gt; &lt; &lt;sup&gt;3&lt;/sup&gt;/&lt;sub&gt;4&lt;/sub&gt; &lt; &lt;sup&gt;7&lt;/sup&gt;/&lt;sub&gt;8&lt;/sub&gt; &lt; 1 &lt; &lt;sup&gt;5&lt;/sup&gt;/&lt;sub&gt;4&lt;/sub&gt; &lt; &lt;sup&gt;3&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt; &lt; &lt;sup&gt;7&lt;/sup&gt;/&lt;sub&gt;4&lt;/sub&gt; &lt; 2 &lt; &lt;sup&gt;5&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt; &lt; 3 &lt; 4 }

===Arithmetic closure===

For each [[natural number]] (finite ordinal) ''n'', all numbers generated in ''S&lt;sub&gt;n&lt;/sub&gt;'' are [[dyadic fraction]]s, i.e., can be written as an [[irreducible fraction]] &lt;math&gt;\frac{a}{2^b}&lt;/math&gt;
where ''a'' and ''b'' are [[integer]]s and 0 ≤ ''b'' &lt; ''n''.

The set of all surreal numbers that are generated in some ''S&lt;sub&gt;n&lt;/sub&gt;'' for finite ''n'' may be denoted as ''S''&lt;sub&gt;*&lt;/sub&gt; = &lt;math&gt;\cup_{n \in N}  S_n&lt;/math&gt;.  One may form the three classes ''S''&lt;sub&gt;0&lt;/sub&gt; = { 0 }, ''S''&lt;sub&gt;+&lt;/sub&gt; = &lt;math&gt; { x \in S_*: x &gt; 0 }&lt;/math&gt;, and ''S''&lt;sub&gt;−&lt;/sub&gt; = &lt;math&gt; { x \in S_*: x &lt; 0 }&lt;/math&gt;, of which ''S&lt;sub&gt;*&lt;/sub&gt;'' is the union.  No individual ''S&lt;sub&gt;n&lt;/sub&gt;'' is closed under addition and multiplication (except ''S''&lt;sub&gt;0&lt;/sub&gt;), but ''S''&lt;sub&gt;*&lt;/sub&gt; is; it is the subring of the rationals consisting of all dyadic fractions.

There are infinite ordinal numbers β for which the set of surreal numbers with birthday less than β is closed under the different arithmetic operations.&lt;ref name=vdDE2001&gt;{{cite journal | last1 = van den Dries | first1 = Lou | last2 = Ehrlich | first2 = Philip | author2-link = Philip Ehrlich | title = Fields of surreal numbers and exponentiation | journal =  Fundamenta Mathematicae | volume = 167 | issue = 2 | pages = 173–188 | publisher = Institute of Mathematics of the Polish Academy of Sciences | location = Warszawa | date = January 2001 | url = http://www.ohio.edu/people/ehrlich/EhrlichvandenDries.pdf | issn = 0016-2736 | doi = 10.4064/fm167-2-3 | deadurl = yes | archiveurl = https://web.archive.org/web/20161021010354/http://www.ohio.edu/people/ehrlich/EhrlichvandenDries.pdf | archivedate = 2016-10-21 | df =  }}&lt;/ref&gt; For any ordinal α, the set of surreal numbers with birthday less than β = ω&lt;sup&gt;α&lt;/sup&gt; (using [[#Powers of ω|powers of ω]]) is closed under addition and forms a group; for birthday less than ω&lt;sup&gt;ω&lt;sup&gt;α&lt;/sup&gt;&lt;/sup&gt; it is closed under multiplication and forms a ring;{{efn|1=The set of dyadic fractions constitutes the simplest non-trivial group and ring of this kind; it consists of the surreal numbers with birthday less than ω = ω&lt;sup&gt;1&lt;/sup&gt; = ω&lt;sup&gt;ω&lt;sup&gt;0&lt;/sup&gt;&lt;/sup&gt;.}} and for birthday less than an (ordinal) [[Epsilon number (mathematics)|epsilon number]] ε&lt;sub&gt;α&lt;/sub&gt; it is closed under multiplicative inverse and forms a field. The latter sets are also closed under the exponential function as defined by Kruskal and Gonshor.&lt;ref name=vdDE2001 /&gt;&lt;ref name=G1986&gt;{{cite book | last=Gonshor | first=Harry | title=An Introduction to the Theory of Surreal Numbers | year=1986 | publisher=Cambridge University Press | series=London Mathematical Society Lecture Note Series | volume=110 | isbn= 9780521312059 | doi=10.1017/CBO9780511629143 }}&lt;/ref&gt;{{rp|at=ch. 10}}&lt;ref name=vdDE2001 /&gt;

However, it is always possible to construct a surreal number that is greater than any member of a set (by including the set on the left side of the constructor) and thus the collection of surreal numbers is a proper [[mathematical class|class]]. With their ordering and algebraic operations they constitute an [[ordered field]], with the caveat that they do not form a [[Set (mathematics)|set]].  In fact, it is a very special ordered field: the biggest one.  Every other ordered field can be embedded in the surreals. The class of all surreal numbers is denoted by the symbol &lt;math&gt;\mathbf{No}&lt;/math&gt;.

== Infinity ==

Define ''S''&lt;sub&gt;ω&lt;/sub&gt; as the set of all surreal numbers generated by the construction rule from subsets of ''S&lt;sub&gt;*&lt;/sub&gt;''.  (This is the same inductive step as before, since the ordinal number ω is the smallest ordinal that is larger than all natural numbers; however, the set union appearing in the inductive step is now an infinite union of finite sets, and so this step can only be performed in a set theory that allows such a union.)  A unique infinitely large positive number occurs in ''S''&lt;sub&gt;ω&lt;/sub&gt;:
: &lt;math&gt;  \omega = \{ S_* | \} = \{ 1, 2, 3, 4, ... | \}. &lt;/math&gt;
''S''&lt;sub&gt;ω&lt;/sub&gt; also contains objects that can be identified as the [[rational number]]s.  For example, the ω-complete form of the fraction &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;3&lt;/sub&gt; is given by:
: &lt;math&gt; \tfrac{1} {3} = \{ y \in S_*: 3 y &lt; 1 | y \in S_*: 3 y &gt; 1 \}&lt;/math&gt;.
The product of this form of &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;3&lt;/sub&gt; with any form of 3 is a form whose left set contains only numbers less than 1 and whose right set contains only numbers greater than 1; the birthday property implies that this product is a form of 1.

Not only do all the rest of the [[rational number]]s appear in ''S''&lt;sub&gt;ω&lt;/sub&gt;; the remaining finite [[real number]]s do too.  For example,
: &lt;math&gt; \pi = \{ 3, \frac{25}{8},\frac{201}{64}, ... | 4, \frac{7}{2}, \frac{13}{4}, \frac{51}{16},... \}&lt;/math&gt;.

The only infinities in ''S''&lt;sub&gt;ω&lt;/sub&gt; are ω and −ω; but there are other non-real numbers in ''S''&lt;sub&gt;ω&lt;/sub&gt; among the reals.  Consider the smallest positive number in ''S''&lt;sub&gt;ω&lt;/sub&gt;:
: &lt;math&gt; \varepsilon = \{ S_- \cup S_0 | S_+ \} = \{ 0 | 1, \tfrac{1}{2}, \tfrac{1}{4}, \tfrac{1}{8}, ... \} = \{ 0 | y \in S_* : y &gt; 0 \}&lt;/math&gt;.
This number is larger than zero but less than all positive dyadic fractions. It is therefore an [[infinitesimal]] number, often labeled ε.  The ω-complete form of ε (resp. -ε) is the same as the ω-complete form of 0, except that 0 is included in the left (resp. right) set.  The only "pure" infinitesimals in ''S''&lt;sub&gt;ω&lt;/sub&gt; are ε and its additive inverse -ε; adding them to any dyadic fraction ''y'' produces the numbers ''y''±ε, which also lie in ''S''&lt;sub&gt;ω&lt;/sub&gt;.

One can determine the relationship between ω and ε by multiplying particular forms of them to obtain:
: ω · ε = { ε · ''S''&lt;sub&gt;+&lt;/sub&gt; | ω · ''S''&lt;sub&gt;+&lt;/sub&gt; + ''S''&lt;sub&gt;*&lt;/sub&gt; + ε · ''S''&lt;sub&gt;*&lt;/sub&gt; }.
This expression is only well-defined in a set theory which permits transfinite induction up to &lt;math&gt;S_{\omega^2}&lt;/math&gt;.  In such a system, one can demonstrate that all the elements of the left set of ω · ε are positive infinitesimals and all the elements of the right set are positive infinities, and therefore ω · ε is the oldest positive finite number, i. e., 1.  Consequently,
: &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;ε&lt;/sub&gt; = ω.
Some authors systematically use ω&lt;sup&gt;−1&lt;/sup&gt; in place of the symbol ε.

===Contents of ''S''&lt;sub&gt;ω&lt;/sub&gt;===

Given any ''x'' = { ''L'' | ''R'' } in ''S''&lt;sub&gt;ω&lt;/sub&gt;, exactly one of the following is true:
* ''L'' and ''R'' are both empty, in which case ''x'' = 0;
* ''R'' is empty and some integer ''n''≥0 is greater than every element of ''L'', in which case ''x'' equals the smallest such integer ''n'';
* ''R'' is empty and no integer ''n'' is greater than every element of ''L'', in which case ''x'' equals +ω;
* ''L'' is empty and some integer ''n''≤0 is less than every element of ''R'', in which case ''x'' equals the largest such integer ''n'';
* ''L'' is empty and no integer ''n'' is less than every element of ''R'', in which case ''x'' equals -ω;
* ''L'' and ''R'' are both non-empty, and:
** some dyadic fraction ''y'' is "strictly between" ''L'' and ''R'' (greater than all elements of ''L'' and less than all elements of ''R''), in which case ''x'' equals the oldest such dyadic fraction ''y'';
** no dyadic fraction ''y'' lies strictly between ''L'' and ''R'', but some dyadic fraction &lt;math&gt; y \in L&lt;/math&gt; is greater than or equal to all elements of ''L'' and less than all elements of ''R'', in which case ''x'' equals ''y''+ε;
** no dyadic fraction ''y'' lies strictly between ''L'' and ''R'', but some dyadic fraction &lt;math&gt; y \in R&lt;/math&gt; is greater than all elements of ''L'' and less than or equal to all elements of ''R'', in which case ''x'' equals ''y''-ε;
** every dyadic fraction is either greater than some element of ''R'' or less than some element of ''L'', in which case ''x'' is some real number that has no representation as a dyadic fraction.

''S''&lt;sub&gt;ω&lt;/sub&gt; is not an algebraic field, because it is not closed under arithmetic operations; consider ω+1, whose form &lt;math&gt; \{ 1, 2, 3, 4, ... | \} + \{ 0 | \} = \{ 1, 2, 3, 4, ..., \omega | \}&lt;/math&gt; does not lie in any number in ''S''&lt;sub&gt;ω&lt;/sub&gt;.  The maximal subset of ''S''&lt;sub&gt;ω&lt;/sub&gt; that is closed under (finite series of) arithmetic operations is the field of real numbers, obtained by leaving out the infinities ±ω, the infinitesimals ±ε, and the infinitesimal neighbors ''y''±ε of each nonzero dyadic fraction ''y''.

This construction of the real numbers differs from the [[Dedekind cut]]s of [[standard analysis]] in that it starts from dyadic fractions rather than general rationals and naturally identifies each dyadic fraction in ''S''&lt;sub&gt;ω&lt;/sub&gt; with its forms in previous generations.  (The ω-complete forms of real elements of ''S''&lt;sub&gt;ω&lt;/sub&gt; are in one-to-one correspondence with the reals obtained by Dedekind cuts, under the proviso that Dedekind reals corresponding to rational numbers are represented by the form in which the cut point is omitted from both left and right sets.)  The rationals are not an identifiable stage in the surreal construction; they are merely the subset ''Q'' of ''S''&lt;sub&gt;ω&lt;/sub&gt; containing all elements ''x'' such that ''x'' ''b'' = ''a'' for some ''a'' and some nonzero ''b'', both drawn from ''S''&lt;sub&gt;*&lt;/sub&gt;.  By demonstrating that ''Q'' is closed under individual repetitions of the surreal arithmetic operations, one can show that it is a field; and by showing that every element of ''Q'' is reachable from ''S''&lt;sub&gt;*&lt;/sub&gt; by a finite series (no longer than two, actually) of arithmetic operations ''including multiplicative inversion'', one can show that ''Q'' is strictly smaller than the subset of ''S''&lt;sub&gt;ω&lt;/sub&gt; identified with the reals.

The set ''S''&lt;sub&gt;ω&lt;/sub&gt; has the same [[cardinality]] as the real numbers ''R''.  This can be demonstrated by exhibiting surjective mappings from ''S''&lt;sub&gt;ω&lt;/sub&gt; to the closed unit interval ''I'' of ''R'' and vice versa.  Mapping ''S''&lt;sub&gt;ω&lt;/sub&gt; onto ''I'' is routine; map numbers less than or equal to ε (including -ω) to 0, numbers greater than or equal to 1-ε (including ω) to 1, and numbers between ε and 1-ε to their equivalent in ''I'' (mapping the infinitesimal neighbors ''y''±ε of each dyadic fraction ''y'', along with ''y'' itself, to ''y'').  To map ''I'' onto ''S''&lt;sub&gt;ω&lt;/sub&gt;, map the (open) central third (1/3, 2/3) of ''I'' onto { | } = 0; the central third (7/9, 8/9) of the upper third to { 0 | } = 1; and so forth.  This maps a nonempty open interval of ''I'' onto each element of ''S''&lt;sub&gt;*&lt;/sub&gt;, monotonically.  The residue of ''I'' consists of the [[Cantor set]] ''2''&lt;sup&gt;ω&lt;/sup&gt;, each point of which is uniquely identified by a partition of the central-third intervals into left and right sets, corresponding precisely to a form { ''L'' | ''R'' } in ''S''&lt;sub&gt;ω&lt;/sub&gt;.  This places the Cantor set in one-to-one correspondence with the set of surreal numbers with birthday ω.

== Transfinite induction ==

Continuing to perform transfinite induction beyond ''S''&lt;sub&gt;ω&lt;/sub&gt; produces more ordinal numbers α, each represented as the largest surreal number having birthday α.  (This is essentially a definition of the ordinal numbers resulting from transfinite induction.)  The first such ordinal is ω+1 = { ω | }.  There is another positive infinite number in generation ω+1:
: ω−1 = { 1, 2, 3, 4, ... | ω }.
It is important to observe that the surreal number ω−1 is not an ordinal; the ordinal ω is not the successor of any ordinal.  This is a surreal number with birthday ω+1, which is labeled ω−1 on the basis that it coincides with the sum of ω = { 1, 2, 3, 4, ... | } and −1 = { | 0 }.  Similarly, there are two new infinitesimal numbers in generation ω+1:
: 2ε = ε + ε = { ε | 1+ε, &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt;+ε, &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;4&lt;/sub&gt;+ε, &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;8&lt;/sub&gt;+ε, ... } and
: ε/2 = ε · &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt; = { 0 | ε }.

At a later stage of transfinite induction, there is a number larger than ω+''k'' for all natural numbers ''k'':
: 2ω = ω + ω = { ω+1, ω+2, ω+3, ω+4, ... | }
This number may be labeled ω + ω both because its birthday is ω + ω (the first ordinal number not reachable from ω by the successor operation) and because it coincides with the surreal sum of ω and ω; it may also be labeled 2ω because it coincides with the product of ω = { 1, 2, 3, 4, ... | } and 2 = { 1 | }.  It is the second limit ordinal; reaching it from ω via the construction step requires a transfinite induction on &lt;math&gt;\bigcup_{k &lt; \omega} S_{\omega + k}&lt;/math&gt;.  This involves an infinite union of infinite sets, which is a "stronger" set theoretic operation than the previous transfinite induction required.

Note that the ''conventional'' addition and multiplication of ordinals does not always coincide with these operations on their surreal representations.  The sum of ordinals 1 + ω equals ω, but the surreal sum is commutative and produces 1 + ω = ω + 1 &gt; ω.  The addition and multiplication of the surreal numbers associated with ordinals coincides with the [[ordinal arithmetic#Natural operations|natural sum and natural product]] of ordinals.

Just as 2ω is bigger than ω + ''n'' for any natural number ''n'', there is a surreal number ω/2 that is infinite but smaller than ω − ''n'' for any natural number ''n''.  That is, ω/2 is defined by
: ω/2 = { ''S''&lt;sub&gt;*&lt;/sub&gt; | ω − ''S''&lt;sub&gt;*&lt;/sub&gt; }
where on the right hand side the notation ''x'' − ''Y'' is used to mean { ''x'' − ''y'' : ''y'' in ''Y'' }.  It can be identified as the product of ω and the form { 0 | 1 } of &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt;.  The birthday of &lt;sup&gt;ω&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt; is the limit ordinal ω2.

== Powers of ω ==

To classify the "orders" of infinite and infinitesimal surreal numbers, also known as [[archimedean property|archimedean]] classes, Conway associated to each surreal number ''x'' the surreal number
* ω&lt;sup&gt;''x''&lt;/sup&gt; = { 0, ''r'' ω&lt;sup&gt;''x''&lt;sub&gt;L&lt;/sub&gt;&lt;/sup&gt; | ''s'' ω&lt;sup&gt;''x''&lt;sub&gt;R&lt;/sub&gt;&lt;/sup&gt; },
where ''r'' and ''s'' range over the positive real numbers.  If ''x'' &lt; ''y'' then ω&lt;sup&gt;''y''&lt;/sup&gt; is "infinitely greater" than ω&lt;sup&gt;''x''&lt;/sup&gt;, in that it is greater than ''r'' ω&lt;sup&gt;''x''&lt;/sup&gt; for all real numbers ''r''.  Powers of ω also satisfy the conditions
* ω&lt;sup&gt;''x''&lt;/sup&gt; ω&lt;sup&gt;''y''&lt;/sup&gt; = ω&lt;sup&gt;''x+y''&lt;/sup&gt;,
* ω&lt;sup&gt;−''x''&lt;/sup&gt; = 1/ω&lt;sup&gt;''x''&lt;/sup&gt;,
so they behave the way one would expect powers to behave.

Each power of ω also has the redeeming feature of being the ''simplest'' surreal number in its archimedean class; conversely, every archimedean class within the surreal numbers contains a unique simplest member.  Thus, for every positive surreal number ''x'' there will always exist some positive real number ''r'' and some surreal number ''y'' so that ''x'' − ''r'' ω&lt;sup&gt;''y''&lt;/sup&gt; is "infinitely smaller" than ''x''.  The exponent ''y'' is the "base ω logarithm" of ''x'', defined on the positive surreals; it can be demonstrated that log&lt;sub&gt;ω&lt;/sub&gt; maps the positive surreals onto the surreals and that log&lt;sub&gt;ω&lt;/sub&gt;(''xy'') = log&lt;sub&gt;ω&lt;/sub&gt;(''x'') + log&lt;sub&gt;ω&lt;/sub&gt;(''y'').

This gets extended by transfinite induction so that every surreal number ''x'' has a "normal form" analogous to the [[Ordinal arithmetic#Cantor normal form|Cantor normal form]] for ordinal numbers.  Every surreal number may be uniquely written as
* ''x'' = ''r''&lt;sub&gt;0&lt;/sub&gt; ω&lt;sup&gt;''y''&lt;sub&gt;0&lt;/sub&gt;&lt;/sup&gt; + ''r''&lt;sub&gt;1&lt;/sub&gt; ω&lt;sup&gt;''y''&lt;sub&gt;1&lt;/sub&gt;&lt;/sup&gt; + …,
where every ''r''&lt;sub&gt;α&lt;/sub&gt; is a nonzero real number and the ''y''&lt;sub&gt;α&lt;/sub&gt;s form a strictly decreasing sequence of surreal numbers.  This "sum", however, may have infinitely many terms, and in general has the length of an arbitrary ordinal number. (Zero corresponds of course to the case of an empty sequence, and is the only surreal number with no leading exponent.)

Looked at in this manner, the surreal numbers resemble a [[Formal power series|power series field]], except that the decreasing sequences of exponents must be bounded in length by an ordinal and are not allowed to be as long as the class of ordinals. This is the basis for the formulation of the surreal numbers as a [[#Hahn series|Hahn series]].

==Gaps and continuity==

In contrast to the real numbers, a (proper) subset of the surreal numbers does not have a least upper (or lower) bound unless it has a maximal (minimal) element. Conway defines&lt;ref name=Con01/&gt; a gap as {''L'' | ''R''}, ''L'' &lt; ''R'', ''L'' ∪ ''R'' = 𝐍𝐨; this is not a number because at least one of the sides is a proper class. Though similar, gaps are not quite the same as [[Dedekind cut|Dedekind sections]]{{efn|The definition of a gap omits the conditions of a Dedekind cut that ''L'' and ''R'' be non-empty and that ''L'' not have a largest element, and also the identification of a cut with the smallest element in ''R'' if one exists.}}, but we can still talk about a completion 𝐍𝐨&lt;sup&gt;𝕯&lt;/sup&gt; of the surreal numbers with the natural ordering which is a (proper class-sized) [[linear continuum]].&lt;ref name=RSS15&gt;{{cite arXiv|first1=Simon|last1=Rubinstein-Salzedo|first2=Ashvin|last2=Swaminathan|arxiv=1307.7392v3|class=math.CA|date=2015-05-19|title=Analysis on Surreal Numbers}}&lt;/ref&gt;

For instance there is no least positive infinite surreal, but the gap ∞ = {''x'': ∃ ''n'' ∈ ℕ: ''x'' &lt; ''n'' | ''x'': ∀ ''n'' ∈ ℕ: ''x'' &gt; ''n''} is greater than all real numbers and less than all positive infinite surreals, and is thus the least upper bound of the reals in 𝐍𝐨&lt;sup&gt;𝕯&lt;/sup&gt;. Similarly the gap 𝐎𝐧 = { 𝐍𝐨 | } is larger than all surreal numbers. (𝐎𝐧 is also the name of the class of ordinal numbers, and since 𝐎𝐧 is [[Cofinal (mathematics)|cofinal]] in 𝐍𝐨 and thus 𝐎𝐧 = { 𝐎𝐧 | } as well, this extends the equivalence of an ordinal α with the set of ordinals smaller than α).

With a bit of set-theoretic care&lt;ref name=RSS15/&gt;{{efn|Importantly there is no claim that the collection of Cauchy sequences constitutes a class in NBG set theory.}} 𝐍𝐨 can be equipped with a topology where the open sets are unions of open intervals (indexed by proper sets) and continuous functions can be defined. An equivalent of Cauchy sequences can be defined as well although they have to be indexed by the class of ordinals; these will always converge, but the limit may be either a number or a gap that can be expressed as ∑&lt;sub&gt;α∈𝐍𝐨&lt;/sub&gt;''r''&lt;sub&gt;α&lt;/sub&gt;ω&lt;sup&gt;''a''&lt;sub&gt;α&lt;/sub&gt;&lt;/sup&gt; with
''a''&lt;sub&gt;α&lt;/sub&gt; decreasing and having no lower bound in 𝐍𝐨. (All such gaps can be understood as Cauchy sequences themselves but there are other types of gap that are not limits, such as ∞ and 𝐎𝐧).

==Exponential function==
Based on unpublished work by [[Martin David Kruskal|Kruskal]], a construction (by transfinite induction) that extends the real [[exponential function]] exp(''x'') (with base ''e'') to the surreals was carried through by Gonshor.&lt;ref name=G1986 /&gt;{{rp|at=ch. 10}}

===Other exponentials===
The [[#Powers of ω|powers of ω]] function is also an exponential function, but does not have the properties desired for an extension of the function on the reals. It will, however, be needed in the development of the base-''e'' exponential, and it is this function that is meant whenever the notation ω&lt;sup&gt;''x''&lt;/sup&gt; is used in the following.

When ''y'' is a dyadic fraction, the [[power function]] {{nowrap|''x'' ∈ No}}, {{nowrap|''x'' ↦ ''x''&lt;sup&gt;''y''&lt;/sup&gt;}} may be composed from multiplication, multiplicative inverse and square root, all of which can be defined inductively. Its values are completely determined by the basic relation {{nowrap|1=''x&lt;sup&gt;y+z&lt;/sup&gt; = x&lt;sup&gt;y&lt;/sup&gt;·x&lt;sup&gt;z&lt;/sup&gt;'',}} and where defined it necessarily agrees with any other [[exponentiation]] that can exist.

===Basic induction===
The induction steps for the surreal exponential are based on the series expansion for the real exponential, {{nowrap|1=exp ''x'' = ∑&lt;sub&gt;''n''≥0&lt;/sub&gt; ''x''&lt;sup&gt;''n''&lt;/sup&gt;/n!,}} more specifically those partial sums that can be shown by basic algebra to be positive but less than all later ones. For ''x'' positive these are denoted [''x'']&lt;sub&gt;''n''&lt;/sub&gt; and include all partial sums; for ''x'' negative but finite, [''x'']&lt;sub&gt;2''n''+1&lt;/sub&gt; denotes the odd steps in the series starting from the first one with a positive real part (which always exists). For ''x'' negative infinite the odd-numbered partial sums are strictly decreasing and the [''x'']&lt;sub&gt;2''n''+1&lt;/sub&gt; notation denotes the empty set, but it turns out that the corresponding elements are not needed in the induction.

The relations that hold for real
{{nowrap|1=''x'' &lt; ''y''}}
are then
{{nowrap|1=exp ''x'' · [''y–x'']&lt;sub&gt;''n''&lt;/sub&gt; &lt; exp ''y''}}
and
{{nowrap|1=exp ''y'' · [''x–y'']&lt;sub&gt;2''n''+1&lt;/sub&gt; &lt; exp ''x'',}}
and this can be extended to the surreals with the definition 
{{nowrap|1=exp ''z'' = { 0,
exp ''z&lt;sub&gt;L&lt;/sub&gt;'' · [''z–z&lt;sub&gt;L&lt;/sub&gt;'']&lt;sub&gt;''n''&lt;/sub&gt; , exp ''z&lt;sub&gt;R&lt;/sub&gt;'' · [''z–z&lt;sub&gt;R&lt;/sub&gt;'']&lt;sub&gt;2''n''+1&lt;/sub&gt; {{pipe}}
exp ''z&lt;sub&gt;R&lt;/sub&gt;'' / [''z&lt;sub&gt;R&lt;/sub&gt;–z'']&lt;sub&gt;''n''&lt;/sub&gt; , exp ''z&lt;sub&gt;L&lt;/sub&gt;'' / [''z&lt;sub&gt;L&lt;/sub&gt;–z'']&lt;sub&gt;2''n''+1&lt;/sub&gt; }.}} This is well-defined for all surreal arguments (the value exists and does not depend on the choice of ''z''&lt;sub&gt;''L''&lt;/sub&gt; and ''z''&lt;sub&gt;''R''&lt;/sub&gt;).
===Results===
Using this definition, the following holds:{{efn|Even the most trivial-looking of these equalities may involve transfinite induction and constitute a  separate theorem.}}
* exp is a strictly increasing positive function, {{nowrap|1=''x'' &lt; ''y'' ⇒ 0 &lt; exp ''x'' &lt; exp ''y''}}
* exp satisfies {{nowrap|1=exp(''x''+''y'') = exp ''x'' · exp ''y''}}
* exp is a surjection (onto '''No'''&lt;sub&gt;+&lt;/sub&gt;) and has a well-defined inverse, {{nowrap|1=log = exp&lt;sup&gt;–1&lt;/sup&gt;}}
* exp coincides with the usual exponential function on the reals (and thus {{nowrap|1=exp 0 = 1, exp 1 = ''e''}})
* For ''x'' infinitesimal, the value of the formal power series {{nowrap|1=∑&lt;sub&gt;''n''≥0&lt;/sub&gt; ''x''&lt;sup&gt;''n''&lt;/sup&gt;/''n''!}} is well defined and coincides with the inductive definition
** When ''x'' is given in Conway normal form, the set of exponents in the result is well-ordered and the coefficients are finite sums, directly giving the normal form of the result (which has a leading 1)
** Similarly, for ''x'' infinitesimally close to 1, log ''x'' is given by power series expansion of {{nowrap|''x''–1}}
* For positive infinite ''x'', exp ''x'' is infinite as well
** If ''x'' has the form ω&lt;sup&gt;α&lt;/sup&gt; (α &gt; 0), exp ''x'' has the form ω&lt;sup&gt;ω&lt;sup&gt;β&lt;/sup&gt;&lt;/sup&gt; where β is a strictly increasing function of α. In fact there is an inductively defined bijection {{nowrap|1=''g'': '''No'''&lt;sub&gt;+&lt;/sub&gt; → '''No''': α ↦ β}} whose inverse can also be defined inductively
** If ''x'' is "pure infinite" with normal form {{nowrap|1=''x'' = ∑&lt;sub&gt;α&lt;β&lt;/sub&gt;''r''&lt;sub&gt;α&lt;/sub&gt;ω&lt;sup&gt;''a''&lt;sub&gt;α&lt;/sub&gt;&lt;/sup&gt;}} where all {{nowrap|1=''a''&lt;sub&gt;α&lt;/sub&gt; &gt; 0}}, then {{nowrap|1=exp ''x'' = ω&lt;sup&gt;∑&lt;sub&gt;α&lt;β&lt;/sub&gt;''r''&lt;sub&gt;α&lt;/sub&gt;ω&lt;sup&gt;''g''(''a''&lt;sub&gt;α&lt;/sub&gt;)&lt;/sup&gt;&lt;/sup&gt;}}
** Similarly, for {{nowrap|1=''x'' = ω&lt;sup&gt;∑&lt;sub&gt;α&lt;β&lt;/sub&gt;''r''&lt;sub&gt;α&lt;/sub&gt;ω&lt;sup&gt;''b''&lt;sub&gt;α&lt;/sub&gt;&lt;/sup&gt;&lt;/sup&gt;}}, the inverse is given by {{nowrap|1=log ''x'' = ∑&lt;sub&gt;α&lt;β&lt;/sub&gt;''r''&lt;sub&gt;α&lt;/sub&gt;ω&lt;sup&gt;''g&lt;sup&gt;–1&lt;/sup&gt;(b''&lt;sub&gt;α&lt;/sub&gt;)&lt;/sup&gt;}}
* Any surreal number can be written as the sum of a pure infinite, a real and an infinitesimal part, and the exponential is the product of the partial results given above
** The normal form can be written out by multiplying the infinite part (a single power of ω) and the real exponential into the power series resulting from the infinitesimal
** Conversely, dividing out the leading term of the normal form will bring any surreal number into the form {{nowrap|1=(ω&lt;sup&gt;∑&lt;sub&gt;γ&lt;δ&lt;/sub&gt;''t''&lt;sub&gt;γ&lt;/sub&gt;ω&lt;sup&gt;''b''&lt;sub&gt;γ&lt;/sub&gt;&lt;/sup&gt;&lt;/sup&gt;)·''r''·(1 + ∑&lt;sub&gt;α&lt;β&lt;/sub&gt;''s''&lt;sub&gt;α&lt;/sub&gt;ω&lt;sup&gt;''a''&lt;sub&gt;α&lt;/sub&gt;&lt;/sup&gt;)}}, for {{nowrap|1=''a''&lt;sub&gt;α&lt;/sub&gt; &lt; 0}}, where each factor has a form for which a way of calculating the logarithm has been given above; the sum is then the general logarithm
*** While there is no general inductive definition of log (unlike for exp), the partial results are given in terms of such definitions. In this way, the logarithm can be calculated explicitly, without reference to the fact that it's the inverse of the exponential.
* The exponential function is much greater than any finite power
** For any positive infinite ''x'' and any finite ''n'', exp(''x'')/''x''&lt;sup&gt;''n''&lt;/sup&gt; is infinite
** For any integer ''n'' and surreal ''x'' &amp;gt; ''n''&lt;sup&gt;2&lt;/sup&gt;, exp(''x'') &amp;gt; ''x''&lt;sup&gt;''n''&lt;/sup&gt;. This stronger constraint is one of the Ressayre axioms for the real [[exponential field]]&lt;ref name=vdDE2001 /&gt;
* exp satisfies all the Ressayre axioms for the real exponential field&lt;ref name=vdDE2001 /&gt;
** The surreals with exponential is an [[elementary extension]] of the real exponential field
** For ε&lt;sub&gt;β&lt;/sub&gt; an ordinal epsilon number, the set of surreal numbers with birthday less than ε&lt;sub&gt;β&lt;/sub&gt; constitute a field that is closed under exponentials, and is likewise an elementary extension of the real exponential field

===Examples===
The surreal exponential is essentially given by its behaviour on positive powers of ω, i.e., the function ''g(a)'', combined with well-known behaviour on finite numbers. Only examples of the former will be given. In addition, {{nowrap|1=''g(a)'' = ''a''}} holds for a large part of its range, for instance for any finite number with positive real part and any infinite number that is less than some iterated power of ω ({{nowrap|ω&lt;sup&gt;ω&lt;sup&gt;·&lt;sup&gt;·&lt;sup&gt;ω&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;}} for some number of levels).
* exp ω = ω&lt;sup&gt;ω&lt;/sup&gt;
* exp ω&lt;sup&gt;1/ω&lt;/sup&gt; = ω and log ω = ω&lt;sup&gt;1/ω&lt;/sup&gt;
* exp (ω · log ω) = exp (ω · ω&lt;sup&gt;1/ω&lt;/sup&gt;) = ω&lt;sup&gt;ω&lt;sup&gt;(1 + 1/ω)&lt;/sup&gt;&lt;/sup&gt;
** This shows that the "power of ω" function is not compatible with exp, since compatibility would demand a value of ω&lt;sup&gt;ω&lt;/sup&gt; here
* exp ε&lt;sub&gt;0&lt;/sub&gt; = ω&lt;sup&gt;ω&lt;sup&gt;ε&lt;sub&gt;0&lt;/sub&gt; + 1&lt;/sup&gt;&lt;/sup&gt;
* log ε&lt;sub&gt;0&lt;/sub&gt; =  ε&lt;sub&gt;0&lt;/sub&gt; / ω

===Exponentiation===
A general exponentiation can be defined as {{nowrap|1=''x&lt;sup&gt;y&lt;/sup&gt;'' = exp(''y'' · log ''x'')}}, giving an interpretation to expressions like {{nowrap|1=2&lt;sup&gt;ω&lt;/sup&gt; = exp(ω · log 2) = ω&lt;sup&gt;log 2 · ω&lt;/sup&gt;}}. Again it is essential to distinguish this definition from the "powers of ω" function, especially if ω may occur as the base.

== Surcomplex numbers ==

A '''surcomplex number''' is a number of the form {{math|''a+bi''}}, where ''a'' and ''b'' are surreal numbers.&lt;ref&gt;[http://jamespropp.org/surreal/text.ps.gz Surreal vectors and the game of Cutblock], James Propp, August 22, 1994.&lt;/ref&gt;&lt;ref name="Alling"&gt;{{cite book | last = Alling | first = Norman L. | title = Foundations of Analysis over Surreal Number Fields | publisher = North-Holland | series = Mathematics Studies 141 | year = 1987 | isbn = 0-444-70226-1}}&lt;/ref&gt;  The surcomplex numbers form an [[algebraically closed]] [[field (mathematics)|field]] (except for being a proper class), [[isomorphic (mathematics)|isomorphic]] to the [[algebraic closure]] of the field generated by extending the [[rational numbers]] by a [[proper class]] of [[algebraically independent]] [[transcendental (mathematics)|transcendental]] elements.  Up to field [[isomorphism]], this fact characterizes the field of surcomplex numbers within any fixed set theory.&lt;ref name=Con01/&gt;{{rp|Th.27}}

==Games==
{{main article|combinatorial game theory}}

The definition of surreal numbers contained one restriction: each element of L must be strictly less than each element of R.  If this restriction is dropped we can generate a more general class known as ''games''.  All games are constructed according to this rule:

:'''Construction Rule'''&lt;br/&gt; If ''L'' and ''R'' are two sets of games then { ''L'' | ''R'' } is a game.

Addition, negation, and comparison are all defined the same way for both surreal numbers and games.

Every surreal number is a game, but not all games are surreal numbers, e.g. the game [[star (game theory)|{ '''0''' | '''0''' }]] is not a surreal number.  The class of games is more general than the surreals, and has a simpler definition, but lacks some of the nicer properties of surreal numbers.  The class of surreal numbers forms a [[field (mathematics)|field]], but the class of games does not.  The surreals have a [[total order]]: given any two surreals, they are either equal, or one is greater than the other.  The games have only a [[partial order]]: there exist pairs of games that are neither equal, greater than, nor less than each other.  Each surreal number is either positive, negative, or zero.  Each game is either positive, negative, ''[[zero game|zero]]'', or ''[[fuzzy game|fuzzy]]'' (incomparable with zero, such as {1|−1}).

A move in a game involves the player whose move it is choosing a game from those available in L (for the left player) or R (for the right player) and then passing this chosen game to the other player.  A player who cannot move because the choice is from the empty set has lost. A positive game represents a win for the left player, a negative game for the right player, a zero game for the second player to move, and a [[fuzzy game]] for the first player to move.

If ''x'', ''y'', and ''z'' are surreals, and ''x''=''y'', then ''x'' ''z''=''y'' ''z''.  However, if ''x'', ''y'', and ''z'' are games, and ''x''=''y'', then it is not always true that ''x'' ''z''=''y'' ''z''.  Note that "=" here means equality, not identity.

==Application to combinatorial game theory==

The surreal numbers were originally motivated by studies of the game [[Go (board game)|Go]],&lt;ref name="O'Connor"/&gt; and there are numerous connections between popular games and the surreals.  In this section, we will use a capitalized ''Game'' for the mathematical object {L|R}, and the lowercase ''game'' for recreational games like [[Chess]] or [[Go (board game)|Go]].

We consider games with these properties:
* Two players (named ''Left'' and ''Right'')
* [[Deterministic]] (the game at each step will completely depend on the choices the players make, rather than a random factor)
* No hidden information (such as cards or tiles that a player hides)
* Players alternate taking turns (the game may or may not allow multiple moves in a turn)
* Every game must end in a finite number of moves
* As soon as there are no legal moves left for a player, the game ends, and that player loses

For most games, the initial board position gives no great advantage to either player.  As the game progresses and one player starts to win, board positions will occur in which that player has a clear advantage.  For analyzing games, it is useful to associate a Game with every board position.  The value of a given position will be the Game {L|R}, where L is the set of values of all the positions that can be reached in a single move by Left. Similarly, R is the set of values of all the positions that can be reached in a single move by Right.

The zero Game (called 0) is the Game where L and R are both empty, so the player to move next (L or R) immediately loses. The sum of two Games G = { L1 | R1 } and H = { L2 | R2 } is defined as the Game G + H = { L1 + H, G + L2 | R1 + H, G + R2 } where the player to move chooses which of the Games to play in at each stage, and the loser is still the player who ends up with no legal move. One can imagine two chess boards between two players, with players making moves alternatively, but with complete freedom as to which board to play on. If G is the Game {L | R}, -G is the game {-R | -L}, i.e. with the role of the two players reversed. It is easy to show G - G = 0 for all Games G (where G -  H is defined as G + (-H)).

This simple way to associate Games with games yields a very interesting result.  Suppose two perfect players play a game starting with a given position whose associated Game is ''x''.  We can classify all Games into four classes as follows:

* If x &gt; 0 then Left will win, regardless of who plays first.
* If x &lt; 0 then Right will win, regardless of who plays first.
* If x = 0 then the player who goes second will win.
* If x || 0 then the player who goes first will win.

More generally, we can define G &gt; H as G - H &gt; 0, and similarly for &lt;, = and ||.

The notation G || H means that G and H are incomparable.  G || H is equivalent to G−H || 0, i.e. that G &gt; H, G &lt; H and G = H are all false.   Incomparable games are sometimes said to be ''confused'' with each other, because one or the other may be preferred by a player depending on what is added to it.  A game confused with zero is said to be [[fuzzy game|fuzzy]], as opposed to [[sign (mathematics)|positive, negative, or zero]]. An example of a fuzzy game is [[star (game theory)|star (*)]].

Sometimes when a game nears the end, it will decompose into several smaller games that do not interact, except in that each player's turn allows moving in only one of them.  For example, in Go, the board will slowly fill up with pieces until there are just a few small islands of empty space where a player can move.  Each island is like a separate game of Go, played on a very small board.  It would be useful if each subgame could be analyzed separately, and then the results combined to give an analysis of the entire game.  This doesn't appear to be easy to do.  For example, you might have two subgames where whoever moves first wins, but when they are combined into one big game, it's no longer the first player who wins.  Fortunately, there is a way to do this analysis.  Just use the following remarkable theorem:

:If a big game decomposes into two smaller games, and the small games have associated Games of ''x'' and ''y'', then the big game will have an associated Game of ''x''+''y''.

A game composed of smaller games is called the [[disjunctive sum]] of those smaller games, and the theorem states that the method of addition we defined is equivalent to taking the disjunctive sum of the addends.

Historically, Conway developed the theory of surreal numbers in the reverse order of how it has been presented here.  He was analyzing [[Go terms#Yose|Go endgames]], and realized that it would be useful to have some way to combine the analyses of non-interacting subgames into an analysis of their [[disjunctive sum]].  From this he invented the concept of a Game and the addition operator for it.  From there he moved on to developing a definition of negation and comparison.  Then he noticed that a certain class of Games had interesting properties; this class became the surreal numbers.  Finally, he developed the multiplication operator, and proved that the surreals are actually a field, and that it includes both the reals and ordinals.

==Alternative realizations==

The name surreal number was first used by Conway in 1972, but there are several alternative constructions developed both before and after that.

===Sign expansion===

====Definitions====

In what is now called the ''sign-expansion'' or ''sign-sequence'' of a surreal number, a surreal number is a [[function (mathematics)|function]] whose [[domain of a function|domain]] is an [[ordinal number|ordinal]] and whose [[codomain]] is { −1, +1 }.&lt;ref name=G1986 /&gt;{{rp|at=ch. 2}} This is equivalent to Conway's L-R sequences.&lt;ref name="Con01" /&gt;

Define the binary predicate "simpler than" on numbers by ''x'' is simpler than ''y'' if ''x'' is a [[subset|proper subset]] of ''y'', ''i.e.'' if dom(''x'') &amp;lt; dom(''y'') and ''x''(α) = ''y''(α) for all α &amp;lt; dom(''x'').

For surreal numbers  define the binary relation &amp;lt; to be lexicographic order (with the convention that "undefined values" are greater than &amp;minus;1 and less than 1). So ''x'' &amp;lt; ''y'' if one of the following holds:
* ''x'' is simpler than ''y'' and ''y''(dom(''x'')) = + 1;
* ''y'' is simpler than ''x'' and ''x''(dom(''y'')) = − 1;
* there exists a number ''z'' such that ''z'' is simpler than ''x'', ''z'' is simpler than ''y'', ''x''(dom(''z'')) = − 1 and ''y''(dom(''z'')) = + 1.

Equivalently, let δ(''x'',''y'') = min({ dom(''x''), dom(''y'')} ∪ { α :
α &amp;lt; dom(''x'') ∧ α &amp;lt; dom(''y'') ∧ ''x''(α) ≠ ''y''(α) }),
so that ''x'' = ''y'' if and only if δ(''x'',''y'') = dom(''x'') = dom(''y'').  Then, for numbers ''x'' and ''y'', ''x'' &amp;lt; ''y'' if and only if one of the following holds:
* δ(''x'',''y'') = dom(''x'') ∧ δ(''x'',''y'') &amp;lt; dom(''y'') ∧ ''y''(δ(''x'',''y'')) = + 1;
* δ(''x'',''y'') &amp;lt; dom(''x'') ∧ δ(''x'',''y'') = dom(''y'') ∧ ''x''(δ(''x'',''y'')) = − 1;
* δ(''x'',''y'') &amp;lt; dom(''x'') ∧ δ(''x'',''y'') &amp;lt; dom(''y'') ∧ ''x''(δ(''x'',''y'')) = − 1 ∧ ''y''(δ(''x'',''y'')) = + 1.

For numbers ''x'' and ''y'', ''x'' ≤ ''y'' if and only if ''x'' &amp;lt; ''y'' ∨ ''x'' = ''y'', and ''x'' &amp;gt; ''y'' if and only if ''y'' &amp;lt; ''x''. Also ''x'' ≥ ''y'' if and only if ''y'' ≤ ''x''.

The relation &amp;lt; is [[transitive relation|transitive]], and for all numbers ''x'' and ''y'', exactly one of ''x'' &amp;lt; ''y'', ''x'' = ''y'', ''x'' &amp;gt; ''y'', holds (law of [[trichotomy (mathematics)|trichotomy]]).  This means that &amp;lt; is a [[linear order]] (except that &amp;lt; is a proper class).

For sets of numbers, ''L'' and ''R'' such that ∀''x'' ∈ ''L'' ∀''y'' ∈ ''R'' (''x'' &amp;lt; ''y''), there exists a unique number ''z'' such that
* ∀''x'' ∈ ''L'' (''x'' &amp;lt; ''z'') ∧ ∀''y'' ∈ ''R'' (''z'' &amp;lt; ''y''),
* For any number ''w'' such that ∀''x'' ∈ ''L'' (''x'' &amp;lt; ''w'') ∧ ∀''y'' ∈ ''R'' (''w'' &amp;lt; ''y''), ''w'' = ''z'' or ''z'' is simpler than ''w''.

Furthermore, ''z'' is constructible from ''L'' and ''R'' by transfinite induction.  ''z'' is the simplest number between ''L'' and ''R''.  Let the unique number ''z'' be denoted by σ(''L'',''R'').

For a number ''x'', define its left set ''L''(''x'') and right set ''R''(''x'') by
* ''L''(''x'') = { ''x''|&lt;sub&gt;α&lt;/sub&gt; : α &amp;lt; dom(''x'') ∧ ''x''(α) = + 1 };
* ''R''(''x'') = { ''x''|&lt;sub&gt;α&lt;/sub&gt; : α &amp;lt; dom(''x'') ∧ ''x''(α) = − 1 },

then σ(''L''(''x''),''R''(''x'')) = ''x''.

One advantage of this alternative realization is that equality is identity, not an inductively defined relation. Unlike Conway's realization of the surreal numbers, however, the sign-expansion requires a prior construction of the ordinals, while in Conway's realization, the ordinals are constructed as particular cases of surreals.

However, similar definitions can be made that eliminate the need for prior construction of the ordinals.  For instance, we could let the surreals be the (recursively-defined) class of functions whose domain is a subset of the surreals satisfying the transitivity rule ∀''g'' ∈ dom ''f''  (∀''h'' ∈ dom ''g'' (''h'' ∈ dom ''f'' )) and whose range is { −, + }.  "Simpler than" is very simply defined now&amp;mdash;''x'' is simpler than ''y''  if ''x'' ∈ dom ''y''.  The total ordering is defined by considering ''x'' and ''y'' as sets of ordered pairs (as a function is normally defined):  Either ''x'' = ''y'',  or else the surreal number ''z'' = ''x'' ∩ ''y''  is in the domain of ''x''  or the domain of ''y''  (or both, but in this case the signs must disagree).  We then have ''x'' &lt; ''y''  if ''x''(''z'') = − or ''y''(''z'') = + (or both).  Converting these functions into sign sequences is a straightforward task; arrange the elements of dom ''f''  in order of simplicity (i.e., inclusion), and then write down the signs that ''f'' assigns to each of these elements in order.  The ordinals then occur naturally as those surreal numbers whose range is { + }.

====Addition and multiplication====

The sum ''x'' + ''y'' of two numbers, ''x'' and ''y'', is defined by induction on dom(''x'') and dom(''y'') by ''x'' + ''y'' = σ(''L'',''R''), where
* ''L'' = { ''u'' + ''y'' : ''u'' ∈ ''L''(''x'') } ∪{ ''x'' + ''v'' : ''v'' ∈ ''L''(''y'') },
* ''R'' = { ''u'' + ''y'' : ''u'' ∈ ''R''(''x'') } ∪{ ''x'' + ''v'' : ''v'' ∈ ''R''(''y'') }.

The additive identity is given by the number 0 = { }, ''i.e.'' the number 0 is the unique function whose domain is the ordinal 0, and the additive inverse of the number ''x'' is the number − ''x'', given by dom(− ''x'') = dom(''x''), and, for α &amp;lt; dom(''x''), (− ''x'')(α) = − 1 if ''x''(α) = + 1, and (− ''x'')(α) = + 1 if ''x''(α) = − 1.

It follows that a number ''x'' is [[Positive number|positive]] if and only if 0 &amp;lt; dom(''x'') and ''x''(0) = + 1, and ''x'' is [[negative number|negative]] if and only if 0 &amp;lt; dom(''x'') and ''x''(0) = − 1.

The product ''xy'' of two numbers, ''x'' and ''y'', is defined by induction on dom(''x'') and dom(''y'') by ''xy'' = σ(''L'',''R''), where
* ''L'' = { ''uy'' + ''xv'' − ''uv'' : ''u'' ∈ ''L''(''x''), ''v'' ∈ ''L''(''y'') } ∪ { ''uy'' + ''xv'' − ''uv'' : ''u'' ∈ ''R''(''x''), ''v'' ∈ ''R''(''y'') },
* ''R'' = { ''uy'' + ''xv'' − ''uv'' : ''u'' ∈ ''L''(''x''), ''v'' ∈ ''R''(''y'') } ∪ { ''uy'' + ''xv'' − ''uv'' : ''u'' ∈ ''R''(''x''), ''v'' ∈ ''L''(''y'') }.

The multiplicative identity is given by the number 1 = { (0,+ 1) }, ''i.e.'' the number 1 has domain equal to the ordinal 1, and 1(0) = + 1.

====Correspondence with Conway====

The map from Conway's realization to sign expansions is given by ''f''({ ''L'' | ''R'' }) = σ(''M'',''S''), where ''M'' = { ''f''(''x'') : ''x'' ∈ ''L'' } and ''S'' = { ''f''(''x'') : ''x'' ∈ ''R'' }.

The inverse map from the alternative realization to Conway's realization is given by ''g''(''x'') = { ''L'' | ''R'' }, where ''L'' = { ''g''(''y'') : ''y'' ∈ ''L''(''x'') } and ''R'' = { ''g''(''y'') : ''y'' ∈ ''R''(''x'') }.

===Axiomatic approach===

In another approach to the surreals, given by Alling,&lt;ref name="Alling" /&gt;  explicit construction is bypassed altogether. Instead, a set of axioms is given that any particular approach to the surreals must satisfy. Much like the [[Real numbers#Axiomatic approach|axiomatic approach]] to the reals, these axioms guarantee uniqueness up to isomorphism.

A triple &lt;math&gt;\langle \mathbf{No}, \mathrm{&lt;}, b \rangle&lt;/math&gt; is a surreal number system if and only if the following hold:

* &lt; is a [[total order]] over '''No'''
* ''b'' is a function from '''No''' onto the class of all ordinals (''b'' is called the "birthday function" on '''No''').
* Let ''A'' and ''B'' be subclasses of '''No''' such that for all ''x'' ∈ ''A'' and ''y'' ∈ ''B'', ''x'' &lt; ''y'' (using Alling's terminology, 〈 ''A'',''B'' 〉 is a "Conway cut" of '''No'''). Then there exists a unique ''z'' ∈ '''No''' such that ''b(z)'' is minimal and for all ''x'' ∈ ''A'' and all ''y'' ∈ ''B'', ''x'' &lt; ''z'' &lt; ''y''. (This axiom is often referred to as "Conway's Simplicity Theorem".)
* Furthermore, if an ordinal ''α'' is greater than ''b(x)'' for all ''x'' ∈ ''A'', ''B'', then ''b(z)'' ≤ ''α''. (Alling calls a system that satisfies this axiom a "full surreal number system".)

Both Conway's original construction and the sign-expansion construction of surreals satisfy these axioms.

Given these axioms, Alling&lt;ref name="Alling"/&gt; derives Conway's original definition of ≤ and develops surreal arithmetic.

===Simplicity hierarchy===

A construction of the surreal numbers as a maximal binary pseudo-tree with simplicity (ancestor) and ordering relations is due to [[Philip Ehrlich]],&lt;ref name="Ehr12"&gt;{{cite journal
 |author      = Philip Ehrlich
 |authorlink  = Philip Ehrlich
 |year        = 2012
 |title       = The absolute arithmetic continuum and the unification of all numbers great and small
 |journal     = The Bulletin of Symbolic Logic
 |volume      = 18
 |issue       = 1
 |pages       = 1&amp;ndash;45
 |url         = http://www.ohio.edu/people/ehrlich/Unification.pdf
 |accessdate  = 2017-06-08
 |doi         = 10.2178/bsl/1327328438
 |deadurl     = yes
 |archiveurl  = https://web.archive.org/web/20171007095144/http://www.ohio.edu/people/ehrlich/Unification.pdf
 |archivedate = 2017-10-07
 |df          = 
}}&lt;/ref&gt; The difference from the usual definition of a tree is that the set of ancestors of a vertex is well-ordered, but may not have a maximal element (immediate predecessor); in other words the order type of that set is a general ordinal number, not just a natural number. This construction fulfills Alling's axioms as well and can easily be mapped to the sign-sequence representation.

===Hahn series===

Alling&lt;ref name="Alling" /&gt;{{rp|at=th. 6.55, p. 246}} also proves that the field of surreal numbers is isomorphic (as an ordered field) to the field of [[Hahn series]] with real coefficients on the value group of surreal numbers themselves (the series representation corresponding to the normal form of a surreal number, as defined above).  This provides a connection between surreal numbers and more conventional mathematical approaches to ordered field theory.

This isomorphism makes the surreal numbers into a valued field where the valuation is the additive inverse of the exponent of the leading term in the Conway normal form, e.g., ν(ω) = -1. The valuation ring then consists of the finite surreal numbers (numbers with a real and/or an infinitesimal part). The reason for the sign inversion is that the exponents in the Conway normal form constitute a reverse well-ordered set, whereas Hahn series are formulated in terms of (non-reversed) well-ordered subsets of the value group.

==Relation to hyperreals==
Philip Ehrlich has constructed an isomorphism between Conway's maximal surreal number field and the maximal [[hyperreal field|hyperreals]] in [[von Neumann–Bernays–Gödel set theory]].&lt;ref name="Ehr12" /&gt;

==See also==
{{Portal|Mathematics}}
* [[Hyperreal number]]
* [[Non-standard analysis]]

==Notes==
{{notelist}}

==References==
{{reflist|30em}}

==Further reading==
* [[Donald Knuth]]'s original exposition: ''Surreal Numbers: How Two Ex-Students Turned on to Pure Mathematics and Found Total Happiness'', 1974, {{isbn|0-201-03812-9}}. More information can be found at [http://www-cs-faculty.stanford.edu/~knuth/sn.html the book's official homepage].
* An update of the classic 1976 book defining the surreal numbers, and exploring their connections to games: John Conway, ''On Numbers And Games'', 2nd ed., 2001, {{isbn|1-56881-127-6}}.
* An update of the first part of the 1981 book that presented surreal numbers and the analysis of games to a broader audience:  Berlekamp, Conway, and Guy, ''Winning Ways for Your Mathematical Plays'', vol. 1, 2nd ed., 2001, {{isbn|1-56881-130-6}}.
* [[Martin Gardner]], ''Penrose Tiles to Trapdoor Ciphers,''  W. H. Freeman &amp; Co., 1989, {{isbn|0-7167-1987-8}}, Chapter 4.  A non-technical overview; reprint of the 1976 ''Scientific American'' article.
* Polly Shulman, [http://discovermagazine.com/1995/dec/infinityplusonea599 "Infinity Plus One, and Other Surreal Numbers"],  ''[[Discover (magazine)|Discover]]'', December 1995.
* A detailed treatment of surreal numbers: Norman L. Alling, ''Foundations of Analysis over Surreal Number Fields'', 1987, {{isbn|0-444-70226-1}}.
* A treatment of surreals based on the sign-expansion realization: Harry Gonshor, ''An Introduction to the Theory of Surreal Numbers'', 1986, {{isbn|0-521-31205-1}}.
* A detailed philosophical development of the concept of surreal numbers as a most general concept of number: [[Alain Badiou]], ''Number and Numbers'',  New York: Polity Press, 2008, {{isbn|0-7456-3879-1}} (paperback), {{isbn|0-7456-3878-3}} (hardcover).
* {{cite book | url=http://homotopytypetheory.org/book/ | title=Homotopy Type Theory: Univalent Foundations of Mathematics | author=The Univalent Foundations Program | publisher=[[Institute for Advanced Study]] | location=Princeton, NJ | year=2013 | mr=3204653}} The surreal numbers are studied in the context of [[homotopy type theory]] in section 11.6.

==External links==
* [https://web.archive.org/web/20011224163817/http://www.maths.nott.ac.uk/personal/anw/Research/Hack/ Hackenstrings, and the 0.999... ?= 1 FAQ, by A. N. Walker], an archive of the disappeared original
* [https://web.archive.org/web/20151121050005/http://www.tondering.dk/download/sur16.pdf A gentle yet thorough introduction by Claus Tøndering]
* {{planetmath reference|id=3352|title=Surreal number}}
* [http://scientopia.org/blogs/goodmath/category/surreal-numbers/ Good Math, Bad Math: Surreal Numbers], a series of articles about surreal numbers and their variations

{{Infinity}} 
{{Number systems}}
{{Infinitesimals}}

{{DEFAULTSORT:Surreal Number}}
[[Category:Combinatorial game theory]]
[[Category:Mathematical logic]]
[[Category:Infinity]]
[[Category:Real closed field]]</text>
      <sha1>rphah2lziccx73asqr8p889hrzugbju</sha1>
    </revision>
  </page>
  <page>
    <title>Training, validation, and test sets</title>
    <ns>0</ns>
    <id>1514392</id>
    <revision>
      <id>866305231</id>
      <parentid>866304861</parentid>
      <timestamp>2018-10-29T15:23:57Z</timestamp>
      <contributor>
        <username>Maggyero</username>
        <id>9591150</id>
      </contributor>
      <minor/>
      <comment>Maggyero moved page [[Training, test, and validation sets]] to [[Training, validation, and test sets]]: same order as the FAQ reference and testing is done at the end</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="13311">{{refimprove|date=December 2012}}
In [[machine learning]], the study and construction of algorithms that can learn from and make predictions on [[data]]&lt;ref&gt;{{cite journal |title=Glossary of terms |author1=Ron Kohavi |author2=Foster Provost |journal=[[Machine Learning (journal)|Machine Learning]] |volume=30 |pages=271–274 |year=1998 |url=http://ai.stanford.edu/~ronnyk/glossary.html}}&lt;/ref&gt; is a common task. Such algorithms work by making data-driven predictions or decisions,&lt;ref name="bishop"&gt;Machine learning and pattern recognition "can be viewed as two facets of the same field."&lt;/ref&gt;{{rp|2}} through building a [[mathematical model]] from input data.

The data used to build the final model usually comes from multiple [[dataset]]s. In particular, three data sets are commonly used in different stages of the creation of the model.

The model is initially fit on a '''training dataset''',&lt;ref name="James 2013 176"&gt;{{cite book|last=James|first=Gareth|title=An Introduction to Statistical Learning: with Applications in R|date=2013|publisher=Springer|isbn=978-1461471370|page=176|url=http://www-bcf.usc.edu/~gareth/ISL/}}&lt;/ref&gt; that is a set of examples used to fit the parameters (e.g. weights of connections between neurons in [[artificial neural networks]]) of the model.&lt;ref name="Ripley 1996 354"&gt;{{cite book|last=Ripley|first=Brian|title=Pattern Recognition and Neural Networks|date=1996|publisher=Cambridge University Press|isbn=978-0521717700|page=354|url=https://www.amazon.com/Pattern-Recognition-Neural-Networks-Ripley/dp/0521717701}}&lt;/ref&gt; The model (e.g. a [[neural net]] or a [[naive Bayes classifier]]) is trained on the training dataset using a [[supervised learning]] method (e.g. [[gradient descent]] or [[stochastic gradient descent]]). In practice, the training dataset often consist of pairs of an input [[Array data structure|vector]] (or scalar) and the corresponding output vector (or scalar), which is commonly denoted as the ''target'' (or ''label''). The current model is run with the training dataset and produces a result, which is then compared with the ''target'', for each input vector in the training dataset. Based on the result of the comparison and the specific learning algorithm being used, the parameters of the model are adjusted. The model fitting can include both [[feature selection|variable selection]] and parameter [[estimation theory|estimation]].

Successively, the fitted model is used to predict the responses for the observations in a second dataset called the '''validation dataset'''.&lt;ref name="James 2013 176"/&gt; The validation dataset provides an unbiased evaluation of a model fit on the training dataset while tuning the model's [[Hyperparameter (machine learning)|hyperparameters]] &lt;ref name="Brownlee"&gt;{{cite web |url=https://machinelearningmastery.com/difference-test-validation-datasets/|title=What is the Difference Between Test and Validation Datasets?|last=Brownlee|first=Jason|access-date=12 October 2017}}&lt;/ref&gt; (e.g. the number of hidden units in a neural network&lt;ref name="Ripley 1996 354"/&gt;). Validation datasets can be used for [[Regularization (mathematics)|regularization]] by [[early stopping]]: stop training when the error on the validation dataset increases, as this is a sign of [[overfitting]] to the training dataset.&lt;ref name="prechelt_early_2012"&gt;{{Cite book
| publisher = Springer Berlin Heidelberg
| isbn = 978-3-642-35289-8
| pages = 53–67
| editor = Grégoire Montavon
| editor2 = Klaus-Robert Müller
| editor2-link = Klaus-Robert Müller
| last = Prechelt
| first = Lutz
|author2=Geneviève B. Orr
| title = Neural Networks: Tricks of the Trade
| chapter = Early Stopping — But When?
| series = Lecture Notes in Computer Science
| accessdate = 2013-12-15
| date = 2012-01-01
| chapterurl = https://link.springer.com/chapter/10.1007/978-3-642-35289-8_5
}}&lt;/ref&gt;
This simple procedure is complicated in practice by the fact that the validation dataset's error may fluctuate during training, producing multiple local minima. This complication has led to the creation of many ad-hoc rules for deciding when overfitting has truly begun.&lt;ref name="prechelt_early_2012"/&gt;

Finally, the '''test dataset''' is a dataset used to provide an unbiased evaluation of a ''final'' model fit on the training dataset.&lt;ref name="Brownlee"/&gt;. When the data in the test dataset has never been used in training (for example in cross-validation), the test dataset is also called a '''holdout dataset'''.

== Training dataset ==
A training dataset is a [[dataset]] of examples used for learning, that is to fit the parameters (e.g., weights) of, for example, a [[Classifier (machine learning)|classifier]].&lt;ref name="Ripley, B.D. 1996 p. 354"&gt;Ripley, B.D. (1996) ''Pattern Recognition and Neural Networks'', Cambridge: Cambridge University Press, p. 354&lt;/ref&gt;&lt;ref name="cann-faq"&gt;"[ftp://ftp.sas.com/pub/neural/FAQ.html#A_data Subject: What are the population, sample, training set, design set, validation set, and test set?]", [ftp://ftp.sas.com/pub/neural/FAQ.html Neural Network FAQ, part 1 of 7: Introduction] ([ftp://ftp.sas.com/pub/neural/FAQ1.txt txt]), comp.ai.neural-nets, Sarle, W.S., ed. (1997, last modified 2002-05-17)&lt;/ref&gt;

Most approaches that search through training data for empirical relationships tend to [[overfit]] the data, meaning that they can identify apparent relationships in the training data that do not hold in general.

== Validation dataset ==
A validation dataset is a [[dataset]] of examples used to tune the [[Hyperparameter (machine learning)|hyperparameter]]s (i.e. the architecture) of a classifier. It is sometimes also called the development set or the "dev set". In [[artificial neural networks]], a hyperparameter is, for example, the number of hidden units.&lt;ref name="Ripley, B.D. 1996 p. 354"/&gt;&lt;ref name="cann-faq"/&gt; It, as well as the testing set (as mentioned above), should follow the same probability distribution as the training dataset.

In order to avoid overfitting, when any [[Statistical classification|classification]] parameter needs to be adjusted, it is necessary to have a validation dataset in addition to the training and test datasets.  For example, if the most suitable classifier for the problem is sought, the training dataset is used to train the candidate algorithms, the validation dataset is used to compare their performances and decide which one to take and, finally, the test dataset is used to obtain{{Citation needed|date=October 2017}} the performance characteristics such as [[accuracy]], [[sensitivity and specificity|sensitivity]], [[Sensitivity and specificity|specificity]], [[Precision and recall#F-measure|F-measure]], and so on. The validation dataset functions as a hybrid: it is training data used by testing, but neither as part of the low-level training nor as part of the final testing {{Citation needed|date=October 2017}}.

The basic process of using a validation dataset for model selection (as part of training dataset, validation dataset, and test dataset) is:&lt;ref name="cann-faq"/&gt;&lt;ref&gt;Bishop, C.M. (1995), ''Neural Networks for Pattern Recognition'', Oxford: Oxford University Press, p. 372&lt;/ref&gt;
{{quote|
Since our goal is to find the network having the best performance on new data, the simplest approach to the comparison of different networks is to evaluate the error function using data which is independent of that used for training. Various networks are trained by minimization of an appropriate error function defined with respect to a training data set. The performance of the networks is then compared by evaluating the error function using an independent validation set, and the network having the smallest error with respect to the validation set is selected. This approach is called the ''hold out'' method. Since this procedure can itself lead to some overfitting to the validation set, the performance of the selected network should be confirmed by measuring its performance on a third independent set of data called a test set.}}

An application of this process is in [[early stopping]], where the candidate models are successive iterations of the same network, and training stops when the error on the validation set grows, choosing the previous model (the one with minimum error).

== Test dataset ==
A test dataset is a [[dataset]] that is [[independence (probability theory)|independent]] of the training dataset, but that follows the same [[probability distribution]] as the training dataset. If a model fit to the training dataset also fits the test dataset well, minimal [[overfitting]] has taken place (see figure below). A better fitting of the training dataset as opposed to the test dataset usually points to overfitting.

A test set is therefore a set of examples used only to assess the performance (i.e. generalization) of a fully specified classifier.&lt;ref name="Ripley, B.D. 1996 p. 354"/&gt;&lt;ref name="cann-faq"/&gt;

[[Image:traintest.svg|center|700px|thumb|A training set (left) and a test set (right) from the same statistical population are shown as blue points.  Two predictive models are fit to the training data.  Both fitted models are plotted with both the training and test sets.  In the training set, the [[mean squared error|MSE]] of the fit shown in orange is 4 whereas the MSE for the fit shown in green is 9.  In the test set, the MSE for the fit shown in orange is 15 and the MSE for the fit shown in green is 13.  The orange curve severely overfits the training data, since its MSE increases by almost a factor of four when comparing the test set to the training set.  The green curve overfits the training data much less, as its MSE increases by less than a factor of 2.]]

== Holdout dataset ==
Most simply, part of the original dataset can be set aside and used as a test set: this is known as the '''holdout method'''&lt;ref&gt;https://www.researchgate.net/profile/Ron_Kohavi/publication/2352264_A_Study_of_Cross-Validation_and_Bootstrap_for_Accuracy_Estimation_and_Model_Selection/links/02e7e51bcc14c5e91c000000.pdf&lt;/ref&gt;.

== Cross-validation ==
A dataset can be repeatedly split into a training dataset and a validation dataset: this is known as [[cross-validation (statistics)|cross-validation]]. These repeated partitions can be done in various ways, such as dividing into 2 equal datasets and using them as training/validation, and then validation/training, or repeatedly selecting a random subset as a validation dataset{{Citation needed|date=October 2017}}. To validate the model performance, sometimes an additional test dataset that was held out from cross-validation is used.

Cross-validation doesn't work in situations where you can't shuffle your data, most notably in time-series.

== Hierarchical classification ==
Another example of parameter adjustment is '''hierarchical classification''' (sometimes referred to as '''instance space decomposition''' &lt;ref&gt;Cohen S, Rokach L., Maimon O. Decision-tree instance-space decomposition with grouped gain-ratio In J. Information Sciences, vol. 177, issue 17, pp. 3592–3612. Elsevier. 2007.&lt;/ref&gt;), which splits a complete multi-class problem into a set of smaller classification problems. It serves for learning more accurate concepts due to simpler classification boundaries in subtasks and individual feature selection procedures for subtasks. When doing classification decomposition, the central choice is the order of combination of smaller classification steps, called the classification path. Depending on the application, it can be derived from the confusion matrix and, uncovering the reasons for typical errors and finding ways to prevent the system make those in the future. For example,&lt;ref&gt;Sidorova, J., Badia, T. "ESEDA: tool for enhanced speech emotion detection and analysis". The 4th International Conference on Automated Solutions for Cross Media Content and Multi-Channel Distribution (AXMEDIS 2008). Florence, November, 17-19, pp. 257–260. IEEE press.&lt;/ref&gt; on the validation set one can see which classes are most frequently mutually confused by the system and then the instance space decomposition is done as follows: firstly, the classification is done among well recognizable classes, and the difficult to separate classes are treated as a single joint class, and finally, as a second classification step the joint class is classified into the two initially mutually confused classes.

== See also ==
* [[Cross-validation (statistics)]]
* [[Machine learning]]
* [[Statistical classification]]
* [[List of datasets for machine learning research]]

== References ==
{{Reflist}}

== External links ==
* [ftp://ftp.sas.com/pub/neural/FAQ.html#A_data FAQ: What are the population, sample, training set, design set, validation set, and test set?]
* [https://machinelearningmastery.com/difference-test-validation-datasets/ What is the Difference Between Test and Validation Datasets? ]
* [https://www.quora.com/What-is-training-validation-and-testing-data-sets-scenario-in-machine-learning What is training, validation, and testing data-sets scenario in machine learning?]
* [https://stackoverflow.com/q/13610074/3924118 Is there a rule-of-thumb for how to divide a dataset into training and validation sets?]

[[Category:Datasets in machine learning]]
[[Category:Machine learning]]
[[Category:Validity (statistics)]]</text>
      <sha1>c45c7yvrv9mdyps2og1sze00yxxzxw3</sha1>
    </revision>
  </page>
  <page>
    <title>Xcas</title>
    <ns>0</ns>
    <id>11502667</id>
    <revision>
      <id>871589791</id>
      <parentid>864881862</parentid>
      <timestamp>2018-12-02T03:42:46Z</timestamp>
      <contributor>
        <username>GoingBatty</username>
        <id>11555324</id>
      </contributor>
      <minor/>
      <comment>/* History */Fixed [[Wikipedia:Disambiguation pages with links|links to disambiguation pages]], replaced: [[open-source]] → [[open-source software|open-source]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3683">{{Unreferenced|date=June 2016}}

{{Infobox software
| name = Xcas
| logo =
| screenshot = xcas.png
| caption =
| developer = Bernard Parisse
| released = {{Start date and age|df=yes|2000}}
| latest_release_version = 1.4.9-45
| latest_release_date = {{release date|2018|01|df=yes}}
| programming language = [[C++]]
| operating_system = [[Microsoft Windows|Windows]], [[macOS]], [[Linux]]
| genre = [[Computer algebra system]]
| license = [[GNU]] [[GNU General Public License|GPL]]
| [[website]] = {{URL|www-fourier.ujf-grenoble.fr/~parisse/giac.html}}
}}
'''Xcas''' is a user interface to '''Giac''', a [[free software|free]], basic [[Computer Algebra System]] (CAS) for Microsoft [[Microsoft Windows|Windows]], Apple [[macOS]] and [[Linux]]/[[Unix]]. Giac can be used directly inside software written in [[C++]].

Giac has a compatibility mode with [[Maple (software)|Maple]] and [[MuPAD]] and [[Qcas]] and [[ExpressionsinBar]] software and [[TI-89]], [[TI-92]], [[Voyage 200]] and [[TI-Nspire]] calculators. Users can use Giac/Xcas as well as a [[free software]] compatible with Maple to develop formal algorithms or use it in other software. Among other things Xcas can solve [[equation]]s and draw [[Graph of a function|graph]]s.

[[CmathOOoCAS]], an [[OpenOffice.org]] plugin which allows formal calculation in [[OpenOffice.org#Components|Calc]] spreadsheet and [[OpenOffice.org#Components|Writer]] word processing, uses Xcas&lt;!-- probably Giac as well? --&gt; to perform calculations.

==Features==
Here is a brief overview of what Xcas is able to do:
* [[computer algebra]];
* [[geometry]] in the plane;
* geometry in space;
* [[spreadsheet]];
* [[statistics]];
* programming;
* solve [[equation]]s even with [[Complex number|complex]] roots;
* draw [[Graph of a function|graphs]];
* calculate [[Differential calculus|differential]] (or [[derivative]]) of [[Function (mathematics)|functions]];
* calculate [[antiderivative]] of [[Function (mathematics)|functions]];
* calculate [[area]] and [[integral]] [[calculus]];

==History==
Xcas and Giac are [[open-source software|open-source]] projects developed by [[Bernard Parisse]]'s et al. at the [[Joseph Fourier University]] of [[Grenoble]] ([[Isère]]), [[France]], since 2000. It is based on experiences gained with Parisse's former project [[Erable]].

[[Pocket CAS]] and [[CAS Calc P11]] utilize Giac. In 2013, it was also integrated into [[GeoGebra]]'s CAS view.

The system was also chosen by [[Hewlett-Packard]] as the CAS for their [[HP Prime]] calculator, which utilizes the Giac/Xcas 1.4.9 engine under a dual-license scheme.

==See also==
{{Portal|Algebra|Free software}}
* [[Comparison of computer algebra systems]]

==Further reading==
* {{cite web |title=Symbolic computation and Mathematics with the calculator HP Prime |author-first=Renée |author-last=De Graeve |translator-first=Jean Michel |translator-last=Lecointre |date=2018-01-19 |orig-year=2013 |url=https://www-fourier.ujf-grenoble.fr/~parisse/hp-prime_cas.pdf |access-date=2018-01-22 |dead-url=no |archive-url= |archive-date=2018-01-22}}

==External links==
* {{Official website|www-fourier.ujf-grenoble.fr/~parisse/giac.html}}
* [//www-fourier.ujf-grenoble.fr/~parisse/xcasen.html Use Xcas online in your web browser]

{{Computer algebra systems}}

[[Category:C++ libraries]]
[[Category:Computer algebra system software for Linux]]
[[Category:Computer algebra system software for MacOS]]
[[Category:Computer algebra system software for Windows]]
[[Category:Free computer algebra systems]]
[[Category:Free mathematics software]]
[[Category:Free software programmed in C++]]
[[Category:Mathematical software]]


{{Science-software-stub}}
{{Compu-lang-stub}}</text>
      <sha1>r8kwkt29edv6a2pw4tk43sx0dd87vls</sha1>
    </revision>
  </page>
  <page>
    <title>Yoshiharu Kohayakawa</title>
    <ns>0</ns>
    <id>46789502</id>
    <revision>
      <id>857405312</id>
      <parentid>851689702</parentid>
      <timestamp>2018-08-31T13:40:54Z</timestamp>
      <contributor>
        <username>Ser Amantio di Nicolao</username>
        <id>753665</id>
      </contributor>
      <minor/>
      <comment>add authority control, test</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2697">[[File:Random Structures in the Brain 060.jpg|thumb|right|Yoshiharu Kohayakawa, in 2017.]]
'''Yoshiharu Kohayakawa''' (Japanese: 小早川美晴; born 1963) is a [[Japanese-Brazilian]] mathematician working on [[discrete mathematics]] and [[probability theory]].&lt;ref name="yoshiabc"&gt;[http://www.abc.org.br/~yoshi Brazilian Academy of Sciences – Yoshiharu Kohayakawa] {{webarchive |url=https://web.archive.org/web/20150524233404/http://www.abc.org.br/~yoshi |date=May 24, 2015 }}&lt;/ref&gt; He is known for his work on [[Szemerédi's regularity lemma]], which he extended to [[Dense graph#Sparse and tight graphs|sparser graph]]s.&lt;ref&gt;[[László Lovász]] – ''Large Networks and Graph Limits'', p. 395&lt;/ref&gt;&lt;ref&gt;Bridget S. Webb – ''Surveys in Combinatorics 2005'', p. 227&lt;/ref&gt;

==Biography==
Kohayakawa was a student of [[Béla Bollobás]] on the [[University of Cambridge]].&lt;ref&gt;[http://www.genealogy.math.ndsu.nodak.edu/id.php?id=48453 Mathematics Genealogy Project – Yoshiharu Kohayakawa]&lt;/ref&gt;

According to [[Google Scholar]], as of December 8, 2017, Kohayakawa's works have been cited over 2810 times, and his [[h-index]] is 31.&lt;ref&gt;[https://scholar.google.com/citations?user=EC6p9kIAAAAJ Google Scholar Profile – Yoshiharu Kohayakawa]&lt;/ref&gt;

He is a titular member of the [[Brazilian Academy of Sciences]].&lt;ref name="yoshiabc" /&gt;

In 2000, five American researchers received an [[National Science Foundation|USA NSF]] Research Grant in the value of $20,000 to go to Brazil to work in collaboration with him on mathematical problems.&lt;ref&gt;[https://www.collectiveip.com/grants/NSF:0072064 U.S.-Brazil Cooperative Research: Problems on Random Graphs (Structures) and Set Systems: NSG GRANT 0072064]&lt;/ref&gt;

Kohayakawa has an [[Erdős number]] of 1.&lt;ref&gt;[http://www.cos.ufrj.br/~celina/erdos.html Celina Miraglia Herrera – My Erdős number]&lt;/ref&gt;&lt;ref&gt;He wrote [http://www.sciencedirect.com/science/article/pii/S0012365X97000046 "The size of the largest bipartite subgraphs", on ''Discrete Mathematics''] with Erdős and Gyárfás&lt;/ref&gt;

He was awarded the 2018 [[Fulkerson Prize]].

==References==
{{reflist}}

==External links==
*[http://www.ime.usp.br/~yoshi Home Page of Yoshiharu Kohayakawa at the University of São Paulo]

{{authority control}}

{{DEFAULTSORT:Kohayakawa, Yoshiharu}}
[[Category:1963 births]]
[[Category:Living people]]
[[Category:Brazilian mathematicians]]
[[Category:20th-century mathematicians]]
[[Category:21st-century mathematicians]]
[[Category:Members of the Brazilian Academy of Sciences]]
[[Category:Graph theorists]]
[[Category:Alumni of the University of Cambridge]]
[[Category:University of São Paulo faculty]]
[[Category:Expatriate academics in Brazil]]</text>
      <sha1>5z7n70ohzb7pzqri36767a75am8wjru</sha1>
    </revision>
  </page>
  <page>
    <title>Łukasiewicz–Moisil algebra</title>
    <ns>0</ns>
    <id>43613625</id>
    <revision>
      <id>861654860</id>
      <parentid>801344556</parentid>
      <timestamp>2018-09-29T01:00:44Z</timestamp>
      <contributor>
        <username>Ketiltrout</username>
        <id>202276</id>
      </contributor>
      <minor/>
      <comment>dab</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="8940">'''Łukasiewicz–Moisil algebras''' ('''LM&lt;sub&gt;''n''&lt;/sub&gt; algebras''') were introduced in the 1940s by [[Grigore Moisil]] (initially under the name of '''Łukasiewicz algebras'''&lt;ref&gt;Andrei Popescu, ''[https://www.jstor.org/stable/20016741 Łukasiewicz-Moisil Relation Algebras]'', Studia Logica, Vol. 81, No. 2 (Nov., 2005), pp. 167-189&lt;/ref&gt;) in the hope of giving [[Algebraic semantics (mathematical logic)|algebraic semantics]] for the ''n''-valued [[Łukasiewicz logic]]. However, in 1956 Alan Rose discovered that for ''n'' ≥ 5, the Łukasiewicz–Moisil algebra does not [[model (mathematical logic)|model]] the Łukasiewicz logic. A faithful model for the ℵ&lt;sub&gt;0&lt;/sub&gt;-valued (infinitely-many-valued) [[Łukasiewicz–Tarski logic]] was provided by [[C. C. Chang]]'s [[MV-algebra]], introduced in 1958. For the axiomatically more complicated (finite) ''n''-valued Łukasiewicz logics, suitable algebras were published in 1977 by [[Revaz Grigolia]] and called MV&lt;sub&gt;''n''&lt;/sub&gt;-algebras.&lt;ref name="Ciungu2013"&gt;{{cite book|author=Lavinia Corina Ciungu|title=Non-commutative Multiple-Valued Logic Algebras|year=2013|publisher=Springer|isbn=978-3-319-01589-7|pages=vii–viii}}&lt;/ref&gt; MV&lt;sub&gt;''n''&lt;/sub&gt;-algebras are a subclass of LM&lt;sub&gt;''n''&lt;/sub&gt;-algebras, and the inclusion is strict for ''n'' ≥ 5.&lt;ref name="iorg1"&gt;Iorgulescu, A.: Connections between MV&lt;sub&gt;''n''&lt;/sub&gt;-algebras and ''n''-valued Łukasiewicz-Moisil algebras—I. Discrete Math. 181, 155–177 (1998) {{doi|10.1016/S0012-365X(97)00052-6}}&lt;/ref&gt; In 1982 [[Roberto Cignoli]] published some additional constraints that added to LM&lt;sub&gt;''n''&lt;/sub&gt;-algebras produce proper models for ''n''-valued Łukasiewicz logic; Cignoli called his discovery '''proper Łukasiewicz algebras'''.&lt;ref&gt;R. Cignoli, Proper n-Valued Łukasiewicz Algebras as S-Algebras of Łukasiewicz ''n''-Valued Propositional Calculi, Studia Logica, 41, 1982, 3–16, {{doi|10.1007/BF00373490}}&lt;/ref&gt;

Moisil however published in 1964 a logic to match his algebra (in the general ''n'' ≥ 5 case), now called '''Moisil logic'''.&lt;ref name="Ciungu2013"/&gt; After coming in contact with [[Lotfi A. Zadeh|Zadeh]]'s [[fuzzy logic]], in 1968 Moisil also introduced an infinitely-many-valued logic variant and its corresponding '''LM&lt;sub&gt;''θ''&lt;/sub&gt; algebras'''.&lt;ref&gt;Georgescu, G., Iourgulescu, A., Rudeanu, S.: "[http://journal.univagora.ro/download/pdf/28.pdf Grigore C. Moisil (1906–1973) and his School in Algebraic Logic]." International Journal of Computers, Communications &amp; Control 1, 81–99 (2006)&lt;/ref&gt; Although the [[Łukasiewicz implication]] cannot be defined in a LM&lt;sub&gt;''n''&lt;/sub&gt; algebra for ''n'' ≥ 5, the [[Heyting implication]] can be, i.e. LM&lt;sub&gt;''n''&lt;/sub&gt; algebras are [[Heyting algebra]]s; as a result, Moisil logics can also be developed (from a purely logical standpoint) in the framework of Brower’s [[intuitionistic logic]].&lt;ref name="Geo"&gt;{{Cite journal | doi = 10.1007/s10516-005-4145-6| title = N-Valued Logics and Łukasiewicz–Moisil Algebras| journal = Axiomathes| volume = 16| pages = 123| year = 2006| last1 = Georgescu | first1 = G. }}, Theorem 3.6&lt;/ref&gt;

== Definition ==
A LM&lt;sub&gt;''n''&lt;/sub&gt; algebra is a [[De Morgan algebra]] (a notion also introduced by Moisil) with ''n''-1 additional unary, "modal" operations: &lt;math&gt;\nabla_1, \ldots, \nabla_{n-1}&lt;/math&gt;, i.e. an algebra of [[Signature (logic)|signature]] &lt;math&gt;(A, \vee, \wedge, \neg, \nabla_{j \in J}, 0, 1)&lt;/math&gt; where ''J'' = { 1, 2, ... ''n''-1 }. (Some sources denote the additional operators as &lt;math&gt;\nabla^n_{j \in J}&lt;/math&gt; to emphasize that they depend on the order ''n'' of the algebra.&lt;ref name="cign07"&gt;Cignoli, R., “The algebras of Lukasiewicz many-valued logic - A historical overview,” in S. Aguzzoli et al.(Eds.), Algebraic and Proof-theoretic Aspects of Non-classical Logics, LNAI 4460, Springer, 2007, 69-83. {{doi|10.1007/978-3-540-75939-3_5}}&lt;/ref&gt;) The additional unary operators ∇&lt;sub&gt;''j''&lt;/sub&gt; must satisfy the following axioms for all ''x'', ''y'' ∈ ''A'' and ''j'', ''k'' ∈ ''J'':&lt;ref name="iorg1"/&gt;

# &lt;math&gt;\nabla_j(x \vee y) = (\nabla_j\; x) \vee (\nabla_j\; y)&lt;/math&gt;
# &lt;math&gt;\nabla_j\;x \vee \neg \nabla_j\;x = 1&lt;/math&gt;
# &lt;math&gt;\nabla_j (\nabla_k\;x) = \nabla_k\;x&lt;/math&gt;
# &lt;math&gt;\nabla_j \neg x = \neg \nabla_{n-j}\;x &lt;/math&gt;
# &lt;math&gt;\nabla_1\;x\leq \nabla_2\;x\cdots\leq \nabla_{n-1}\;x&lt;/math&gt;
# if &lt;math&gt;\nabla_j\;x = \nabla_j\;y&lt;/math&gt; for all ''j'' ∈ ''J'', then ''x'' = ''y''.

(The adjective "modal" is related to the [ultimately failed] program of Tarksi and Łukasiewicz to axiomatize [[modal logic]] using many-valued logic.)

== Elementary properties ==
The duals of some of the above axioms follow as properties:&lt;ref name="iorg1"/&gt;
* &lt;math&gt;\nabla_j(x \wedge y) = (\nabla_j\; x) \wedge (\nabla_j\; y)&lt;/math&gt;
* &lt;math&gt;\nabla_j\;x \wedge \neg \nabla_j\;x = 0&lt;/math&gt;

Additionally: &lt;math&gt;\nabla_j\;0 =0&lt;/math&gt; and &lt;math&gt;\nabla_j\;1 =1&lt;/math&gt;.&lt;ref name="iorg1"/&gt; In other words, the unary "modal" operations &lt;math&gt;\nabla_j&lt;/math&gt; are lattice [[endomorphism]]s.&lt;ref name="Geo"/&gt;

== Examples ==
LM&lt;sub&gt;2&lt;/sub&gt; algebras are the [[Boolean algebra (structure)|Boolean algebra]]s. The canonical Łukasiewicz algebra &lt;math&gt;\mathcal{L}_n&lt;/math&gt; that Moisil had in mind were over the set ''L_n'' = {{nowrap| { 0, 1/(''n'' − 1), 2/(''n'' − 1), ..., (''n''-2)/(''n''-1), 1 }}} with negation &lt;math&gt;\neg x = 1-x&lt;/math&gt; conjunction &lt;math&gt;x \wedge y = \min\{x, y \}&lt;/math&gt; and disjunction &lt;math&gt;x \vee y = \max\{x, y \}&lt;/math&gt; and the unary "modal" operators:
:&lt;math&gt;\nabla_j\left(\frac{i}{n-1}\right)= \; \begin{cases} 
 0 &amp; \mbox{if } i+j &lt; n \\
 1 &amp; \mbox{if } i+j \geq n \\
\end{cases}
\quad i \in \{0\} \cup J,\; j \in J.
&lt;/math&gt;

If ''B'' is a Boolean algebra, then the algebra over the set ''B''&lt;sup&gt;[2]&lt;/sup&gt; ≝ {(''x'', ''y'') ∈ ''B''×''B'' | ''x'' ≤ ''y''} with the lattice operations defined [[pointwise]] and with ¬(''x'', ''y'') ≝ (¬''y'', ¬''x''), and with the unary "modal" operators ∇&lt;sub&gt;2&lt;/sub&gt;(''x'', ''y'') ≝ (''y'', ''y'') and ∇&lt;sub&gt;1&lt;/sub&gt;(''x'', ''y'') = ¬∇&lt;sub&gt;2&lt;/sub&gt;¬(''x'', ''y'') = (''x'', ''x'') [derived by axiom 4] is a three-valued Łukasiewicz algebra.&lt;ref name="cign07"/&gt;

== Representation ==
Moisil proved that every LM&lt;sub&gt;''n''&lt;/sub&gt; algebra can be [[Embedding#Universal_algebra_and_model_theory|embedded]] in a [[direct product]] (of copies) of the canonical &lt;math&gt;\mathcal{L}_n&lt;/math&gt; algebra. As a corollary, every LM&lt;sub&gt;''n''&lt;/sub&gt; algebra is a [[subdirect product]] of [[Substructure (mathematics)|subalgebra]]s of &lt;math&gt;\mathcal{L}_n&lt;/math&gt;.&lt;ref name="iorg1"/&gt;

The Heyting implication can be defined as:&lt;ref name="Geo"/&gt;
:&lt;math&gt;x \Rightarrow y\; \overset{\mathrm{def}}{=}\;y \vee  \bigwedge_{j\in J}(\neg\nabla_j\;x) \vee (\nabla_j\;y)&lt;/math&gt;

[[Antonio Monteiro (mathematician)|Antonio Monteiro]] showed that for every [[monadic Boolean algebra]] one can construct a trivalent Łukasiewicz algebra (by taking certain equivalence classes) and that any trivalent Łukasiewicz algebra is isomorphic to a Łukasiewicz algebra thus derived from a monadic Boolean algebra.&lt;ref name="cign07"/&gt;&lt;ref&gt;Monteiro, António [http://purl.pt/2926 "Sur les algèbres de Heyting symétriques."] Portugaliae mathematica 39.1–4 (1980): 1–237. Chapter 7. pp. 204-206&lt;/ref&gt; Cignoli summarizes the importance of this result as: "Since it was shown by Halmos that monadic Boolean algebras are the algebraic counterpart of classical first order monadic calculus, Monteiro considered that the representation of three-valued Łukasiewicz algebras into monadic Boolean algebras gives a proof of the consistency of Łukasiewicz three-valued logic relative to classical logic."&lt;ref name="cign07"/&gt;

== References ==
{{reflist}}

== Further reading ==
* {{cite book|author1=Raymond Balbes|author2=Philip Dwinger|title=Distributive lattices|year=1975|publisher=University of Missouri Press|isbn=978-0-8262-0163-8|at=Chapter IX. De Morgan Algebras and Lukasiewicz Algebras}}
* Boicescu, V., Filipoiu, A., Georgescu, G., Rudeanu, S.: Łukasiewicz-Moisil Algebras. North-Holland, Amsterdam (1991) {{isbn|0080867898}}
* Iorgulescu, A.: Connections between MV&lt;sub&gt;''n''&lt;/sub&gt;-algebras and ''n''-valued Łukasiewicz–Moisil algebras—II. Discrete Math. 202, 113–134 (1999) {{doi|10.1016/S0012-365X(98)00289-1}}
* Iorgulescu, A.: Connections between MV&lt;sub&gt;''n''&lt;/sub&gt;-algebras and ''n''-valued Łukasiewicz-Moisil—III. Unpublished Manuscript
* Iorgulescu, A.: Connections between MV&lt;sub&gt;''n''&lt;/sub&gt;-algebras and ''n''-valued Łukasiewicz–Moisil algebras—IV. J. Univers. Comput. Sci. 6, 139–154 (2000) {{doi|10.3217/jucs-006-01-0139}}
* R. Cignoli, Algebras de Moisil de orden n, Ph.D. Thesis, Universidad National del Sur, Bahia Blanca, 1969
* http://projecteuclid.org/download/pdf_1/euclid.ndjfl/1093635424

{{DEFAULTSORT:Lukasiewicz-Moisil algebra}}
[[Category:Algebraic logic]]
[[Category:Ockham algebras]]</text>
      <sha1>2v3qdklv2pictysvocgnhfycicd4vz6</sha1>
    </revision>
  </page>
</mediawiki>
